;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/06/2020 09:45:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF00DEFC2  	GOTO        7044
_interrupt:
;compy.c,171 :: 		void interrupt() {
0x0008	0xF01FC000  	MOVFF       R0, 31
0x000C	0xF01EC001  	MOVFF       R1, 30
0x0010	0xF01DC002  	MOVFF       R2, 29
0x0014	0xF01CC004  	MOVFF       R4, 28
0x0018	0xF01BC005  	MOVFF       R5, 27
0x001C	0xF01AC008  	MOVFF       R8, 26
0x0020	0xF019C009  	MOVFF       R9, 25
0x0024	0xF018C00A  	MOVFF       R10, 24
0x0028	0xF017C00B  	MOVFF       R11, 23
0x002C	0xF016C00C  	MOVFF       R12, 22
0x0030	0xF015C00D  	MOVFF       R13, 21
;compy.c,172 :: 		if(int0if_bit)
0x0034	0xA2F2      	BTFSS       INT0IF_bit, 1 
0x0036	0xD014      	BRA         L_interrupt29
;compy.c,174 :: 		cnt2++;
0x0038	0x4A49      	INFSNZ      _cnt2, 1 
0x003A	0x2A4A      	INCF        _cnt2+1, 1 
;compy.c,175 :: 		if (cnt2 > 180) {
0x003C	0x0E80      	MOVLW       128
0x003E	0x6E00      	MOVWF       R0 
0x0040	0x0E80      	MOVLW       128
0x0042	0x184A      	XORWF       _cnt2+1, 0 
0x0044	0x5C00      	SUBWF       R0, 0 
0x0046	0xE102      	BNZ         L__interrupt160
0x0048	0x5049      	MOVF        _cnt2, 0 
0x004A	0x08B4      	SUBLW       180
L__interrupt160:
0x004C	0xE208      	BC          L_interrupt30
;compy.c,176 :: 		IS_FINISH = 1;
0x004E	0x0E01      	MOVLW       1
0x0050	0x6E2C      	MOVWF       _IS_FINISH 
0x0052	0x0E00      	MOVLW       0
0x0054	0x6E2D      	MOVWF       _IS_FINISH+1 
;compy.c,177 :: 		IS_GAME_OVER = 1;
0x0056	0x0E01      	MOVLW       1
0x0058	0x6E4B      	MOVWF       _IS_GAME_OVER 
0x005A	0x0E00      	MOVLW       0
0x005C	0x6E4C      	MOVWF       _IS_GAME_OVER+1 
;compy.c,178 :: 		}
L_interrupt30:
;compy.c,179 :: 		int0if_bit = 0;   // clear int0if_bit
0x005E	0x92F2      	BCF         INT0IF_bit, 1 
;compy.c,180 :: 		}
L_interrupt29:
;compy.c,182 :: 		if (TMR2IF_bit) {
0x0060	0xA29E      	BTFSS       TMR2IF_bit, 1 
0x0062	0xD043      	BRA         L_interrupt31
;compy.c,183 :: 		cnt++;
0x0064	0x4A47      	INFSNZ      _cnt, 1 
0x0066	0x2A48      	INCF        _cnt+1, 1 
;compy.c,184 :: 		if (cnt >= 10000) {
0x0068	0x0E80      	MOVLW       128
0x006A	0x1848      	XORWF       _cnt+1, 0 
0x006C	0x6E00      	MOVWF       R0 
0x006E	0x0E80      	MOVLW       128
0x0070	0x0A27      	XORLW       39
0x0072	0x5C00      	SUBWF       R0, 0 
0x0074	0xE102      	BNZ         L__interrupt161
0x0076	0x0E10      	MOVLW       16
0x0078	0x5C47      	SUBWF       _cnt, 0 
L__interrupt161:
0x007A	0xE302      	BNC         L_interrupt32
;compy.c,185 :: 		cnt = 0;
0x007C	0x6A47      	CLRF        _cnt 
0x007E	0x6A48      	CLRF        _cnt+1 
;compy.c,186 :: 		}
L_interrupt32:
;compy.c,187 :: 		if (cnt % 5000 == 0) {
0x0080	0x0E88      	MOVLW       136
0x0082	0x6E04      	MOVWF       R4 
0x0084	0x0E13      	MOVLW       19
0x0086	0x6E05      	MOVWF       R5 
0x0088	0xF000C047  	MOVFF       _cnt, R0
0x008C	0xF001C048  	MOVFF       _cnt+1, R1
0x0090	0xDBFD      	RCALL       _Div_16x16_S
0x0092	0xF000C008  	MOVFF       R8, R0
0x0096	0xF001C009  	MOVFF       R9, R1
0x009A	0x0E00      	MOVLW       0
0x009C	0x1801      	XORWF       R1, 0 
0x009E	0xE102      	BNZ         L__interrupt162
0x00A0	0x0E00      	MOVLW       0
0x00A2	0x1800      	XORWF       R0, 0 
L__interrupt162:
0x00A4	0xE107      	BNZ         L_interrupt33
;compy.c,188 :: 		if (isStarted) {
0x00A6	0x5040      	MOVF        _isStarted, 0 
0x00A8	0x1041      	IORWF       _isStarted+1, 0 
0x00AA	0xE004      	BZ          L_interrupt34
;compy.c,189 :: 		generate_food_bool = 1;
0x00AC	0x0E01      	MOVLW       1
0x00AE	0x6E3C      	MOVWF       _generate_food_bool 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x6E3D      	MOVWF       _generate_food_bool+1 
;compy.c,190 :: 		}
L_interrupt34:
;compy.c,191 :: 		}
L_interrupt33:
;compy.c,192 :: 		if (cnt % 1000 == 0) {
0x00B4	0x0EE8      	MOVLW       232
0x00B6	0x6E04      	MOVWF       R4 
0x00B8	0x0E03      	MOVLW       3
0x00BA	0x6E05      	MOVWF       R5 
0x00BC	0xF000C047  	MOVFF       _cnt, R0
0x00C0	0xF001C048  	MOVFF       _cnt+1, R1
0x00C4	0xDBE3      	RCALL       _Div_16x16_S
0x00C6	0xF000C008  	MOVFF       R8, R0
0x00CA	0xF001C009  	MOVFF       R9, R1
0x00CE	0x0E00      	MOVLW       0
0x00D0	0x1801      	XORWF       R1, 0 
0x00D2	0xE102      	BNZ         L__interrupt163
0x00D4	0x0E00      	MOVLW       0
0x00D6	0x1800      	XORWF       R0, 0 
L__interrupt163:
0x00D8	0xE107      	BNZ         L_interrupt35
;compy.c,193 :: 		if (isStarted) {
0x00DA	0x5040      	MOVF        _isStarted, 0 
0x00DC	0x1041      	IORWF       _isStarted+1, 0 
0x00DE	0xE004      	BZ          L_interrupt36
;compy.c,194 :: 		move_ghost_bool = 1;
0x00E0	0x0E01      	MOVLW       1
0x00E2	0x6E39      	MOVWF       _move_ghost_bool 
0x00E4	0x0E00      	MOVLW       0
0x00E6	0x6E3A      	MOVWF       _move_ghost_bool+1 
;compy.c,195 :: 		}
L_interrupt36:
;compy.c,196 :: 		}
L_interrupt35:
;compy.c,197 :: 		TMR2IF_bit = 0;        // clear TMR2IF
0x00E8	0x929E      	BCF         TMR2IF_bit, 1 
;compy.c,198 :: 		}
L_interrupt31:
;compy.c,199 :: 		}
L__interrupt159:
0x00EA	0xF000C01F  	MOVFF       31, R0
0x00EE	0xF001C01E  	MOVFF       30, R1
0x00F2	0xF002C01D  	MOVFF       29, R2
0x00F6	0xF004C01C  	MOVFF       28, R4
0x00FA	0xF005C01B  	MOVFF       27, R5
0x00FE	0xF008C01A  	MOVFF       26, R8
0x0102	0xF009C019  	MOVFF       25, R9
0x0106	0xF00AC018  	MOVFF       24, R10
0x010A	0xF00BC017  	MOVFF       23, R11
0x010E	0xF00CC016  	MOVFF       22, R12
0x0112	0xF00DC015  	MOVFF       21, R13
0x0116	0x0011      	RETFIE      1
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0118	0x0000      	NOP
0x011A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x011C	0x0012      	RETURN      0
; end of _Delay_1us
_T6963C_waitReady:
;__Lib_T6963C.c,60 :: 		
;__Lib_T6963C.c,62 :: 		
0x011E	0x8082      	BSF         T6963C_ctrlcd, BitPos(T6963C_ctrlcd+0) 
;__Lib_T6963C.c,66 :: 		
0x0120	0x0EFF      	MOVLW       255
0x0122	0x6E95      	MOVWF       T6963C_dataPort+18 
;__Lib_T6963C.c,68 :: 		
0x0124	0x9282      	BCF         T6963C_ctrlrd, BitPos(T6963C_ctrlrd+0) 
;__Lib_T6963C.c,70 :: 		
L_T6963C_waitReady0:
0x0126	0x0E03      	MOVLW       3
0x0128	0x1483      	ANDWF       T6963C_dataPort, 0 
0x012A	0x6E01      	MOVWF       R1 
;__Lib_T6963C.c,71 :: 		
0x012C	0x5001      	MOVF        R1, 0 
0x012E	0x0A03      	XORLW       3
0x0130	0xE001      	BZ          L_T6963C_waitReady1
;__Lib_T6963C.c,72 :: 		
0x0132	0xD7F9      	BRA         L_T6963C_waitReady0
L_T6963C_waitReady1:
;__Lib_T6963C.c,73 :: 		
0x0134	0x8282      	BSF         T6963C_ctrlrd, BitPos(T6963C_ctrlrd+0) 
;__Lib_T6963C.c,74 :: 		
0x0136	0x0012      	RETURN      0
; end of _T6963C_waitReady
_T6963C_writeData:
;__Lib_T6963C.c,79 :: 		
;__Lib_T6963C.c,81 :: 		
0x0138	0x9082      	BCF         T6963C_ctrlcd, BitPos(T6963C_ctrlcd+0) 
;__Lib_T6963C.c,84 :: 		
0x013A	0x6A95      	CLRF        T6963C_dataPort+18 
;__Lib_T6963C.c,85 :: 		
0x013C	0xFF83C298  	MOVFF       FARG_T6963C_writeData_mydata, T6963C_dataPort
;__Lib_T6963C.c,86 :: 		
0x0140	0x9482      	BCF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,87 :: 		
0x0142	0xDFEA      	RCALL       _Delay_1us
0x0144	0xDFE9      	RCALL       _Delay_1us
0x0146	0xDFE8      	RCALL       _Delay_1us
;__Lib_T6963C.c,91 :: 		
0x0148	0x8482      	BSF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,92 :: 		
0x014A	0x0012      	RETURN      0
; end of _T6963C_writeData
_T6963C_writeCommand:
;__Lib_T6963C.c,97 :: 		
;__Lib_T6963C.c,99 :: 		
0x014C	0xDFE8      	RCALL       _T6963C_waitReady
;__Lib_T6963C.c,102 :: 		
0x014E	0x6A95      	CLRF        T6963C_dataPort+18 
;__Lib_T6963C.c,103 :: 		
0x0150	0xFF83C298  	MOVFF       FARG_T6963C_writeCommand_mydata, T6963C_dataPort
;__Lib_T6963C.c,104 :: 		
0x0154	0x9482      	BCF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,105 :: 		
0x0156	0xDFE0      	RCALL       _Delay_1us
0x0158	0xDFDF      	RCALL       _Delay_1us
0x015A	0xDFDE      	RCALL       _Delay_1us
;__Lib_T6963C.c,107 :: 		
0x015C	0x8482      	BSF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,108 :: 		
0x015E	0x0012      	RETURN      0
; end of _T6963C_writeCommand
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0160	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0162	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0164	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0166	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x0168	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x016A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x016C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x016E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0170	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0172	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0174	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0176	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0178	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x017A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x017C	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x017E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0180	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0182	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0184	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0186	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0188	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x018A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x018C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x018E	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0190	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0192	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
0x0194	0x0012      	RETURN      0
; end of _Div_16x16_U
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x0196	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x0198	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x019A	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x019C	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x019E	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x01A0	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x01A4	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x01A8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x01AA	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x01AC	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x01B0	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x01B4	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x01B6	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x01B8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x01BA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x01BC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x01BE	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x01C0	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x01C2	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x01C4	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x01C6	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x01C8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x01CA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x01CC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x01CE	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x01D0	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x01D2	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x01D4	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x01D8	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x01DC	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x01E0	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x01E4	0x0012      	RETURN      0
; end of _Mul_16x16_U
_T6963C_setPtr:
;__Lib_T6963C.c,420 :: 		
;__Lib_T6963C.c,425 :: 		
0x01E6	0xF000C295  	MOVFF       FARG_T6963C_setPtr_p+1, R0
0x01EA	0x6A01      	CLRF        R1 
0x01EC	0xF297C000  	MOVFF       R0, T6963C_setPtr_addrH_L0
;__Lib_T6963C.c,426 :: 		
0x01F0	0xF298C294  	MOVFF       FARG_T6963C_setPtr_p, FARG_T6963C_writeData_mydata
0x01F4	0xDFA1      	RCALL       _T6963C_writeData
;__Lib_T6963C.c,427 :: 		
0x01F6	0xF298C297  	MOVFF       T6963C_setPtr_addrH_L0, FARG_T6963C_writeData_mydata
0x01FA	0xDF9E      	RCALL       _T6963C_writeData
;__Lib_T6963C.c,428 :: 		
0x01FC	0xF298C296  	MOVFF       FARG_T6963C_setPtr_c, FARG_T6963C_writeCommand_mydata
0x0200	0xDFA5      	RCALL       _T6963C_writeCommand
;__Lib_T6963C.c,429 :: 		
0x0202	0x0012      	RETURN      0
; end of _T6963C_setPtr
_T6963C_sprite:
;__Lib_T6963C.c,184 :: 		
;__Lib_T6963C.c,190 :: 		
0x0204	0x0102      	MOVLB       2
0x0206	0x6B92      	CLRF        T6963C_sprite_addr_L0, 1
0x0208	0x6B93      	CLRF        T6963C_sprite_addr_L0+1, 1
;__Lib_T6963C.c,192 :: 		
0x020A	0xF004C066  	MOVFF       _T6963C_fontWidth, R4
0x020E	0xF005C067  	MOVFF       _T6963C_fontWidth+1, R5
0x0212	0xF000C287  	MOVFF       FARG_T6963C_sprite_px, R0
0x0216	0x0E00      	MOVLW       0
0x0218	0x6E01      	MOVWF       R1 
0x021A	0xDFA2      	RCALL       _Div_16x16_U
0x021C	0xF28EC000  	MOVFF       R0, T6963C_sprite_cx_L0
0x0220	0xF28FC001  	MOVFF       R1, T6963C_sprite_cx_L0+1
;__Lib_T6963C.c,193 :: 		
0x0224	0xF000C288  	MOVFF       FARG_T6963C_sprite_py, R0
0x0228	0x0E00      	MOVLW       0
0x022A	0x6E01      	MOVWF       R1 
0x022C	0xF004C062  	MOVFF       _T6963C_txtCols, R4
0x0230	0xF005C063  	MOVFF       _T6963C_txtCols+1, R5
0x0234	0xDFB0      	RCALL       _Mul_16x16_U
0x0236	0x518E      	MOVF        T6963C_sprite_cx_L0, 0, 1
0x0238	0x2400      	ADDWF       R0, 0 
0x023A	0x6F92      	MOVWF       T6963C_sprite_addr_L0, 1
0x023C	0x518F      	MOVF        T6963C_sprite_cx_L0+1, 0, 1
0x023E	0x2001      	ADDWFC      R1, 0 
0x0240	0x6F93      	MOVWF       T6963C_sprite_addr_L0+1, 1
0x0242	0x0100      	MOVLB       0
0x0244	0x518B      	MOVF        _T6963C_grHomeAddr, 0, 1
0x0246	0x0102      	MOVLB       2
0x0248	0x2792      	ADDWF       T6963C_sprite_addr_L0, 1, 1
0x024A	0x0100      	MOVLB       0
0x024C	0x518C      	MOVF        _T6963C_grHomeAddr+1, 0, 1
0x024E	0x0102      	MOVLB       2
0x0250	0x2393      	ADDWFC      T6963C_sprite_addr_L0+1, 1, 1
;__Lib_T6963C.c,198 :: 		
0x0252	0x0E07      	MOVLW       7
0x0254	0x158C      	ANDWF       FARG_T6963C_sprite_sx, 0, 1
0x0256	0x6E01      	MOVWF       R1 
0x0258	0x5001      	MOVF        R1, 0 
0x025A	0x0800      	SUBLW       0
0x025C	0xE20D      	BC          L_T6963C_sprite6
;__Lib_T6963C.c,200 :: 		
0x025E	0x338C      	RRCF        FARG_T6963C_sprite_sx, 1, 1
0x0260	0x9F8C      	BCF         FARG_T6963C_sprite_sx, 7, 1
0x0262	0x338C      	RRCF        FARG_T6963C_sprite_sx, 1, 1
0x0264	0x9F8C      	BCF         FARG_T6963C_sprite_sx, 7, 1
0x0266	0x338C      	RRCF        FARG_T6963C_sprite_sx, 1, 1
0x0268	0x9F8C      	BCF         FARG_T6963C_sprite_sx, 7, 1
;__Lib_T6963C.c,201 :: 		
0x026A	0x2B8C      	INCF        FARG_T6963C_sprite_sx, 1, 1
;__Lib_T6963C.c,202 :: 		
0x026C	0x378C      	RLCF        FARG_T6963C_sprite_sx, 1, 1
0x026E	0x918C      	BCF         FARG_T6963C_sprite_sx, 0, 1
0x0270	0x378C      	RLCF        FARG_T6963C_sprite_sx, 1, 1
0x0272	0x918C      	BCF         FARG_T6963C_sprite_sx, 0, 1
0x0274	0x378C      	RLCF        FARG_T6963C_sprite_sx, 1, 1
0x0276	0x918C      	BCF         FARG_T6963C_sprite_sx, 0, 1
;__Lib_T6963C.c,203 :: 		
L_T6963C_sprite6:
;__Lib_T6963C.c,208 :: 		
L_T6963C_sprite7:
0x0278	0xF000C28D  	MOVFF       FARG_T6963C_sprite_sy, R0
0x027C	0x078D      	DECF        FARG_T6963C_sprite_sy, 1, 1
0x027E	0x5200      	MOVF        R0, 1 
0x0280	0xE040      	BZ          L_T6963C_sprite8
;__Lib_T6963C.c,210 :: 		
0x0282	0xDF4D      	RCALL       _T6963C_waitReady
;__Lib_T6963C.c,212 :: 		
0x0284	0xF294C292  	MOVFF       T6963C_sprite_addr_L0, FARG_T6963C_setPtr_p
0x0288	0xF295C293  	MOVFF       T6963C_sprite_addr_L0+1, FARG_T6963C_setPtr_p+1
0x028C	0x0E24      	MOVLW       36
0x028E	0x0102      	MOVLB       2
0x0290	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x0292	0xDFA9      	RCALL       _T6963C_setPtr
;__Lib_T6963C.c,214 :: 		
0x0294	0x0EB0      	MOVLW       176
0x0296	0x0102      	MOVLB       2
0x0298	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x029A	0xDF58      	RCALL       _T6963C_writeCommand
;__Lib_T6963C.c,216 :: 		
0x029C	0x9082      	BCF         T6963C_ctrlcd, BitPos(T6963C_ctrlcd+0) 
;__Lib_T6963C.c,220 :: 		
0x029E	0x6A95      	CLRF        T6963C_dataPort+18 
;__Lib_T6963C.c,225 :: 		
0x02A0	0x0102      	MOVLB       2
0x02A2	0x6B90      	CLRF        T6963C_sprite_i_L0, 1
0x02A4	0x6B91      	CLRF        T6963C_sprite_i_L0+1, 1
L_T6963C_sprite9:
0x02A6	0xF004C066  	MOVFF       _T6963C_fontWidth, R4
0x02AA	0xF005C067  	MOVFF       _T6963C_fontWidth+1, R5
0x02AE	0xF000C28C  	MOVFF       FARG_T6963C_sprite_sx, R0
0x02B2	0x0E00      	MOVLW       0
0x02B4	0x6E01      	MOVWF       R1 
0x02B6	0xDF54      	RCALL       _Div_16x16_U
0x02B8	0x5001      	MOVF        R1, 0 
0x02BA	0x5D91      	SUBWF       T6963C_sprite_i_L0+1, 0, 1
0x02BC	0xE102      	BNZ         L__T6963C_sprite38
0x02BE	0x5000      	MOVF        R0, 0 
0x02C0	0x5D90      	SUBWF       T6963C_sprite_i_L0, 0, 1
L__T6963C_sprite38:
0x02C2	0xE216      	BC          L_T6963C_sprite10
;__Lib_T6963C.c,227 :: 		
0x02C4	0xFFF6C289  	MOVFF       FARG_T6963C_sprite_pic, 4086
0x02C8	0xFFF7C28A  	MOVFF       FARG_T6963C_sprite_pic+1, TBLPTRH
0x02CC	0xFFF8C28B  	MOVFF       FARG_T6963C_sprite_pic+2, TBLPTRU
0x02D0	0x0009      	TBLRD*+
0x02D2	0xFF83CFF5  	MOVFF       TABLAT, T6963C_dataPort
0x02D6	0x0E01      	MOVLW       1
0x02D8	0x2789      	ADDWF       FARG_T6963C_sprite_pic, 1, 1
0x02DA	0x0E00      	MOVLW       0
0x02DC	0x238A      	ADDWFC      FARG_T6963C_sprite_pic+1, 1, 1
0x02DE	0x238B      	ADDWFC      FARG_T6963C_sprite_pic+2, 1, 1
;__Lib_T6963C.c,228 :: 		
0x02E0	0x9482      	BCF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,229 :: 		
0x02E2	0xDF1A      	RCALL       _Delay_1us
0x02E4	0xDF19      	RCALL       _Delay_1us
0x02E6	0xDF18      	RCALL       _Delay_1us
;__Lib_T6963C.c,230 :: 		
0x02E8	0x8482      	BSF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,225 :: 		
0x02EA	0x4B90      	INFSNZ      T6963C_sprite_i_L0, 1, 1
0x02EC	0x2B91      	INCF        T6963C_sprite_i_L0+1, 1, 1
;__Lib_T6963C.c,231 :: 		
0x02EE	0xD7DB      	BRA         L_T6963C_sprite9
L_T6963C_sprite10:
;__Lib_T6963C.c,233 :: 		
0x02F0	0x0EB2      	MOVLW       178
0x02F2	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x02F4	0xDF2B      	RCALL       _T6963C_writeCommand
;__Lib_T6963C.c,235 :: 		
0x02F6	0x5062      	MOVF        _T6963C_txtCols, 0 
0x02F8	0x0102      	MOVLB       2
0x02FA	0x2792      	ADDWF       T6963C_sprite_addr_L0, 1, 1
0x02FC	0x5063      	MOVF        _T6963C_txtCols+1, 0 
0x02FE	0x2393      	ADDWFC      T6963C_sprite_addr_L0+1, 1, 1
;__Lib_T6963C.c,236 :: 		
0x0300	0xD7BB      	BRA         L_T6963C_sprite7
L_T6963C_sprite8:
;__Lib_T6963C.c,237 :: 		
0x0302	0x0012      	RETURN      0
; end of _T6963C_sprite
_getSprite:
;compy.c,96 :: 		const unsigned char* getSprite(char charactereValue) {
;compy.c,97 :: 		if (charactereValue == 0) {
0x0304	0x0102      	MOVLB       2
0x0306	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x0308	0x0A00      	XORLW       0
0x030A	0xE107      	BNZ         L_getSprite0
;compy.c,98 :: 		return pacman_up;
0x030C	0x0EA2      	MOVLW       _pacman_up
0x030E	0x6E00      	MOVWF       R0 
0x0310	0x0E1D      	MOVLW       hi_addr(_pacman_up)
0x0312	0x6E01      	MOVWF       R1 
0x0314	0x0E00      	MOVLW       higher_addr(_pacman_up)
0x0316	0x6E02      	MOVWF       R2 
0x0318	0x0012      	RETURN      0
;compy.c,99 :: 		} else if (charactereValue == 1) {
L_getSprite0:
0x031A	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x031C	0x0A01      	XORLW       1
0x031E	0xE107      	BNZ         L_getSprite2
;compy.c,100 :: 		return pacman_right;
0x0320	0x0E82      	MOVLW       _pacman_right
0x0322	0x6E00      	MOVWF       R0 
0x0324	0x0E1D      	MOVLW       hi_addr(_pacman_right)
0x0326	0x6E01      	MOVWF       R1 
0x0328	0x0E00      	MOVLW       higher_addr(_pacman_right)
0x032A	0x6E02      	MOVWF       R2 
0x032C	0x0012      	RETURN      0
;compy.c,101 :: 		} else if (charactereValue == 2) {
L_getSprite2:
0x032E	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x0330	0x0A02      	XORLW       2
0x0332	0xE107      	BNZ         L_getSprite4
;compy.c,102 :: 		return pacman_down;
0x0334	0x0EE2      	MOVLW       _pacman_down
0x0336	0x6E00      	MOVWF       R0 
0x0338	0x0E1D      	MOVLW       hi_addr(_pacman_down)
0x033A	0x6E01      	MOVWF       R1 
0x033C	0x0E00      	MOVLW       higher_addr(_pacman_down)
0x033E	0x6E02      	MOVWF       R2 
0x0340	0x0012      	RETURN      0
;compy.c,103 :: 		} else if (charactereValue == 3) {
L_getSprite4:
0x0342	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x0344	0x0A03      	XORLW       3
0x0346	0xE107      	BNZ         L_getSprite6
;compy.c,104 :: 		return pacman_left;
0x0348	0x0EC2      	MOVLW       _pacman_left
0x034A	0x6E00      	MOVWF       R0 
0x034C	0x0E1D      	MOVLW       hi_addr(_pacman_left)
0x034E	0x6E01      	MOVWF       R1 
0x0350	0x0E00      	MOVLW       higher_addr(_pacman_left)
0x0352	0x6E02      	MOVWF       R2 
0x0354	0x0012      	RETURN      0
;compy.c,105 :: 		} else if (charactereValue == food_orientation) {
L_getSprite6:
0x0356	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x0358	0x1861      	XORWF       _food_orientation, 0 
0x035A	0xE107      	BNZ         L_getSprite8
;compy.c,106 :: 		return food;
0x035C	0x0E62      	MOVLW       _food
0x035E	0x6E00      	MOVWF       R0 
0x0360	0x0E1D      	MOVLW       hi_addr(_food)
0x0362	0x6E01      	MOVWF       R1 
0x0364	0x0E00      	MOVLW       higher_addr(_food)
0x0366	0x6E02      	MOVWF       R2 
0x0368	0x0012      	RETURN      0
;compy.c,107 :: 		} else if (charactereValue == ghost_orientation) {
L_getSprite8:
0x036A	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x036C	0x1860      	XORWF       _ghost_orientation, 0 
0x036E	0xE107      	BNZ         L_getSprite10
;compy.c,108 :: 		return ghost;
0x0370	0x0E02      	MOVLW       _ghost
0x0372	0x6E00      	MOVWF       R0 
0x0374	0x0E1D      	MOVLW       hi_addr(_ghost)
0x0376	0x6E01      	MOVWF       R1 
0x0378	0x0E00      	MOVLW       higher_addr(_ghost)
0x037A	0x6E02      	MOVWF       R2 
0x037C	0x0012      	RETURN      0
;compy.c,109 :: 		} else if (charactereValue == barrier_orientation) {
L_getSprite10:
0x037E	0x5182      	MOVF        FARG_getSprite_charactereValue, 0, 1
0x0380	0x184D      	XORWF       _barrier_orientation, 0 
0x0382	0xE107      	BNZ         L_getSprite12
;compy.c,110 :: 		return obstacle;
0x0384	0x0E22      	MOVLW       _obstacle
0x0386	0x6E00      	MOVWF       R0 
0x0388	0x0E1D      	MOVLW       hi_addr(_obstacle)
0x038A	0x6E01      	MOVWF       R1 
0x038C	0x0E00      	MOVLW       higher_addr(_obstacle)
0x038E	0x6E02      	MOVWF       R2 
0x0390	0x0012      	RETURN      0
;compy.c,111 :: 		}
L_getSprite12:
;compy.c,112 :: 		return blank;
0x0392	0x0E42      	MOVLW       _blank
0x0394	0x6E00      	MOVWF       R0 
0x0396	0x0E1D      	MOVLW       hi_addr(_blank)
0x0398	0x6E01      	MOVWF       R1 
0x039A	0x0E00      	MOVLW       higher_addr(_blank)
0x039C	0x6E02      	MOVWF       R2 
;compy.c,113 :: 		}
0x039E	0x0012      	RETURN      0
; end of _getSprite
_print:
;compy.c,66 :: 		void print(unsigned char column, unsigned char line, code const unsigned char* sprite) {
;compy.c,67 :: 		T6963C_graphics(1);
0x03A0	0x866D      	BSF         _T6963C_display, 3 
0x03A2	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x03A6	0xDED2      	RCALL       _T6963C_writeCommand
;compy.c,68 :: 		T6963C_text(0);
0x03A8	0x946D      	BCF         _T6963C_display, 2 
0x03AA	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x03AE	0xDECE      	RCALL       _T6963C_writeCommand
;compy.c,69 :: 		T6963C_sprite(column * 16, line * 16, sprite, 16, 16);
0x03B0	0xF287C282  	MOVFF       FARG_print_column, FARG_T6963C_sprite_px
0x03B4	0x0102      	MOVLB       2
0x03B6	0x3787      	RLCF        FARG_T6963C_sprite_px, 1, 1
0x03B8	0x9187      	BCF         FARG_T6963C_sprite_px, 0, 1
0x03BA	0x3787      	RLCF        FARG_T6963C_sprite_px, 1, 1
0x03BC	0x9187      	BCF         FARG_T6963C_sprite_px, 0, 1
0x03BE	0x3787      	RLCF        FARG_T6963C_sprite_px, 1, 1
0x03C0	0x9187      	BCF         FARG_T6963C_sprite_px, 0, 1
0x03C2	0x3787      	RLCF        FARG_T6963C_sprite_px, 1, 1
0x03C4	0x9187      	BCF         FARG_T6963C_sprite_px, 0, 1
0x03C6	0xF288C283  	MOVFF       FARG_print_line, FARG_T6963C_sprite_py
0x03CA	0x3788      	RLCF        FARG_T6963C_sprite_py, 1, 1
0x03CC	0x9188      	BCF         FARG_T6963C_sprite_py, 0, 1
0x03CE	0x3788      	RLCF        FARG_T6963C_sprite_py, 1, 1
0x03D0	0x9188      	BCF         FARG_T6963C_sprite_py, 0, 1
0x03D2	0x3788      	RLCF        FARG_T6963C_sprite_py, 1, 1
0x03D4	0x9188      	BCF         FARG_T6963C_sprite_py, 0, 1
0x03D6	0x3788      	RLCF        FARG_T6963C_sprite_py, 1, 1
0x03D8	0x9188      	BCF         FARG_T6963C_sprite_py, 0, 1
0x03DA	0xF289C284  	MOVFF       FARG_print_sprite, FARG_T6963C_sprite_pic
0x03DE	0xF28AC285  	MOVFF       FARG_print_sprite+1, FARG_T6963C_sprite_pic+1
0x03E2	0xF28BC286  	MOVFF       FARG_print_sprite+2, FARG_T6963C_sprite_pic+2
0x03E6	0x0E10      	MOVLW       16
0x03E8	0x6F8C      	MOVWF       FARG_T6963C_sprite_sx, 1
0x03EA	0x0E10      	MOVLW       16
0x03EC	0x6F8D      	MOVWF       FARG_T6963C_sprite_sy, 1
0x03EE	0xDF0A      	RCALL       _T6963C_sprite
;compy.c,70 :: 		}
0x03F0	0x0012      	RETURN      0
; end of _print
_srand:
;__Lib_CStdlib.c,301 :: 		
;__Lib_CStdlib.c,302 :: 		
0x03F2	0xF069C27D  	MOVFF       FARG_srand_x, __Lib_CStdlib_randx
0x03F6	0xF06AC27E  	MOVFF       FARG_srand_x+1, __Lib_CStdlib_randx+1
0x03FA	0x0E00      	MOVLW       0
0x03FC	0x6E6B      	MOVWF       __Lib_CStdlib_randx+2 
0x03FE	0x6E6C      	MOVWF       __Lib_CStdlib_randx+3 
;__Lib_CStdlib.c,303 :: 		
0x0400	0x0E01      	MOVLW       1
0x0402	0x6E68      	MOVWF       __Lib_CStdlib_randf 
;__Lib_CStdlib.c,304 :: 		
0x0404	0x0012      	RETURN      0
; end of _srand
_printCoordinate:
;compy.c,115 :: 		void printCoordinate(int x, int y) {
;compy.c,116 :: 		print(x, y, getSprite(world[x][y]));
0x0406	0xF000C27D  	MOVFF       FARG_printCoordinate_x, R0
0x040A	0xF001C27E  	MOVFF       FARG_printCoordinate_x+1, R1
0x040E	0x0E3C      	MOVLW       60
0x0410	0x6E04      	MOVWF       R4 
0x0412	0x0E00      	MOVLW       0
0x0414	0x6E05      	MOVWF       R5 
0x0416	0xDEBF      	RCALL       _Mul_16x16_U
0x0418	0x0E8D      	MOVLW       _world
0x041A	0x2400      	ADDWF       R0, 0 
0x041C	0x6E03      	MOVWF       R3 
0x041E	0x0E00      	MOVLW       hi_addr(_world)
0x0420	0x2001      	ADDWFC      R1, 0 
0x0422	0x6E04      	MOVWF       R4 
0x0424	0xF000C27F  	MOVFF       FARG_printCoordinate_y, R0
0x0428	0xF001C280  	MOVFF       FARG_printCoordinate_y+1, R1
0x042C	0x3600      	RLCF        R0, 1 
0x042E	0x9000      	BCF         R0, 0 
0x0430	0x3601      	RLCF        R1, 1 
0x0432	0x3600      	RLCF        R0, 1 
0x0434	0x9000      	BCF         R0, 0 
0x0436	0x3601      	RLCF        R1, 1 
0x0438	0x5000      	MOVF        R0, 0 
0x043A	0x2403      	ADDWF       R3, 0 
0x043C	0x6EE9      	MOVWF       FSR0L 
0x043E	0x5001      	MOVF        R1, 0 
0x0440	0x2004      	ADDWFC      R4, 0 
0x0442	0x6EEA      	MOVWF       FSR0H 
0x0444	0xF282CFEE  	MOVFF       POSTINC0, FARG_getSprite_charactereValue
0x0448	0xDF5D      	RCALL       _getSprite
0x044A	0xF284C000  	MOVFF       R0, FARG_print_sprite
0x044E	0xF285C001  	MOVFF       R1, FARG_print_sprite+1
0x0452	0xF286C002  	MOVFF       R2, FARG_print_sprite+2
0x0456	0xF282C27D  	MOVFF       FARG_printCoordinate_x, FARG_print_column
0x045A	0xF283C27F  	MOVFF       FARG_printCoordinate_y, FARG_print_line
0x045E	0xDFA0      	RCALL       _print
;compy.c,117 :: 		}
0x0460	0x0012      	RETURN      0
; end of _printCoordinate
_Delay_Cyc:
;__Lib_Delays.c,97 :: 		void Delay_Cyc(char cycles_div_by_10)  { // Cycles_div_by_10: min 3, max 255
;__Lib_Delays.c,98 :: 		--cycles_div_by_10;
0x0462	0x0102      	MOVLB       2
0x0464	0x077D      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
;__Lib_Delays.c,99 :: 		--cycles_div_by_10;
0x0466	0x077D      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
;__Lib_Delays.c,100 :: 		while (cycles_div_by_10-- > 0) {
L_Delay_Cyc19:
0x0468	0xF001C27D  	MOVFF       FARG_Delay_Cyc_cycles_div_by_10, R1
0x046C	0x077D      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
0x046E	0x5001      	MOVF        R1, 0 
0x0470	0x0800      	SUBLW       0
0x0472	0xE203      	BC          L_Delay_Cyc20
;__Lib_Delays.c,102 :: 		NOP
0x0474	0x0000      	NOP
;__Lib_Delays.c,103 :: 		NOP
0x0476	0x0000      	NOP
;__Lib_Delays.c,105 :: 		}
0x0478	0xD7F7      	BRA         L_Delay_Cyc19
L_Delay_Cyc20:
;__Lib_Delays.c,107 :: 		NOP
0x047A	0x0000      	NOP
;__Lib_Delays.c,108 :: 		NOP
0x047C	0x0000      	NOP
;__Lib_Delays.c,109 :: 		NOP
0x047E	0x0000      	NOP
;__Lib_Delays.c,110 :: 		NOP
0x0480	0x0000      	NOP
;__Lib_Delays.c,111 :: 		NOP
0x0482	0x0000      	NOP
;__Lib_Delays.c,113 :: 		}
0x0484	0x0012      	RETURN      0
; end of _Delay_Cyc
_Get_Fosc_kHz:
;__Lib_Delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c,3 :: 		return Clock_kHz();
0x0486	0x0E40      	MOVLW       64
0x0488	0x6E00      	MOVWF       R0 
0x048A	0x0E1F      	MOVLW       31
0x048C	0x6E01      	MOVWF       R1 
0x048E	0x0E00      	MOVLW       0
0x0490	0x6E02      	MOVWF       R2 
0x0492	0x6E03      	MOVWF       R3 
;__Lib_Delays.c,5 :: 		}
0x0494	0x0012      	RETURN      0
; end of _Get_Fosc_kHz
_T6963C_write_text:
;__Lib_T6963C.c,275 :: 		
;__Lib_T6963C.c,279 :: 		
0x0496	0xF298C281  	MOVFF       FARG_T6963C_write_text_mode, FARG_T6963C_writeCommand_mydata
0x049A	0xDE58      	RCALL       _T6963C_writeCommand
;__Lib_T6963C.c,281 :: 		
0x049C	0xF000C280  	MOVFF       FARG_T6963C_write_text_y, R0
0x04A0	0x0E00      	MOVLW       0
0x04A2	0x6E01      	MOVWF       R1 
0x04A4	0xF004C062  	MOVFF       _T6963C_txtCols, R4
0x04A8	0xF005C063  	MOVFF       _T6963C_txtCols+1, R5
0x04AC	0xDE74      	RCALL       _Mul_16x16_U
0x04AE	0x0102      	MOVLB       2
0x04B0	0x517F      	MOVF        FARG_T6963C_write_text_x, 0, 1
0x04B2	0x2400      	ADDWF       R0, 0 
0x04B4	0x6F94      	MOVWF       FARG_T6963C_setPtr_p, 1
0x04B6	0x0E00      	MOVLW       0
0x04B8	0x2001      	ADDWFC      R1, 0 
0x04BA	0x6F95      	MOVWF       FARG_T6963C_setPtr_p+1, 1
0x04BC	0x5064      	MOVF        _T6963C_textHomeAddr, 0 
0x04BE	0x2794      	ADDWF       FARG_T6963C_setPtr_p, 1, 1
0x04C0	0x5065      	MOVF        _T6963C_textHomeAddr+1, 0 
0x04C2	0x2395      	ADDWFC      FARG_T6963C_setPtr_p+1, 1, 1
;__Lib_T6963C.c,283 :: 		
0x04C4	0x0E24      	MOVLW       36
0x04C6	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x04C8	0xDE8E      	RCALL       _T6963C_setPtr
;__Lib_T6963C.c,285 :: 		
L_T6963C_write_text12:
0x04CA	0xFFE9C27D  	MOVFF       FARG_T6963C_write_text_str, FSR0L
0x04CE	0xFFEAC27E  	MOVFF       FARG_T6963C_write_text_str+1, FSR0H
0x04D2	0x52EE      	MOVF        POSTINC0, 1 
0x04D4	0xE00F      	BZ          L_T6963C_write_text13
;__Lib_T6963C.c,287 :: 		
0x04D6	0xFFE9C27D  	MOVFF       FARG_T6963C_write_text_str, FSR0L
0x04DA	0xFFEAC27E  	MOVFF       FARG_T6963C_write_text_str+1, FSR0H
0x04DE	0x0E20      	MOVLW       32
0x04E0	0x5CEE      	SUBWF       POSTINC0, 0 
0x04E2	0x0102      	MOVLB       2
0x04E4	0x6F98      	MOVWF       FARG_T6963C_writeData_mydata, 1
0x04E6	0xDE28      	RCALL       _T6963C_writeData
0x04E8	0x4B7D      	INFSNZ      FARG_T6963C_write_text_str, 1, 1
0x04EA	0x2B7E      	INCF        FARG_T6963C_write_text_str+1, 1, 1
;__Lib_T6963C.c,288 :: 		
0x04EC	0x0EC0      	MOVLW       192
0x04EE	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x04F0	0xDE2D      	RCALL       _T6963C_writeCommand
;__Lib_T6963C.c,289 :: 		
0x04F2	0xD7EB      	BRA         L_T6963C_write_text12
L_T6963C_write_text13:
;__Lib_T6963C.c,290 :: 		
0x04F4	0x0012      	RETURN      0
; end of _T6963C_write_text
_Div_32x32_U:
;__Lib_Math.c,1159 :: 		
;__Lib_Math.c,1170 :: 		
0x04F6	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1171 :: 		
0x04F8	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1172 :: 		
0x04FA	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1173 :: 		
0x04FC	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1175 :: 		
0x04FE	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1177 :: 		
0x0500	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1178 :: 		
0x0502	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1179 :: 		
0x0504	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1180 :: 		
0x0506	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1181 :: 		
0x0508	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1182 :: 		
0x050A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1183 :: 		
0x050C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1184 :: 		
0x050E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1185 :: 		
0x0510	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1186 :: 		
0x0512	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1187 :: 		
0x0514	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1188 :: 		
0x0516	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1189 :: 		
0x0518	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1190 :: 		
0x051A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1191 :: 		
0x051C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1192 :: 		
0x051E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1194 :: 		
0x0520	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1195 :: 		
0x0522	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1196 :: 		
0x0524	0x0E01      	MOVLW       1
;__Lib_Math.c,1197 :: 		
0x0526	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1198 :: 		
0x0528	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1200 :: 		
0x052A	0x0E07      	MOVLW       7
;__Lib_Math.c,1201 :: 		
0x052C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1203 :: 		
LOOPU3232A:
;__Lib_Math.c,1204 :: 		
0x052E	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1205 :: 		
0x0530	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1206 :: 		
0x0532	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1207 :: 		
0x0534	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1208 :: 		
0x0536	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1209 :: 		
0x0538	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1210 :: 		
0x053A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1211 :: 		
0x053C	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1212 :: 		
0x053E	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1214 :: 		
0x0540	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1215 :: 		
0x0542	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1216 :: 		
0x0544	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1217 :: 		
0x0546	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1218 :: 		
0x0548	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1219 :: 		
0x054A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1220 :: 		
0x054C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1221 :: 		
0x054E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1222 :: 		
0x0550	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1223 :: 		
0x0552	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1224 :: 		
0x0554	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1225 :: 		
0x0556	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1226 :: 		
0x0558	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1227 :: 		
0x055A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1228 :: 		
0x055C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1229 :: 		
0x055E	0x0E01      	MOVLW       1
;__Lib_Math.c,1230 :: 		
0x0560	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1231 :: 		
0x0562	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1233 :: 		
UADD22LA:
;__Lib_Math.c,1234 :: 		
0x0564	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1235 :: 		
0x0566	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1236 :: 		
0x0568	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1237 :: 		
0x056A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1238 :: 		
0x056C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1239 :: 		
0x056E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1240 :: 		
0x0570	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1241 :: 		
0x0572	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1242 :: 		
0x0574	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1243 :: 		
0x0576	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1244 :: 		
0x0578	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1245 :: 		
0x057A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1246 :: 		
0x057C	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1247 :: 		
0x057E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1248 :: 		
0x0580	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1249 :: 		
0x0582	0x0E01      	MOVLW       1
;__Lib_Math.c,1250 :: 		
0x0584	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1252 :: 		
UOK22LA:
;__Lib_Math.c,1253 :: 		
0x0586	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1255 :: 		
0x0588	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1256 :: 		
0x058A	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1258 :: 		
0x058C	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1259 :: 		
0x058E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1260 :: 		
0x0590	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1261 :: 		
0x0592	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1262 :: 		
0x0594	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1263 :: 		
0x0596	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1264 :: 		
0x0598	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1265 :: 		
0x059A	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1266 :: 		
0x059C	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1268 :: 		
0x059E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1269 :: 		
0x05A0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1270 :: 		
0x05A2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1271 :: 		
0x05A4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1272 :: 		
0x05A6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1273 :: 		
0x05A8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1274 :: 		
0x05AA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1275 :: 		
0x05AC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1276 :: 		
0x05AE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1277 :: 		
0x05B0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1278 :: 		
0x05B2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1279 :: 		
0x05B4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1280 :: 		
0x05B6	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1281 :: 		
0x05B8	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1282 :: 		
0x05BA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1283 :: 		
0x05BC	0x0E01      	MOVLW       1
;__Lib_Math.c,1284 :: 		
0x05BE	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1285 :: 		
0x05C0	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1287 :: 		
UADD22L8:
;__Lib_Math.c,1288 :: 		
0x05C2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1289 :: 		
0x05C4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1290 :: 		
0x05C6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1291 :: 		
0x05C8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1292 :: 		
0x05CA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1293 :: 		
0x05CC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1294 :: 		
0x05CE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1295 :: 		
0x05D0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1296 :: 		
0x05D2	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1297 :: 		
0x05D4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1298 :: 		
0x05D6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1299 :: 		
0x05D8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1300 :: 		
0x05DA	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1301 :: 		
0x05DC	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1302 :: 		
0x05DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1303 :: 		
0x05E0	0x0E01      	MOVLW       1
;__Lib_Math.c,1304 :: 		
0x05E2	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1306 :: 		
UOK22L8:
;__Lib_Math.c,1307 :: 		
0x05E4	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1309 :: 		
0x05E6	0x0E07      	MOVLW       7
;__Lib_Math.c,1310 :: 		
0x05E8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1312 :: 		
LOOPU3232B:
;__Lib_Math.c,1313 :: 		
0x05EA	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1314 :: 		
0x05EC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1315 :: 		
0x05EE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1316 :: 		
0x05F0	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1317 :: 		
0x05F2	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1318 :: 		
0x05F4	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1319 :: 		
0x05F6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1320 :: 		
0x05F8	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1321 :: 		
0x05FA	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1323 :: 		
0x05FC	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1324 :: 		
0x05FE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1325 :: 		
0x0600	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1326 :: 		
0x0602	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1327 :: 		
0x0604	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1328 :: 		
0x0606	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1329 :: 		
0x0608	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1330 :: 		
0x060A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1331 :: 		
0x060C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1332 :: 		
0x060E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1333 :: 		
0x0610	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1334 :: 		
0x0612	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1335 :: 		
0x0614	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1336 :: 		
0x0616	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1337 :: 		
0x0618	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1338 :: 		
0x061A	0x0E01      	MOVLW       1
;__Lib_Math.c,1339 :: 		
0x061C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1340 :: 		
0x061E	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1342 :: 		
UADD22LB:
;__Lib_Math.c,1343 :: 		
0x0620	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1344 :: 		
0x0622	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1345 :: 		
0x0624	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1346 :: 		
0x0626	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1347 :: 		
0x0628	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1348 :: 		
0x062A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1349 :: 		
0x062C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1350 :: 		
0x062E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1351 :: 		
0x0630	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1352 :: 		
0x0632	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1353 :: 		
0x0634	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1354 :: 		
0x0636	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1355 :: 		
0x0638	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1356 :: 		
0x063A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1357 :: 		
0x063C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1358 :: 		
0x063E	0x0E01      	MOVLW       1
;__Lib_Math.c,1359 :: 		
0x0640	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1361 :: 		
UOK22LB:
;__Lib_Math.c,1362 :: 		
0x0642	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1364 :: 		
0x0644	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1365 :: 		
0x0646	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1367 :: 		
0x0648	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1368 :: 		
0x064A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1369 :: 		
0x064C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1370 :: 		
0x064E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1371 :: 		
0x0650	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1372 :: 		
0x0652	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1373 :: 		
0x0654	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1374 :: 		
0x0656	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1375 :: 		
0x0658	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1377 :: 		
0x065A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1378 :: 		
0x065C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1379 :: 		
0x065E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1380 :: 		
0x0660	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1381 :: 		
0x0662	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1382 :: 		
0x0664	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1383 :: 		
0x0666	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1384 :: 		
0x0668	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1385 :: 		
0x066A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1386 :: 		
0x066C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1387 :: 		
0x066E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1388 :: 		
0x0670	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1389 :: 		
0x0672	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1390 :: 		
0x0674	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1391 :: 		
0x0676	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1392 :: 		
0x0678	0x0E01      	MOVLW       1
;__Lib_Math.c,1393 :: 		
0x067A	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1394 :: 		
0x067C	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1396 :: 		
UADD22L16:
;__Lib_Math.c,1397 :: 		
0x067E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1398 :: 		
0x0680	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1399 :: 		
0x0682	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1400 :: 		
0x0684	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1401 :: 		
0x0686	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1402 :: 		
0x0688	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1403 :: 		
0x068A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1404 :: 		
0x068C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1405 :: 		
0x068E	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1406 :: 		
0x0690	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1407 :: 		
0x0692	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1408 :: 		
0x0694	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1409 :: 		
0x0696	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1410 :: 		
0x0698	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1411 :: 		
0x069A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1412 :: 		
0x069C	0x0E01      	MOVLW       1
;__Lib_Math.c,1413 :: 		
0x069E	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1415 :: 		
UOK22L16:
;__Lib_Math.c,1416 :: 		
0x06A0	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1418 :: 		
0x06A2	0x0E07      	MOVLW       7
;__Lib_Math.c,1419 :: 		
0x06A4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1421 :: 		
LOOPU3232C:
;__Lib_Math.c,1422 :: 		
0x06A6	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1423 :: 		
0x06A8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1424 :: 		
0x06AA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1425 :: 		
0x06AC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1426 :: 		
0x06AE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1427 :: 		
0x06B0	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1428 :: 		
0x06B2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1429 :: 		
0x06B4	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1430 :: 		
0x06B6	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1432 :: 		
0x06B8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1433 :: 		
0x06BA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1434 :: 		
0x06BC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1435 :: 		
0x06BE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1436 :: 		
0x06C0	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1437 :: 		
0x06C2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1438 :: 		
0x06C4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1439 :: 		
0x06C6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1440 :: 		
0x06C8	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1441 :: 		
0x06CA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1442 :: 		
0x06CC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1443 :: 		
0x06CE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1444 :: 		
0x06D0	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1445 :: 		
0x06D2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1446 :: 		
0x06D4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1447 :: 		
0x06D6	0x0E01      	MOVLW       1
;__Lib_Math.c,1448 :: 		
0x06D8	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1449 :: 		
0x06DA	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1451 :: 		
UADD22LC:
;__Lib_Math.c,1452 :: 		
0x06DC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1453 :: 		
0x06DE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1454 :: 		
0x06E0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1455 :: 		
0x06E2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1456 :: 		
0x06E4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1457 :: 		
0x06E6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1458 :: 		
0x06E8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1459 :: 		
0x06EA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1460 :: 		
0x06EC	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1461 :: 		
0x06EE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1462 :: 		
0x06F0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1463 :: 		
0x06F2	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1464 :: 		
0x06F4	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1465 :: 		
0x06F6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1466 :: 		
0x06F8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1467 :: 		
0x06FA	0x0E01      	MOVLW       1
;__Lib_Math.c,1468 :: 		
0x06FC	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1470 :: 		
UOK22LC:
;__Lib_Math.c,1471 :: 		
0x06FE	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1473 :: 		
0x0700	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1474 :: 		
0x0702	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1476 :: 		
0x0704	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1477 :: 		
0x0706	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1478 :: 		
0x0708	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1479 :: 		
0x070A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1480 :: 		
0x070C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1481 :: 		
0x070E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1482 :: 		
0x0710	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1483 :: 		
0x0712	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1484 :: 		
0x0714	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1486 :: 		
0x0716	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1487 :: 		
0x0718	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1488 :: 		
0x071A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1489 :: 		
0x071C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1490 :: 		
0x071E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1491 :: 		
0x0720	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1492 :: 		
0x0722	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1493 :: 		
0x0724	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1494 :: 		
0x0726	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1495 :: 		
0x0728	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1496 :: 		
0x072A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1497 :: 		
0x072C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1498 :: 		
0x072E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1499 :: 		
0x0730	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1500 :: 		
0x0732	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1501 :: 		
0x0734	0x0E01      	MOVLW       1
;__Lib_Math.c,1502 :: 		
0x0736	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1503 :: 		
0x0738	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1505 :: 		
UADD22L24:
;__Lib_Math.c,1506 :: 		
0x073A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1507 :: 		
0x073C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1508 :: 		
0x073E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1509 :: 		
0x0740	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1510 :: 		
0x0742	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1511 :: 		
0x0744	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1512 :: 		
0x0746	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1513 :: 		
0x0748	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1514 :: 		
0x074A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1515 :: 		
0x074C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1516 :: 		
0x074E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1517 :: 		
0x0750	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1518 :: 		
0x0752	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1519 :: 		
0x0754	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1520 :: 		
0x0756	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1521 :: 		
0x0758	0x0E01      	MOVLW       1
;__Lib_Math.c,1522 :: 		
0x075A	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1524 :: 		
UOK22L24:
;__Lib_Math.c,1525 :: 		
0x075C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1527 :: 		
0x075E	0x0E07      	MOVLW       7
;__Lib_Math.c,1528 :: 		
0x0760	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1530 :: 		
LOOPU3232D:
;__Lib_Math.c,1531 :: 		
0x0762	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1532 :: 		
0x0764	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1533 :: 		
0x0766	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1534 :: 		
0x0768	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1535 :: 		
0x076A	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1536 :: 		
0x076C	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1537 :: 		
0x076E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1538 :: 		
0x0770	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1539 :: 		
0x0772	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1541 :: 		
0x0774	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1542 :: 		
0x0776	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1543 :: 		
0x0778	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1544 :: 		
0x077A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1545 :: 		
0x077C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1546 :: 		
0x077E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1547 :: 		
0x0780	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1548 :: 		
0x0782	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1549 :: 		
0x0784	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1550 :: 		
0x0786	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1551 :: 		
0x0788	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1552 :: 		
0x078A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1553 :: 		
0x078C	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1554 :: 		
0x078E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1555 :: 		
0x0790	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1556 :: 		
0x0792	0x0E01      	MOVLW       1
;__Lib_Math.c,1557 :: 		
0x0794	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1558 :: 		
0x0796	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1560 :: 		
UADD22LD:
;__Lib_Math.c,1561 :: 		
0x0798	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1562 :: 		
0x079A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1563 :: 		
0x079C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1564 :: 		
0x079E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1565 :: 		
0x07A0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1566 :: 		
0x07A2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1567 :: 		
0x07A4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1568 :: 		
0x07A6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1569 :: 		
0x07A8	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1570 :: 		
0x07AA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1571 :: 		
0x07AC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1572 :: 		
0x07AE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1573 :: 		
0x07B0	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1574 :: 		
0x07B2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1575 :: 		
0x07B4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1576 :: 		
0x07B6	0x0E01      	MOVLW       1
;__Lib_Math.c,1577 :: 		
0x07B8	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1579 :: 		
UOK22LD:
;__Lib_Math.c,1580 :: 		
0x07BA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1582 :: 		
0x07BC	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1583 :: 		
0x07BE	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1585 :: 		
0x07C0	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1586 :: 		
0x07C2	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1587 :: 		
0x07C4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1588 :: 		
0x07C6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1589 :: 		
0x07C8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1590 :: 		
0x07CA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1591 :: 		
0x07CC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1592 :: 		
0x07CE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1593 :: 		
0x07D0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1594 :: 		
0x07D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1595 :: 		
0x07D4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1596 :: 		
0x07D6	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1597 :: 		
0x07D8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1598 :: 		
0x07DA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1599 :: 		
0x07DC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1600 :: 		
0x07DE	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1602 :: 		
UOK22L:
;__Lib_Math.c,1604 :: 		
0x07E0	0x0012      	RETURN      0
; end of _Div_32x32_U
_Mul_32x32_U:
;__Lib_Math.c,1613 :: 		
;__Lib_Math.c,1628 :: 		
0x07E2	0x0E22      	MOVLW       34
;__Lib_Math.c,1629 :: 		
0x07E4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1630 :: 		
0x07E6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1631 :: 		
0x07E8	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1632 :: 		
0x07EA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1633 :: 		
0x07EC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1635 :: 		
_NEXT:
;__Lib_Math.c,1639 :: 		
0x07EE	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1640 :: 		
0x07F0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1641 :: 		
0x07F2	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1642 :: 		
0x07F4	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1644 :: 		
_LOOP:
;__Lib_Math.c,1653 :: 		
0x07F6	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1654 :: 		
0x07F8	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1655 :: 		
0x07FA	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1656 :: 		
0x07FC	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1657 :: 		
0x07FE	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1658 :: 		
0x0800	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1659 :: 		
0x0802	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1660 :: 		
0x0804	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1665 :: 		
0x0806	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1666 :: 		
0x0808	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1667 :: 		
0x080A	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1668 :: 		
0x080C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1669 :: 		
0x080E	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1676 :: 		
0x0810	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1677 :: 		
0x0812	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1678 :: 		
0x0814	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1681 :: 		
0x0816	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1682 :: 		
0x0818	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1685 :: 		
0x081A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1686 :: 		
0x081C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1689 :: 		
0x081E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1691 :: 		
0x0820	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1693 :: 		
_EXIT1:
;__Lib_Math.c,1698 :: 		
0x0822	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1699 :: 		
0x0824	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1700 :: 		
0x0826	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1703 :: 		
0x0828	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1704 :: 		
0x082A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1707 :: 		
0x082C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1708 :: 		
0x082E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1711 :: 		
0x0830	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1714 :: 		
_EXIT2:
;__Lib_Math.c,1716 :: 		
0x0832	0x0012      	RETURN      0
; end of _Mul_32x32_U
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x0834	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x0836	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0838	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x083A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x083C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x083E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x0840	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x0842	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x0844	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x0846	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x0848	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x084A	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x084C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x084E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x0850	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x0852	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x0854	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x0856	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x0858	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x085A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x085C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x085E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x0860	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x0862	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x0864	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x0866	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x0868	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x086A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x086C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x086E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x0870	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x0872	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x0874	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x0876	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x0878	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x087A	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x087C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x087E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x0880	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x0882	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x0884	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x0886	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x0888	0x0000      	NOP
;__Lib_Math.c,197 :: 		
0x088A	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x088C	0x5004      	MOVF        R4, 0 
0x088E	0x0A00      	XORLW       0
0x0890	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x0892	0x5005      	MOVF        R5, 0 
0x0894	0x0A00      	XORLW       0
0x0896	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x0898	0x0EFF      	MOVLW       255
0x089A	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x089C	0x0E7F      	MOVLW       127
0x089E	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x08A0	0x0012      	RETURN      0
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x08A2	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x08A4	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x08A6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x08A8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x08AA	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x08AC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x08AE	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x08B0	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x08B2	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x08B4	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x08B6	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x08B8	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x08BA	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x08BC	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x08BE	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x08C0	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x08C2	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x08C4	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x08C6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x08C8	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x08CA	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x08CC	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x08CE	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x08D0	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x08D2	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x08D4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x08D6	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x08D8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x08DA	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x08DC	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x08DE	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x08E0	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x08E2	0xDFA8      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x08E4	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x08E6	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x08E8	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x08EA	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x08EC	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x08EE	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x08F0	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x08F2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x08F4	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x08F6	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x08F8	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x08FA	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x08FC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x08FE	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x0900	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x0902	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x0904	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x0906	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x0908	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x090A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x090C	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x090E	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x0910	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x0912	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x0914	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x0916	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x0918	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x091A	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x091C	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x091E	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x0920	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x0922	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x0924	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x0926	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x0928	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x092A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x092C	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x092E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x0930	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x0932	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x0934	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x0936	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x0938	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x093A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x093C	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x093E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x0940	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x0942	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x0944	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x0946	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x0948	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x094A	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x094C	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x094E	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
0x0950	0x0012      	RETURN      0
; end of _Div_16x16_S
_print_text:
;compy.c,72 :: 		void print_text(unsigned char column, unsigned char line, unsigned char* text) {
;compy.c,73 :: 		T6963C_graphics(0);
0x0952	0x966D      	BCF         _T6963C_display, 3 
0x0954	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x0958	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;compy.c,74 :: 		T6963C_text(1);
0x095C	0x846D      	BSF         _T6963C_display, 2 
0x095E	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x0962	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;compy.c,75 :: 		T6963C_write_text(text, line - 1, column - 1, T6963C_ROM_MODE_XOR);
0x0966	0xF27DC273  	MOVFF       FARG_print_text_text, FARG_T6963C_write_text_str
0x096A	0xF27EC274  	MOVFF       FARG_print_text_text+1, FARG_T6963C_write_text_str+1
0x096E	0x0102      	MOVLB       2
0x0970	0x0572      	DECF        FARG_print_text_line, 0, 1
0x0972	0x6F7F      	MOVWF       FARG_T6963C_write_text_x, 1
0x0974	0x0571      	DECF        FARG_print_text_column, 0, 1
0x0976	0x6F80      	MOVWF       FARG_T6963C_write_text_y, 1
0x0978	0x0E81      	MOVLW       129
0x097A	0x6F81      	MOVWF       FARG_T6963C_write_text_mode, 1
0x097C	0xDD8C      	RCALL       _T6963C_write_text
;compy.c,76 :: 		}
0x097E	0x0012      	RETURN      0
; end of _print_text
_rand:
;__Lib_CStdlib.c,307 :: 		
;__Lib_CStdlib.c,308 :: 		
0x0980	0x5268      	MOVF        __Lib_CStdlib_randf, 1 
0x0982	0xE106      	BNZ         L_rand75
;__Lib_CStdlib.c,309 :: 		
0x0984	0x0E01      	MOVLW       1
0x0986	0x0102      	MOVLB       2
0x0988	0x6F7D      	MOVWF       FARG_srand_x, 1
0x098A	0x0E00      	MOVLW       0
0x098C	0x6F7E      	MOVWF       FARG_srand_x+1, 1
0x098E	0xDD31      	RCALL       _srand
L_rand75:
;__Lib_CStdlib.c,310 :: 		
0x0990	0xF000C069  	MOVFF       __Lib_CStdlib_randx, R0
0x0994	0xF001C06A  	MOVFF       __Lib_CStdlib_randx+1, R1
0x0998	0xF002C06B  	MOVFF       __Lib_CStdlib_randx+2, R2
0x099C	0xF003C06C  	MOVFF       __Lib_CStdlib_randx+3, R3
0x09A0	0x0E6D      	MOVLW       109
0x09A2	0x6E04      	MOVWF       R4 
0x09A4	0x0E4E      	MOVLW       78
0x09A6	0x6E05      	MOVWF       R5 
0x09A8	0x0EC6      	MOVLW       198
0x09AA	0x6E06      	MOVWF       R6 
0x09AC	0x0E41      	MOVLW       65
0x09AE	0x6E07      	MOVWF       R7 
0x09B0	0xDF18      	RCALL       _Mul_32x32_U
0x09B2	0x0E39      	MOVLW       57
0x09B4	0x2400      	ADDWF       R0, 0 
0x09B6	0x6E05      	MOVWF       R5 
0x09B8	0x0E30      	MOVLW       48
0x09BA	0x2001      	ADDWFC      R1, 0 
0x09BC	0x6E06      	MOVWF       R6 
0x09BE	0x0E00      	MOVLW       0
0x09C0	0x2002      	ADDWFC      R2, 0 
0x09C2	0x6E07      	MOVWF       R7 
0x09C4	0x0E00      	MOVLW       0
0x09C6	0x2003      	ADDWFC      R3, 0 
0x09C8	0x6E08      	MOVWF       R8 
0x09CA	0xF000C007  	MOVFF       R7, R0
0x09CE	0xF001C008  	MOVFF       R8, R1
0x09D2	0x0E00      	MOVLW       0
0x09D4	0xBE08      	BTFSC       R8, 7 
0x09D6	0x0EFF      	MOVLW       255
0x09D8	0x6E03      	MOVWF       R3 
0x09DA	0x0EFF      	MOVLW       255
0x09DC	0x1600      	ANDWF       R0, 1 
0x09DE	0x0E7F      	MOVLW       127
0x09E0	0x1601      	ANDWF       R1, 1 
0x09E2	0x0E00      	MOVLW       0
0x09E4	0x1602      	ANDWF       R2, 1 
0x09E6	0x1603      	ANDWF       R3, 1 
0x09E8	0xF069C000  	MOVFF       R0, __Lib_CStdlib_randx
0x09EC	0xF06AC001  	MOVFF       R1, __Lib_CStdlib_randx+1
0x09F0	0xF06BC002  	MOVFF       R2, __Lib_CStdlib_randx+2
0x09F4	0xF06CC003  	MOVFF       R3, __Lib_CStdlib_randx+3
;__Lib_CStdlib.c,311 :: 		
;__Lib_CStdlib.c,312 :: 		
0x09F8	0x0012      	RETURN      0
; end of _rand
_Print_World:
;compy.c,278 :: 		void Print_World() {
;compy.c,279 :: 		for(i = 0; i < 15; ++i) {
0x09FA	0x6A5E      	CLRF        _i 
0x09FC	0x6A5F      	CLRF        _i+1 
L_Print_World85:
0x09FE	0x0E80      	MOVLW       128
0x0A00	0x185F      	XORWF       _i+1, 0 
0x0A02	0x6E00      	MOVWF       R0 
0x0A04	0x0E80      	MOVLW       128
0x0A06	0x5C00      	SUBWF       R0, 0 
0x0A08	0xE102      	BNZ         L__Print_World164
0x0A0A	0x0E0F      	MOVLW       15
0x0A0C	0x5C5E      	SUBWF       _i, 0 
L__Print_World164:
0x0A0E	0xE21A      	BC          L_Print_World86
;compy.c,280 :: 		for(j = 0; j < 8; ++j)
0x0A10	0x6A5C      	CLRF        _j 
0x0A12	0x6A5D      	CLRF        _j+1 
L_Print_World88:
0x0A14	0x0E80      	MOVLW       128
0x0A16	0x185D      	XORWF       _j+1, 0 
0x0A18	0x6E00      	MOVWF       R0 
0x0A1A	0x0E80      	MOVLW       128
0x0A1C	0x5C00      	SUBWF       R0, 0 
0x0A1E	0xE102      	BNZ         L__Print_World165
0x0A20	0x0E08      	MOVLW       8
0x0A22	0x5C5C      	SUBWF       _j, 0 
L__Print_World165:
0x0A24	0xE20C      	BC          L_Print_World89
;compy.c,282 :: 		printCoordinate(i, j);
0x0A26	0xF27DC05E  	MOVFF       _i, FARG_printCoordinate_x
0x0A2A	0xF27EC05F  	MOVFF       _i+1, FARG_printCoordinate_x+1
0x0A2E	0xF27FC05C  	MOVFF       _j, FARG_printCoordinate_y
0x0A32	0xF280C05D  	MOVFF       _j+1, FARG_printCoordinate_y+1
0x0A36	0xDCE7      	RCALL       _printCoordinate
;compy.c,280 :: 		for(j = 0; j < 8; ++j)
0x0A38	0x4A5C      	INFSNZ      _j, 1 
0x0A3A	0x2A5D      	INCF        _j+1, 1 
;compy.c,283 :: 		}
0x0A3C	0xD7EB      	BRA         L_Print_World88
L_Print_World89:
;compy.c,279 :: 		for(i = 0; i < 15; ++i) {
0x0A3E	0x4A5E      	INFSNZ      _i, 1 
0x0A40	0x2A5F      	INCF        _i+1, 1 
;compy.c,284 :: 		}
0x0A42	0xD7DD      	BRA         L_Print_World85
L_Print_World86:
;compy.c,285 :: 		}
0x0A44	0x0012      	RETURN      0
; end of _Print_World
_UART1_Write:
;__Lib_UART_c67.c,59 :: 		
;__Lib_UART_c67.c,60 :: 		
L_UART1_Write3:
0x0A46	0xB2AC      	BTFSC       TXSTA, 1 
0x0A48	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,61 :: 		
0x0A4A	0x0000      	NOP
0x0A4C	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,62 :: 		
0x0A4E	0xFFADC271  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,63 :: 		
0x0A52	0x0012      	RETURN      0
; end of _UART1_Write
_T6963C_fill:
;__Lib_T6963C.c,113 :: 		
;__Lib_T6963C.c,117 :: 		
0x0A54	0x0102      	MOVLB       2
0x0A56	0x6B76      	CLRF        T6963C_fill_addr_L0, 1
0x0A58	0x6B77      	CLRF        T6963C_fill_addr_L0+1, 1
;__Lib_T6963C.c,119 :: 		
0x0A5A	0xF000EC8F  	CALL        _T6963C_waitReady, 0
;__Lib_T6963C.c,121 :: 		
0x0A5E	0x0102      	MOVLB       2
0x0A60	0x5172      	MOVF        FARG_T6963C_fill_start, 0, 1
0x0A62	0x0100      	MOVLB       0
0x0A64	0x258B      	ADDWF       _T6963C_grHomeAddr, 0, 1
0x0A66	0x0102      	MOVLB       2
0x0A68	0x6F94      	MOVWF       FARG_T6963C_setPtr_p, 1
0x0A6A	0x5173      	MOVF        FARG_T6963C_fill_start+1, 0, 1
0x0A6C	0x0100      	MOVLB       0
0x0A6E	0x218C      	ADDWFC      _T6963C_grHomeAddr+1, 0, 1
0x0A70	0x0102      	MOVLB       2
0x0A72	0x6F95      	MOVWF       FARG_T6963C_setPtr_p+1, 1
0x0A74	0x0E24      	MOVLW       36
0x0A76	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x0A78	0xF000ECF3  	CALL        _T6963C_setPtr, 0
;__Lib_T6963C.c,123 :: 		
0x0A7C	0x0EB0      	MOVLW       176
0x0A7E	0x0102      	MOVLB       2
0x0A80	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x0A82	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;__Lib_T6963C.c,125 :: 		
0x0A86	0x9082      	BCF         T6963C_ctrlcd, BitPos(T6963C_ctrlcd+0) 
;__Lib_T6963C.c,129 :: 		
0x0A88	0x6A95      	CLRF        T6963C_dataPort+18 
;__Lib_T6963C.c,130 :: 		
L_T6963C_fill2:
0x0A8A	0x0102      	MOVLB       2
0x0A8C	0x5175      	MOVF        FARG_T6963C_fill_len+1, 0, 1
0x0A8E	0x5D77      	SUBWF       T6963C_fill_addr_L0+1, 0, 1
0x0A90	0xE102      	BNZ         L__T6963C_fill36
0x0A92	0x5174      	MOVF        FARG_T6963C_fill_len, 0, 1
0x0A94	0x5D76      	SUBWF       T6963C_fill_addr_L0, 0, 1
L__T6963C_fill36:
0x0A96	0xE20D      	BC          L_T6963C_fill3
;__Lib_T6963C.c,132 :: 		
0x0A98	0xFF83C271  	MOVFF       FARG_T6963C_fill_v, T6963C_dataPort
;__Lib_T6963C.c,133 :: 		
0x0A9C	0x9482      	BCF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,134 :: 		
0x0A9E	0xF000EC8C  	CALL        _Delay_1us, 0
0x0AA2	0xF000EC8C  	CALL        _Delay_1us, 0
0x0AA6	0xF000EC8C  	CALL        _Delay_1us, 0
;__Lib_T6963C.c,135 :: 		
0x0AAA	0x8482      	BSF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,136 :: 		
0x0AAC	0x4B76      	INFSNZ      T6963C_fill_addr_L0, 1, 1
0x0AAE	0x2B77      	INCF        T6963C_fill_addr_L0+1, 1, 1
;__Lib_T6963C.c,137 :: 		
0x0AB0	0xD7EC      	BRA         L_T6963C_fill2
L_T6963C_fill3:
;__Lib_T6963C.c,139 :: 		
0x0AB2	0x0EB2      	MOVLW       178
0x0AB4	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x0AB6	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;__Lib_T6963C.c,140 :: 		
0x0ABA	0x0012      	RETURN      0
; end of _T6963C_fill
_update_pacman_orientation:
;compy.c,332 :: 		char update_pacman_orientation(int newX, int newY) {
;compy.c,333 :: 		if (newX > pacman_x) {
0x0ABC	0x0E80      	MOVLW       128
0x0ABE	0x1834      	XORWF       _pacman_x+1, 0 
0x0AC0	0x6E00      	MOVWF       R0 
0x0AC2	0x0E80      	MOVLW       128
0x0AC4	0x0102      	MOVLB       2
0x0AC6	0x1972      	XORWF       FARG_update_pacman_orientation_newX+1, 0, 1
0x0AC8	0x5C00      	SUBWF       R0, 0 
0x0ACA	0xE102      	BNZ         L__update_pacman_orientation169
0x0ACC	0x5171      	MOVF        FARG_update_pacman_orientation_newX, 0, 1
0x0ACE	0x5C33      	SUBWF       _pacman_x, 0 
L__update_pacman_orientation169:
0x0AD0	0xE203      	BC          L_update_pacman_orientation98
;compy.c,334 :: 		return (char) 1;
0x0AD2	0x0E01      	MOVLW       1
0x0AD4	0x6E00      	MOVWF       R0 
0x0AD6	0x0012      	RETURN      0
;compy.c,335 :: 		} else if (newX < pacman_x) {
L_update_pacman_orientation98:
0x0AD8	0x0E80      	MOVLW       128
0x0ADA	0x1972      	XORWF       FARG_update_pacman_orientation_newX+1, 0, 1
0x0ADC	0x6E00      	MOVWF       R0 
0x0ADE	0x0E80      	MOVLW       128
0x0AE0	0x1834      	XORWF       _pacman_x+1, 0 
0x0AE2	0x5C00      	SUBWF       R0, 0 
0x0AE4	0xE102      	BNZ         L__update_pacman_orientation170
0x0AE6	0x5033      	MOVF        _pacman_x, 0 
0x0AE8	0x5D71      	SUBWF       FARG_update_pacman_orientation_newX, 0, 1
L__update_pacman_orientation170:
0x0AEA	0xE203      	BC          L_update_pacman_orientation100
;compy.c,336 :: 		return (char) 3;
0x0AEC	0x0E03      	MOVLW       3
0x0AEE	0x6E00      	MOVWF       R0 
0x0AF0	0x0012      	RETURN      0
;compy.c,337 :: 		} else if (newY > pacman_y) {
L_update_pacman_orientation100:
0x0AF2	0x0E80      	MOVLW       128
0x0AF4	0x1832      	XORWF       _pacman_y+1, 0 
0x0AF6	0x6E00      	MOVWF       R0 
0x0AF8	0x0E80      	MOVLW       128
0x0AFA	0x1974      	XORWF       FARG_update_pacman_orientation_newY+1, 0, 1
0x0AFC	0x5C00      	SUBWF       R0, 0 
0x0AFE	0xE102      	BNZ         L__update_pacman_orientation171
0x0B00	0x5173      	MOVF        FARG_update_pacman_orientation_newY, 0, 1
0x0B02	0x5C31      	SUBWF       _pacman_y, 0 
L__update_pacman_orientation171:
0x0B04	0xE203      	BC          L_update_pacman_orientation102
;compy.c,338 :: 		return (char) 2;
0x0B06	0x0E02      	MOVLW       2
0x0B08	0x6E00      	MOVWF       R0 
0x0B0A	0x0012      	RETURN      0
;compy.c,339 :: 		} else if (newY < pacman_y) {
L_update_pacman_orientation102:
0x0B0C	0x0E80      	MOVLW       128
0x0B0E	0x1974      	XORWF       FARG_update_pacman_orientation_newY+1, 0, 1
0x0B10	0x6E00      	MOVWF       R0 
0x0B12	0x0E80      	MOVLW       128
0x0B14	0x1832      	XORWF       _pacman_y+1, 0 
0x0B16	0x5C00      	SUBWF       R0, 0 
0x0B18	0xE102      	BNZ         L__update_pacman_orientation172
0x0B1A	0x5031      	MOVF        _pacman_y, 0 
0x0B1C	0x5D73      	SUBWF       FARG_update_pacman_orientation_newY, 0, 1
L__update_pacman_orientation172:
0x0B1E	0xE202      	BC          L_update_pacman_orientation104
;compy.c,340 :: 		return 0;
0x0B20	0x6A00      	CLRF        R0 
0x0B22	0x0012      	RETURN      0
;compy.c,341 :: 		}
L_update_pacman_orientation104:
;compy.c,342 :: 		return pacman_orientation;
0x0B24	0xF000C02E  	MOVFF       _pacman_orientation, R0
;compy.c,343 :: 		}
0x0B28	0x0012      	RETURN      0
; end of _update_pacman_orientation
_Sound_Play:
;__Lib_Sound.c,26 :: 		
;__Lib_Sound.c,30 :: 		
0x0B2A	0xDCAD      	RCALL       _Get_Fosc_kHz
0x0B2C	0x0EE8      	MOVLW       232
0x0B2E	0x6E04      	MOVWF       R4 
0x0B30	0x0E03      	MOVLW       3
0x0B32	0x6E05      	MOVWF       R5 
0x0B34	0x0E00      	MOVLW       0
0x0B36	0x6E06      	MOVWF       R6 
0x0B38	0x6E07      	MOVWF       R7 
0x0B3A	0xDE53      	RCALL       _Mul_32x32_U
0x0B3C	0xF279C000  	MOVFF       R0, Sound_Play_per_nc_L0
0x0B40	0xF27AC001  	MOVFF       R1, Sound_Play_per_nc_L0+1
0x0B44	0xF27BC002  	MOVFF       R2, Sound_Play_per_nc_L0+2
0x0B48	0xF27CC003  	MOVFF       R3, Sound_Play_per_nc_L0+3
;__Lib_Sound.c,31 :: 		
0x0B4C	0xF004C271  	MOVFF       FARG_Sound_Play_freq_in_hz, R4
0x0B50	0xF005C272  	MOVFF       FARG_Sound_Play_freq_in_hz+1, R5
0x0B54	0x0E00      	MOVLW       0
0x0B56	0x6E06      	MOVWF       R6 
0x0B58	0x6E07      	MOVWF       R7 
0x0B5A	0xDCCD      	RCALL       _Div_32x32_U
0x0B5C	0xF279C000  	MOVFF       R0, Sound_Play_per_nc_L0
0x0B60	0xF27AC001  	MOVFF       R1, Sound_Play_per_nc_L0+1
0x0B64	0xF27BC002  	MOVFF       R2, Sound_Play_per_nc_L0+2
0x0B68	0xF27CC003  	MOVFF       R3, Sound_Play_per_nc_L0+3
;__Lib_Sound.c,32 :: 		
0x0B6C	0xF005C000  	MOVFF       R0, R5
0x0B70	0xF006C001  	MOVFF       R1, R6
0x0B74	0xF007C002  	MOVFF       R2, R7
0x0B78	0xF008C003  	MOVFF       R3, R8
0x0B7C	0x3208      	RRCF        R8, 1 
0x0B7E	0x3207      	RRCF        R7, 1 
0x0B80	0x3206      	RRCF        R6, 1 
0x0B82	0x3205      	RRCF        R5, 1 
0x0B84	0x9E08      	BCF         R8, 7 
0x0B86	0x3208      	RRCF        R8, 1 
0x0B88	0x3207      	RRCF        R7, 1 
0x0B8A	0x3206      	RRCF        R6, 1 
0x0B8C	0x3205      	RRCF        R5, 1 
0x0B8E	0x9E08      	BCF         R8, 7 
0x0B90	0xF000C005  	MOVFF       R5, R0
0x0B94	0xF001C006  	MOVFF       R6, R1
0x0B98	0xF002C007  	MOVFF       R7, R2
0x0B9C	0xF003C008  	MOVFF       R8, R3
0x0BA0	0x3203      	RRCF        R3, 1 
0x0BA2	0x3202      	RRCF        R2, 1 
0x0BA4	0x3201      	RRCF        R1, 1 
0x0BA6	0x3200      	RRCF        R0, 1 
0x0BA8	0x9E03      	BCF         R3, 7 
0x0BAA	0xF275C000  	MOVFF       R0, Sound_Play_nc_L0
0x0BAE	0xF276C001  	MOVFF       R1, Sound_Play_nc_L0+1
;__Lib_Sound.c,35 :: 		
0x0BB2	0xDC69      	RCALL       _Get_Fosc_kHz
0x0BB4	0xF004C273  	MOVFF       FARG_Sound_Play_duration_ms, R4
0x0BB8	0xF005C274  	MOVFF       FARG_Sound_Play_duration_ms+1, R5
0x0BBC	0x0E00      	MOVLW       0
0x0BBE	0x6E06      	MOVWF       R6 
0x0BC0	0x6E07      	MOVWF       R7 
0x0BC2	0xDE0F      	RCALL       _Mul_32x32_U
0x0BC4	0xF009C275  	MOVFF       Sound_Play_nc_L0, R9
0x0BC8	0xF00AC276  	MOVFF       Sound_Play_nc_L0+1, R10
0x0BCC	0x0E00      	MOVLW       0
0x0BCE	0x6E0B      	MOVWF       R11 
0x0BD0	0x6E0C      	MOVWF       R12 
0x0BD2	0x0E03      	MOVLW       3
0x0BD4	0x6E08      	MOVWF       R8 
0x0BD6	0xF004C009  	MOVFF       R9, R4
0x0BDA	0xF005C00A  	MOVFF       R10, R5
0x0BDE	0xF006C00B  	MOVFF       R11, R6
0x0BE2	0xF007C00C  	MOVFF       R12, R7
0x0BE6	0x5008      	MOVF        R8, 0 
L__Sound_Play13:
0x0BE8	0xE007      	BZ          L__Sound_Play14
0x0BEA	0x3604      	RLCF        R4, 1 
0x0BEC	0x9004      	BCF         R4, 0 
0x0BEE	0x3605      	RLCF        R5, 1 
0x0BF0	0x3606      	RLCF        R6, 1 
0x0BF2	0x3607      	RLCF        R7, 1 
0x0BF4	0x0FFF      	ADDLW       255
0x0BF6	0xD7F8      	BRA         L__Sound_Play13
L__Sound_Play14:
0x0BF8	0xDC7E      	RCALL       _Div_32x32_U
0x0BFA	0xF279C000  	MOVFF       R0, Sound_Play_per_nc_L0
0x0BFE	0xF27AC001  	MOVFF       R1, Sound_Play_per_nc_L0+1
0x0C02	0xF27BC002  	MOVFF       R2, Sound_Play_per_nc_L0+2
0x0C06	0xF27CC003  	MOVFF       R3, Sound_Play_per_nc_L0+3
;__Lib_Sound.c,37 :: 		
0x0C0A	0x0E0A      	MOVLW       10
0x0C0C	0x6E04      	MOVWF       R4 
0x0C0E	0x0E00      	MOVLW       0
0x0C10	0x6E05      	MOVWF       R5 
0x0C12	0xF000C275  	MOVFF       Sound_Play_nc_L0, R0
0x0C16	0xF001C276  	MOVFF       Sound_Play_nc_L0+1, R1
0x0C1A	0xF000ECB0  	CALL        _Div_16x16_U, 0
0x0C1E	0xF275C000  	MOVFF       R0, Sound_Play_nc_L0
0x0C22	0xF276C001  	MOVFF       R1, Sound_Play_nc_L0+1
;__Lib_Sound.c,38 :: 		
0x0C26	0x0E00      	MOVLW       0
0x0C28	0x5C01      	SUBWF       R1, 0 
0x0C2A	0xE102      	BNZ         L__Sound_Play15
0x0C2C	0x0E03      	MOVLW       3
0x0C2E	0x5C00      	SUBWF       R0, 0 
L__Sound_Play15:
0x0C30	0xE201      	BC          L_Sound_Play0
0x0C32	0x0012      	RETURN      0
L_Sound_Play0:
;__Lib_Sound.c,39 :: 		
0x0C34	0xFFE9C06E  	MOVFF       __Lib_Sound_soundPortAddr, FSR0L
0x0C38	0xFFEAC06F  	MOVFF       __Lib_Sound_soundPortAddr+1, FSR0H
;__Lib_Sound.c,40 :: 		
L_Sound_Play1:
0x0C3C	0x0102      	MOVLB       2
0x0C3E	0x517C      	MOVF        Sound_Play_per_nc_L0+3, 0, 1
0x0C40	0x0800      	SUBLW       0
0x0C42	0xE108      	BNZ         L__Sound_Play16
0x0C44	0x517B      	MOVF        Sound_Play_per_nc_L0+2, 0, 1
0x0C46	0x0800      	SUBLW       0
0x0C48	0xE105      	BNZ         L__Sound_Play16
0x0C4A	0x517A      	MOVF        Sound_Play_per_nc_L0+1, 0, 1
0x0C4C	0x0800      	SUBLW       0
0x0C4E	0xE102      	BNZ         L__Sound_Play16
0x0C50	0x5179      	MOVF        Sound_Play_per_nc_L0, 0, 1
0x0C52	0x0800      	SUBLW       0
L__Sound_Play16:
0x0C54	0xE233      	BC          L_Sound_Play2
;__Lib_Sound.c,41 :: 		
0x0C56	0x5070      	MOVF        __Lib_Sound_pinMask1, 0 
0x0C58	0x12EF      	IORWF       INDF0, 1 
;__Lib_Sound.c,43 :: 		
0x0C5A	0x5376      	MOVF        Sound_Play_nc_L0+1, 1, 1
0x0C5C	0xE00E      	BZ          L_Sound_Play3
;__Lib_Sound.c,44 :: 		
0x0C5E	0x6B77      	CLRF        Sound_Play_i_L0, 1
0x0C60	0x6B78      	CLRF        Sound_Play_i_L0+1, 1
L_Sound_Play4:
0x0C62	0x0E00      	MOVLW       0
0x0C64	0x5D78      	SUBWF       Sound_Play_i_L0+1, 0, 1
0x0C66	0xE102      	BNZ         L__Sound_Play17
0x0C68	0x5176      	MOVF        Sound_Play_nc_L0+1, 0, 1
0x0C6A	0x5D77      	SUBWF       Sound_Play_i_L0, 0, 1
L__Sound_Play17:
0x0C6C	0xE206      	BC          L_Sound_Play5
;__Lib_Sound.c,45 :: 		
0x0C6E	0x6B7D      	CLRF        FARG_Delay_Cyc_cycles_div_by_10, 1
0x0C70	0xF002EC31  	CALL        _Delay_Cyc, 0
;__Lib_Sound.c,44 :: 		
0x0C74	0x4B77      	INFSNZ      Sound_Play_i_L0, 1, 1
0x0C76	0x2B78      	INCF        Sound_Play_i_L0+1, 1, 1
;__Lib_Sound.c,46 :: 		
0x0C78	0xD7F4      	BRA         L_Sound_Play4
L_Sound_Play5:
;__Lib_Sound.c,47 :: 		
L_Sound_Play3:
;__Lib_Sound.c,48 :: 		
0x0C7A	0xF27DC275  	MOVFF       Sound_Play_nc_L0, FARG_Delay_Cyc_cycles_div_by_10
0x0C7E	0xF002EC31  	CALL        _Delay_Cyc, 0
;__Lib_Sound.c,50 :: 		
0x0C82	0x5071      	MOVF        __Lib_Sound_pinMask0, 0 
0x0C84	0x16EF      	ANDWF       INDF0, 1 
;__Lib_Sound.c,52 :: 		
0x0C86	0x5376      	MOVF        Sound_Play_nc_L0+1, 1, 1
0x0C88	0xE00E      	BZ          L_Sound_Play7
;__Lib_Sound.c,53 :: 		
0x0C8A	0x6B77      	CLRF        Sound_Play_i_L0, 1
0x0C8C	0x6B78      	CLRF        Sound_Play_i_L0+1, 1
L_Sound_Play8:
0x0C8E	0x0E00      	MOVLW       0
0x0C90	0x5D78      	SUBWF       Sound_Play_i_L0+1, 0, 1
0x0C92	0xE102      	BNZ         L__Sound_Play18
0x0C94	0x5176      	MOVF        Sound_Play_nc_L0+1, 0, 1
0x0C96	0x5D77      	SUBWF       Sound_Play_i_L0, 0, 1
L__Sound_Play18:
0x0C98	0xE206      	BC          L_Sound_Play9
;__Lib_Sound.c,54 :: 		
0x0C9A	0x6B7D      	CLRF        FARG_Delay_Cyc_cycles_div_by_10, 1
0x0C9C	0xF002EC31  	CALL        _Delay_Cyc, 0
;__Lib_Sound.c,53 :: 		
0x0CA0	0x4B77      	INFSNZ      Sound_Play_i_L0, 1, 1
0x0CA2	0x2B78      	INCF        Sound_Play_i_L0+1, 1, 1
;__Lib_Sound.c,55 :: 		
0x0CA4	0xD7F4      	BRA         L_Sound_Play8
L_Sound_Play9:
;__Lib_Sound.c,56 :: 		
L_Sound_Play7:
;__Lib_Sound.c,57 :: 		
0x0CA6	0xF27DC275  	MOVFF       Sound_Play_nc_L0, FARG_Delay_Cyc_cycles_div_by_10
0x0CAA	0xF002EC31  	CALL        _Delay_Cyc, 0
;__Lib_Sound.c,59 :: 		
0x0CAE	0x0E01      	MOVLW       1
0x0CB0	0x5F79      	SUBWF       Sound_Play_per_nc_L0, 1, 1
0x0CB2	0x0E00      	MOVLW       0
0x0CB4	0x5B7A      	SUBWFB      Sound_Play_per_nc_L0+1, 1, 1
0x0CB6	0x5B7B      	SUBWFB      Sound_Play_per_nc_L0+2, 1, 1
0x0CB8	0x5B7C      	SUBWFB      Sound_Play_per_nc_L0+3, 1, 1
;__Lib_Sound.c,61 :: 		
0x0CBA	0xD7C0      	BRA         L_Sound_Play1
L_Sound_Play2:
;__Lib_Sound.c,62 :: 		
0x0CBC	0x5071      	MOVF        __Lib_Sound_pinMask0, 0 
0x0CBE	0x16EF      	ANDWF       INDF0, 1 
;__Lib_Sound.c,63 :: 		
0x0CC0	0x0012      	RETURN      0
; end of _Sound_Play
_Delay_100ms:
;__Lib_Delays.c,39 :: 		void Delay_100ms() {
;__Lib_Delays.c,40 :: 		Delay_ms(100);
0x0CC2	0x0E02      	MOVLW       2
0x0CC4	0x6E0B      	MOVWF       R11, 0
0x0CC6	0x0E04      	MOVLW       4
0x0CC8	0x6E0C      	MOVWF       R12, 0
0x0CCA	0x0EBA      	MOVLW       186
0x0CCC	0x6E0D      	MOVWF       R13, 0
L_Delay_100ms7:
0x0CCE	0x2E0D      	DECFSZ      R13, 1, 0
0x0CD0	0xD7FE      	BRA         L_Delay_100ms7
0x0CD2	0x2E0C      	DECFSZ      R12, 1, 0
0x0CD4	0xD7FC      	BRA         L_Delay_100ms7
0x0CD6	0x2E0B      	DECFSZ      R11, 1, 0
0x0CD8	0xD7FA      	BRA         L_Delay_100ms7
0x0CDA	0x0000      	NOP
;__Lib_Delays.c,41 :: 		}
0x0CDC	0x0012      	RETURN      0
; end of _Delay_100ms
_move_ghost:
;compy.c,135 :: 		void move_ghost() {
;compy.c,136 :: 		new_ghost_x = ghost_x;
0x0CDE	0xF02AC02F  	MOVFF       _ghost_x, _new_ghost_x
0x0CE2	0xF02BC030  	MOVFF       _ghost_x+1, _new_ghost_x+1
;compy.c,138 :: 		if (pacman_x > ghost_x) {
0x0CE6	0x0E80      	MOVLW       128
0x0CE8	0x1830      	XORWF       _ghost_x+1, 0 
0x0CEA	0x6E00      	MOVWF       R0 
0x0CEC	0x0E80      	MOVLW       128
0x0CEE	0x1834      	XORWF       _pacman_x+1, 0 
0x0CF0	0x5C00      	SUBWF       R0, 0 
0x0CF2	0xE102      	BNZ         L__move_ghost149
0x0CF4	0x5033      	MOVF        _pacman_x, 0 
0x0CF6	0x5C2F      	SUBWF       _ghost_x, 0 
L__move_ghost149:
0x0CF8	0xE207      	BC          L_move_ghost13
;compy.c,139 :: 		new_ghost_x = ghost_x + 1;
0x0CFA	0x0E01      	MOVLW       1
0x0CFC	0x242F      	ADDWF       _ghost_x, 0 
0x0CFE	0x6E2A      	MOVWF       _new_ghost_x 
0x0D00	0x0E00      	MOVLW       0
0x0D02	0x2030      	ADDWFC      _ghost_x+1, 0 
0x0D04	0x6E2B      	MOVWF       _new_ghost_x+1 
;compy.c,140 :: 		} else if (pacman_x < ghost_x) {
0x0D06	0xD010      	BRA         L_move_ghost14
L_move_ghost13:
0x0D08	0x0E80      	MOVLW       128
0x0D0A	0x1834      	XORWF       _pacman_x+1, 0 
0x0D0C	0x6E00      	MOVWF       R0 
0x0D0E	0x0E80      	MOVLW       128
0x0D10	0x1830      	XORWF       _ghost_x+1, 0 
0x0D12	0x5C00      	SUBWF       R0, 0 
0x0D14	0xE102      	BNZ         L__move_ghost150
0x0D16	0x502F      	MOVF        _ghost_x, 0 
0x0D18	0x5C33      	SUBWF       _pacman_x, 0 
L__move_ghost150:
0x0D1A	0xE206      	BC          L_move_ghost15
;compy.c,141 :: 		new_ghost_x = ghost_x - 1;
0x0D1C	0x0E01      	MOVLW       1
0x0D1E	0x5C2F      	SUBWF       _ghost_x, 0 
0x0D20	0x6E2A      	MOVWF       _new_ghost_x 
0x0D22	0x0E00      	MOVLW       0
0x0D24	0x5830      	SUBWFB      _ghost_x+1, 0 
0x0D26	0x6E2B      	MOVWF       _new_ghost_x+1 
;compy.c,142 :: 		}
L_move_ghost15:
L_move_ghost14:
;compy.c,144 :: 		if (world[new_ghost_x][ghost_y] == barrier_orientation) {
0x0D28	0xF000C02A  	MOVFF       _new_ghost_x, R0
0x0D2C	0xF001C02B  	MOVFF       _new_ghost_x+1, R1
0x0D30	0x0E3C      	MOVLW       60
0x0D32	0x6E04      	MOVWF       R4 
0x0D34	0x0E00      	MOVLW       0
0x0D36	0x6E05      	MOVWF       R5 
0x0D38	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0D3C	0x0E8D      	MOVLW       _world
0x0D3E	0x2400      	ADDWF       R0, 0 
0x0D40	0x6E03      	MOVWF       R3 
0x0D42	0x0E00      	MOVLW       hi_addr(_world)
0x0D44	0x2001      	ADDWFC      R1, 0 
0x0D46	0x6E04      	MOVWF       R4 
0x0D48	0xF000C035  	MOVFF       _ghost_y, R0
0x0D4C	0xF001C036  	MOVFF       _ghost_y+1, R1
0x0D50	0x3600      	RLCF        R0, 1 
0x0D52	0x9000      	BCF         R0, 0 
0x0D54	0x3601      	RLCF        R1, 1 
0x0D56	0x3600      	RLCF        R0, 1 
0x0D58	0x9000      	BCF         R0, 0 
0x0D5A	0x3601      	RLCF        R1, 1 
0x0D5C	0x5000      	MOVF        R0, 0 
0x0D5E	0x2403      	ADDWF       R3, 0 
0x0D60	0x6EE9      	MOVWF       FSR0L 
0x0D62	0x5001      	MOVF        R1, 0 
0x0D64	0x2004      	ADDWFC      R4, 0 
0x0D66	0x6EEA      	MOVWF       FSR0H 
0x0D68	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0D6C	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0D70	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0D74	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0D78	0x0E00      	MOVLW       0
0x0D7A	0x6E00      	MOVWF       R0 
0x0D7C	0x1804      	XORWF       R4, 0 
0x0D7E	0xE108      	BNZ         L__move_ghost151
0x0D80	0x5000      	MOVF        R0, 0 
0x0D82	0x1803      	XORWF       R3, 0 
0x0D84	0xE105      	BNZ         L__move_ghost151
0x0D86	0x5000      	MOVF        R0, 0 
0x0D88	0x1802      	XORWF       R2, 0 
0x0D8A	0xE102      	BNZ         L__move_ghost151
0x0D8C	0x5001      	MOVF        R1, 0 
0x0D8E	0x184D      	XORWF       _barrier_orientation, 0 
L__move_ghost151:
0x0D90	0xA4D8      	BTFSS       STATUS, 2 
0x0D92	0xD088      	BRA         L_move_ghost16
;compy.c,145 :: 		new_ghost_x = ghost_x;
0x0D94	0xF02AC02F  	MOVFF       _ghost_x, _new_ghost_x
0x0D98	0xF02BC030  	MOVFF       _ghost_x+1, _new_ghost_x+1
;compy.c,146 :: 		if (world[ghost_x][ghost_y + 1] != barrier_orientation) {
0x0D9C	0xF000C02F  	MOVFF       _ghost_x, R0
0x0DA0	0xF001C030  	MOVFF       _ghost_x+1, R1
0x0DA4	0x0E3C      	MOVLW       60
0x0DA6	0x6E04      	MOVWF       R4 
0x0DA8	0x0E00      	MOVLW       0
0x0DAA	0x6E05      	MOVWF       R5 
0x0DAC	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0DB0	0x0E8D      	MOVLW       _world
0x0DB2	0x2400      	ADDWF       R0, 0 
0x0DB4	0x6E05      	MOVWF       R5 
0x0DB6	0x0E00      	MOVLW       hi_addr(_world)
0x0DB8	0x2001      	ADDWFC      R1, 0 
0x0DBA	0x6E06      	MOVWF       R6 
0x0DBC	0x0E01      	MOVLW       1
0x0DBE	0x2435      	ADDWF       _ghost_y, 0 
0x0DC0	0x6E03      	MOVWF       R3 
0x0DC2	0x0E00      	MOVLW       0
0x0DC4	0x2036      	ADDWFC      _ghost_y+1, 0 
0x0DC6	0x6E04      	MOVWF       R4 
0x0DC8	0xF000C003  	MOVFF       R3, R0
0x0DCC	0xF001C004  	MOVFF       R4, R1
0x0DD0	0x3600      	RLCF        R0, 1 
0x0DD2	0x9000      	BCF         R0, 0 
0x0DD4	0x3601      	RLCF        R1, 1 
0x0DD6	0x3600      	RLCF        R0, 1 
0x0DD8	0x9000      	BCF         R0, 0 
0x0DDA	0x3601      	RLCF        R1, 1 
0x0DDC	0x5000      	MOVF        R0, 0 
0x0DDE	0x2405      	ADDWF       R5, 0 
0x0DE0	0x6EE9      	MOVWF       FSR0L 
0x0DE2	0x5001      	MOVF        R1, 0 
0x0DE4	0x2006      	ADDWFC      R6, 0 
0x0DE6	0x6EEA      	MOVWF       FSR0H 
0x0DE8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0DEC	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0DF0	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0DF4	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0DF8	0x0E00      	MOVLW       0
0x0DFA	0x6E00      	MOVWF       R0 
0x0DFC	0x1804      	XORWF       R4, 0 
0x0DFE	0xE108      	BNZ         L__move_ghost152
0x0E00	0x5000      	MOVF        R0, 0 
0x0E02	0x1803      	XORWF       R3, 0 
0x0E04	0xE105      	BNZ         L__move_ghost152
0x0E06	0x5000      	MOVF        R0, 0 
0x0E08	0x1802      	XORWF       R2, 0 
0x0E0A	0xE102      	BNZ         L__move_ghost152
0x0E0C	0x5001      	MOVF        R1, 0 
0x0E0E	0x184D      	XORWF       _barrier_orientation, 0 
L__move_ghost152:
0x0E10	0xE007      	BZ          L_move_ghost17
;compy.c,147 :: 		new_ghost_y = ghost_y + 1;
0x0E12	0x0E01      	MOVLW       1
0x0E14	0x2435      	ADDWF       _ghost_y, 0 
0x0E16	0x6E28      	MOVWF       _new_ghost_y 
0x0E18	0x0E00      	MOVLW       0
0x0E1A	0x2036      	ADDWFC      _ghost_y+1, 0 
0x0E1C	0x6E29      	MOVWF       _new_ghost_y+1 
;compy.c,148 :: 		} else if (world[ghost_x][ghost_y - 1] != barrier_orientation) {
0x0E1E	0xD041      	BRA         L_move_ghost18
L_move_ghost17:
0x0E20	0xF000C02F  	MOVFF       _ghost_x, R0
0x0E24	0xF001C030  	MOVFF       _ghost_x+1, R1
0x0E28	0x0E3C      	MOVLW       60
0x0E2A	0x6E04      	MOVWF       R4 
0x0E2C	0x0E00      	MOVLW       0
0x0E2E	0x6E05      	MOVWF       R5 
0x0E30	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0E34	0x0E8D      	MOVLW       _world
0x0E36	0x2400      	ADDWF       R0, 0 
0x0E38	0x6E05      	MOVWF       R5 
0x0E3A	0x0E00      	MOVLW       hi_addr(_world)
0x0E3C	0x2001      	ADDWFC      R1, 0 
0x0E3E	0x6E06      	MOVWF       R6 
0x0E40	0x0E01      	MOVLW       1
0x0E42	0x5C35      	SUBWF       _ghost_y, 0 
0x0E44	0x6E03      	MOVWF       R3 
0x0E46	0x0E00      	MOVLW       0
0x0E48	0x5836      	SUBWFB      _ghost_y+1, 0 
0x0E4A	0x6E04      	MOVWF       R4 
0x0E4C	0xF000C003  	MOVFF       R3, R0
0x0E50	0xF001C004  	MOVFF       R4, R1
0x0E54	0x3600      	RLCF        R0, 1 
0x0E56	0x9000      	BCF         R0, 0 
0x0E58	0x3601      	RLCF        R1, 1 
0x0E5A	0x3600      	RLCF        R0, 1 
0x0E5C	0x9000      	BCF         R0, 0 
0x0E5E	0x3601      	RLCF        R1, 1 
0x0E60	0x5000      	MOVF        R0, 0 
0x0E62	0x2405      	ADDWF       R5, 0 
0x0E64	0x6EE9      	MOVWF       FSR0L 
0x0E66	0x5001      	MOVF        R1, 0 
0x0E68	0x2006      	ADDWFC      R6, 0 
0x0E6A	0x6EEA      	MOVWF       FSR0H 
0x0E6C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0E70	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0E74	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0E78	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0E7C	0x0E00      	MOVLW       0
0x0E7E	0x6E00      	MOVWF       R0 
0x0E80	0x1804      	XORWF       R4, 0 
0x0E82	0xE108      	BNZ         L__move_ghost153
0x0E84	0x5000      	MOVF        R0, 0 
0x0E86	0x1803      	XORWF       R3, 0 
0x0E88	0xE105      	BNZ         L__move_ghost153
0x0E8A	0x5000      	MOVF        R0, 0 
0x0E8C	0x1802      	XORWF       R2, 0 
0x0E8E	0xE102      	BNZ         L__move_ghost153
0x0E90	0x5001      	MOVF        R1, 0 
0x0E92	0x184D      	XORWF       _barrier_orientation, 0 
L__move_ghost153:
0x0E94	0xE006      	BZ          L_move_ghost19
;compy.c,149 :: 		new_ghost_y = ghost_y - 1;
0x0E96	0x0E01      	MOVLW       1
0x0E98	0x5C35      	SUBWF       _ghost_y, 0 
0x0E9A	0x6E28      	MOVWF       _new_ghost_y 
0x0E9C	0x0E00      	MOVLW       0
0x0E9E	0x5836      	SUBWFB      _ghost_y+1, 0 
0x0EA0	0x6E29      	MOVWF       _new_ghost_y+1 
;compy.c,150 :: 		}
L_move_ghost19:
L_move_ghost18:
;compy.c,151 :: 		} else if (new_ghost_x == ghost_x) {
0x0EA2	0xD09E      	BRA         L_move_ghost20
L_move_ghost16:
0x0EA4	0x502B      	MOVF        _new_ghost_x+1, 0 
0x0EA6	0x1830      	XORWF       _ghost_x+1, 0 
0x0EA8	0xE102      	BNZ         L__move_ghost154
0x0EAA	0x502F      	MOVF        _ghost_x, 0 
0x0EAC	0x182A      	XORWF       _new_ghost_x, 0 
L__move_ghost154:
0x0EAE	0xA4D8      	BTFSS       STATUS, 2 
0x0EB0	0xD097      	BRA         L_move_ghost21
;compy.c,152 :: 		if (pacman_y > ghost_y && world[ghost_x][ghost_y + 1] != barrier_orientation) {
0x0EB2	0x0E80      	MOVLW       128
0x0EB4	0x1836      	XORWF       _ghost_y+1, 0 
0x0EB6	0x6E00      	MOVWF       R0 
0x0EB8	0x0E80      	MOVLW       128
0x0EBA	0x1832      	XORWF       _pacman_y+1, 0 
0x0EBC	0x5C00      	SUBWF       R0, 0 
0x0EBE	0xE102      	BNZ         L__move_ghost155
0x0EC0	0x5031      	MOVF        _pacman_y, 0 
0x0EC2	0x5C35      	SUBWF       _ghost_y, 0 
L__move_ghost155:
0x0EC4	0xE242      	BC          L_move_ghost24
0x0EC6	0xF000C02F  	MOVFF       _ghost_x, R0
0x0ECA	0xF001C030  	MOVFF       _ghost_x+1, R1
0x0ECE	0x0E3C      	MOVLW       60
0x0ED0	0x6E04      	MOVWF       R4 
0x0ED2	0x0E00      	MOVLW       0
0x0ED4	0x6E05      	MOVWF       R5 
0x0ED6	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0EDA	0x0E8D      	MOVLW       _world
0x0EDC	0x2400      	ADDWF       R0, 0 
0x0EDE	0x6E05      	MOVWF       R5 
0x0EE0	0x0E00      	MOVLW       hi_addr(_world)
0x0EE2	0x2001      	ADDWFC      R1, 0 
0x0EE4	0x6E06      	MOVWF       R6 
0x0EE6	0x0E01      	MOVLW       1
0x0EE8	0x2435      	ADDWF       _ghost_y, 0 
0x0EEA	0x6E03      	MOVWF       R3 
0x0EEC	0x0E00      	MOVLW       0
0x0EEE	0x2036      	ADDWFC      _ghost_y+1, 0 
0x0EF0	0x6E04      	MOVWF       R4 
0x0EF2	0xF000C003  	MOVFF       R3, R0
0x0EF6	0xF001C004  	MOVFF       R4, R1
0x0EFA	0x3600      	RLCF        R0, 1 
0x0EFC	0x9000      	BCF         R0, 0 
0x0EFE	0x3601      	RLCF        R1, 1 
0x0F00	0x3600      	RLCF        R0, 1 
0x0F02	0x9000      	BCF         R0, 0 
0x0F04	0x3601      	RLCF        R1, 1 
0x0F06	0x5000      	MOVF        R0, 0 
0x0F08	0x2405      	ADDWF       R5, 0 
0x0F0A	0x6EE9      	MOVWF       FSR0L 
0x0F0C	0x5001      	MOVF        R1, 0 
0x0F0E	0x2006      	ADDWFC      R6, 0 
0x0F10	0x6EEA      	MOVWF       FSR0H 
0x0F12	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0F16	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0F1A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0F1E	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0F22	0x0E00      	MOVLW       0
0x0F24	0x6E00      	MOVWF       R0 
0x0F26	0x1804      	XORWF       R4, 0 
0x0F28	0xE108      	BNZ         L__move_ghost156
0x0F2A	0x5000      	MOVF        R0, 0 
0x0F2C	0x1803      	XORWF       R3, 0 
0x0F2E	0xE105      	BNZ         L__move_ghost156
0x0F30	0x5000      	MOVF        R0, 0 
0x0F32	0x1802      	XORWF       R2, 0 
0x0F34	0xE102      	BNZ         L__move_ghost156
0x0F36	0x5001      	MOVF        R1, 0 
0x0F38	0x184D      	XORWF       _barrier_orientation, 0 
L__move_ghost156:
0x0F3A	0xE007      	BZ          L_move_ghost24
L__move_ghost147:
;compy.c,153 :: 		new_ghost_y = ghost_y + 1;
0x0F3C	0x0E01      	MOVLW       1
0x0F3E	0x2435      	ADDWF       _ghost_y, 0 
0x0F40	0x6E28      	MOVWF       _new_ghost_y 
0x0F42	0x0E00      	MOVLW       0
0x0F44	0x2036      	ADDWFC      _ghost_y+1, 0 
0x0F46	0x6E29      	MOVWF       _new_ghost_y+1 
;compy.c,154 :: 		} else if (pacman_y < ghost_y && world[ghost_x][ghost_y - 1] != barrier_orientation) {
0x0F48	0xD04B      	BRA         L_move_ghost25
L_move_ghost24:
0x0F4A	0x0E80      	MOVLW       128
0x0F4C	0x1832      	XORWF       _pacman_y+1, 0 
0x0F4E	0x6E00      	MOVWF       R0 
0x0F50	0x0E80      	MOVLW       128
0x0F52	0x1836      	XORWF       _ghost_y+1, 0 
0x0F54	0x5C00      	SUBWF       R0, 0 
0x0F56	0xE102      	BNZ         L__move_ghost157
0x0F58	0x5035      	MOVF        _ghost_y, 0 
0x0F5A	0x5C31      	SUBWF       _pacman_y, 0 
L__move_ghost157:
0x0F5C	0xE241      	BC          L_move_ghost28
0x0F5E	0xF000C02F  	MOVFF       _ghost_x, R0
0x0F62	0xF001C030  	MOVFF       _ghost_x+1, R1
0x0F66	0x0E3C      	MOVLW       60
0x0F68	0x6E04      	MOVWF       R4 
0x0F6A	0x0E00      	MOVLW       0
0x0F6C	0x6E05      	MOVWF       R5 
0x0F6E	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0F72	0x0E8D      	MOVLW       _world
0x0F74	0x2400      	ADDWF       R0, 0 
0x0F76	0x6E05      	MOVWF       R5 
0x0F78	0x0E00      	MOVLW       hi_addr(_world)
0x0F7A	0x2001      	ADDWFC      R1, 0 
0x0F7C	0x6E06      	MOVWF       R6 
0x0F7E	0x0E01      	MOVLW       1
0x0F80	0x5C35      	SUBWF       _ghost_y, 0 
0x0F82	0x6E03      	MOVWF       R3 
0x0F84	0x0E00      	MOVLW       0
0x0F86	0x5836      	SUBWFB      _ghost_y+1, 0 
0x0F88	0x6E04      	MOVWF       R4 
0x0F8A	0xF000C003  	MOVFF       R3, R0
0x0F8E	0xF001C004  	MOVFF       R4, R1
0x0F92	0x3600      	RLCF        R0, 1 
0x0F94	0x9000      	BCF         R0, 0 
0x0F96	0x3601      	RLCF        R1, 1 
0x0F98	0x3600      	RLCF        R0, 1 
0x0F9A	0x9000      	BCF         R0, 0 
0x0F9C	0x3601      	RLCF        R1, 1 
0x0F9E	0x5000      	MOVF        R0, 0 
0x0FA0	0x2405      	ADDWF       R5, 0 
0x0FA2	0x6EE9      	MOVWF       FSR0L 
0x0FA4	0x5001      	MOVF        R1, 0 
0x0FA6	0x2006      	ADDWFC      R6, 0 
0x0FA8	0x6EEA      	MOVWF       FSR0H 
0x0FAA	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0FAE	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0FB2	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0FB6	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0FBA	0x0E00      	MOVLW       0
0x0FBC	0x6E00      	MOVWF       R0 
0x0FBE	0x1804      	XORWF       R4, 0 
0x0FC0	0xE108      	BNZ         L__move_ghost158
0x0FC2	0x5000      	MOVF        R0, 0 
0x0FC4	0x1803      	XORWF       R3, 0 
0x0FC6	0xE105      	BNZ         L__move_ghost158
0x0FC8	0x5000      	MOVF        R0, 0 
0x0FCA	0x1802      	XORWF       R2, 0 
0x0FCC	0xE102      	BNZ         L__move_ghost158
0x0FCE	0x5001      	MOVF        R1, 0 
0x0FD0	0x184D      	XORWF       _barrier_orientation, 0 
L__move_ghost158:
0x0FD2	0xE006      	BZ          L_move_ghost28
L__move_ghost146:
;compy.c,155 :: 		new_ghost_y = ghost_y - 1;
0x0FD4	0x0E01      	MOVLW       1
0x0FD6	0x5C35      	SUBWF       _ghost_y, 0 
0x0FD8	0x6E28      	MOVWF       _new_ghost_y 
0x0FDA	0x0E00      	MOVLW       0
0x0FDC	0x5836      	SUBWFB      _ghost_y+1, 0 
0x0FDE	0x6E29      	MOVWF       _new_ghost_y+1 
;compy.c,156 :: 		}
L_move_ghost28:
L_move_ghost25:
;compy.c,157 :: 		}
L_move_ghost21:
L_move_ghost20:
;compy.c,159 :: 		world[ghost_x][ghost_y] = old_ghost_obj;
0x0FE0	0xF000C02F  	MOVFF       _ghost_x, R0
0x0FE4	0xF001C030  	MOVFF       _ghost_x+1, R1
0x0FE8	0x0E3C      	MOVLW       60
0x0FEA	0x6E04      	MOVWF       R4 
0x0FEC	0x0E00      	MOVLW       0
0x0FEE	0x6E05      	MOVWF       R5 
0x0FF0	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x0FF4	0x0E8D      	MOVLW       _world
0x0FF6	0x2400      	ADDWF       R0, 0 
0x0FF8	0x6E03      	MOVWF       R3 
0x0FFA	0x0E00      	MOVLW       hi_addr(_world)
0x0FFC	0x2001      	ADDWFC      R1, 0 
0x0FFE	0x6E04      	MOVWF       R4 
0x1000	0xF000C035  	MOVFF       _ghost_y, R0
0x1004	0xF001C036  	MOVFF       _ghost_y+1, R1
0x1008	0x3600      	RLCF        R0, 1 
0x100A	0x9000      	BCF         R0, 0 
0x100C	0x3601      	RLCF        R1, 1 
0x100E	0x3600      	RLCF        R0, 1 
0x1010	0x9000      	BCF         R0, 0 
0x1012	0x3601      	RLCF        R1, 1 
0x1014	0x5000      	MOVF        R0, 0 
0x1016	0x2403      	ADDWF       R3, 0 
0x1018	0x6EE1      	MOVWF       FSR1L 
0x101A	0x5001      	MOVF        R1, 0 
0x101C	0x2004      	ADDWFC      R4, 0 
0x101E	0x6EE2      	MOVWF       FSR1H 
0x1020	0xFFE6C044  	MOVFF       _old_ghost_obj, POSTINC1
0x1024	0x0E00      	MOVLW       0
0x1026	0x6EE6      	MOVWF       POSTINC1 
0x1028	0x6EE6      	MOVWF       POSTINC1 
0x102A	0x6EE6      	MOVWF       POSTINC1 
;compy.c,160 :: 		printCoordinate(ghost_x, ghost_y);
0x102C	0xF27DC02F  	MOVFF       _ghost_x, FARG_printCoordinate_x
0x1030	0xF27EC030  	MOVFF       _ghost_x+1, FARG_printCoordinate_x+1
0x1034	0xF27FC035  	MOVFF       _ghost_y, FARG_printCoordinate_y
0x1038	0xF280C036  	MOVFF       _ghost_y+1, FARG_printCoordinate_y+1
0x103C	0xF002EC03  	CALL        _printCoordinate, 0
;compy.c,162 :: 		old_ghost_obj = world[new_ghost_x][new_ghost_y];
0x1040	0xF000C02A  	MOVFF       _new_ghost_x, R0
0x1044	0xF001C02B  	MOVFF       _new_ghost_x+1, R1
0x1048	0x0E3C      	MOVLW       60
0x104A	0x6E04      	MOVWF       R4 
0x104C	0x0E00      	MOVLW       0
0x104E	0x6E05      	MOVWF       R5 
0x1050	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1054	0x0E8D      	MOVLW       _world
0x1056	0x2400      	ADDWF       R0, 0 
0x1058	0x6E03      	MOVWF       R3 
0x105A	0x0E00      	MOVLW       hi_addr(_world)
0x105C	0x2001      	ADDWFC      R1, 0 
0x105E	0x6E04      	MOVWF       R4 
0x1060	0xF000C028  	MOVFF       _new_ghost_y, R0
0x1064	0xF001C029  	MOVFF       _new_ghost_y+1, R1
0x1068	0x3600      	RLCF        R0, 1 
0x106A	0x9000      	BCF         R0, 0 
0x106C	0x3601      	RLCF        R1, 1 
0x106E	0x3600      	RLCF        R0, 1 
0x1070	0x9000      	BCF         R0, 0 
0x1072	0x3601      	RLCF        R1, 1 
0x1074	0x5003      	MOVF        R3, 0 
0x1076	0x2600      	ADDWF       R0, 1 
0x1078	0x5004      	MOVF        R4, 0 
0x107A	0x2201      	ADDWFC      R1, 1 
0x107C	0xFFE9C000  	MOVFF       R0, FSR0L
0x1080	0xFFEAC001  	MOVFF       R1, FSR0H
0x1084	0xF044CFEE  	MOVFF       POSTINC0, _old_ghost_obj
;compy.c,163 :: 		world[new_ghost_x][new_ghost_y] = ghost_orientation;
0x1088	0xFFE1C000  	MOVFF       R0, FSR1L
0x108C	0xFFE2C001  	MOVFF       R1, FSR1H
0x1090	0xFFE6C060  	MOVFF       _ghost_orientation, POSTINC1
0x1094	0x0E00      	MOVLW       0
0x1096	0x6EE6      	MOVWF       POSTINC1 
0x1098	0x6EE6      	MOVWF       POSTINC1 
0x109A	0x6EE6      	MOVWF       POSTINC1 
;compy.c,164 :: 		printCoordinate(new_ghost_x, new_ghost_y);
0x109C	0xF27DC02A  	MOVFF       _new_ghost_x, FARG_printCoordinate_x
0x10A0	0xF27EC02B  	MOVFF       _new_ghost_x+1, FARG_printCoordinate_x+1
0x10A4	0xF27FC028  	MOVFF       _new_ghost_y, FARG_printCoordinate_y
0x10A8	0xF280C029  	MOVFF       _new_ghost_y+1, FARG_printCoordinate_y+1
0x10AC	0xF002EC03  	CALL        _printCoordinate, 0
;compy.c,166 :: 		ghost_y = new_ghost_y;
0x10B0	0xF035C028  	MOVFF       _new_ghost_y, _ghost_y
0x10B4	0xF036C029  	MOVFF       _new_ghost_y+1, _ghost_y+1
;compy.c,167 :: 		ghost_x = new_ghost_x;
0x10B8	0xF02FC02A  	MOVFF       _new_ghost_x, _ghost_x
0x10BC	0xF030C02B  	MOVFF       _new_ghost_x+1, _ghost_x+1
;compy.c,168 :: 		}
0x10C0	0x0012      	RETURN      0
; end of _move_ghost
_UART1_Write_Text:
;__Lib_UART_c67.c,67 :: 		
;__Lib_UART_c67.c,68 :: 		
0x10C2	0x0102      	MOVLB       2
0x10C4	0x6B6F      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,70 :: 		
0x10C6	0xFFE9C26D  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x10CA	0xFFEAC26E  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x10CE	0xF080CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,71 :: 		
L_UART1_Write_Text5:
0x10D2	0x0100      	MOVLB       0
0x10D4	0x5180      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x10D6	0x0A00      	XORLW       0
0x10D8	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,72 :: 		
0x10DA	0xF271C080  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x10DE	0xDCB3      	RCALL       _UART1_Write
;__Lib_UART_c67.c,73 :: 		
0x10E0	0x0102      	MOVLB       2
0x10E2	0x2B6F      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,74 :: 		
0x10E4	0x516F      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x10E6	0x256D      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x10E8	0x6EE9      	MOVWF       FSR0L 
0x10EA	0x0E00      	MOVLW       0
0x10EC	0x216E      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x10EE	0x6EEA      	MOVWF       FSR0H 
0x10F0	0xF080CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,75 :: 		
0x10F4	0xD7EE      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,76 :: 		
0x10F6	0x0012      	RETURN      0
; end of _UART1_Write_Text
_Start_Screen_1:
;compy.c,416 :: 		void Start_Screen_1() {
;compy.c,417 :: 		Sound_Play(DO1, 200);
0x10F8	0x0E41      	MOVLW       65
0x10FA	0x0102      	MOVLB       2
0x10FC	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x10FE	0x0E00      	MOVLW       0
0x1100	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x1102	0x0EC8      	MOVLW       200
0x1104	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x1106	0x0E00      	MOVLW       0
0x1108	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x110A	0xDD0F      	RCALL       _Sound_Play
;compy.c,418 :: 		Sound_Play(DO1, 200);
0x110C	0x0E41      	MOVLW       65
0x110E	0x0102      	MOVLB       2
0x1110	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x1112	0x0E00      	MOVLW       0
0x1114	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x1116	0x0EC8      	MOVLW       200
0x1118	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x111A	0x0E00      	MOVLW       0
0x111C	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x111E	0xDD05      	RCALL       _Sound_Play
;compy.c,419 :: 		Sound_Play(RE1, 200);
0x1120	0x0E01      	MOVLW       1
0x1122	0x0102      	MOVLB       2
0x1124	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x1126	0x0E00      	MOVLW       0
0x1128	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x112A	0x0EC8      	MOVLW       200
0x112C	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x112E	0x0E00      	MOVLW       0
0x1130	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x1132	0xDCFB      	RCALL       _Sound_Play
;compy.c,420 :: 		Sound_Play(DO1, 200);
0x1134	0x0E41      	MOVLW       65
0x1136	0x0102      	MOVLB       2
0x1138	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x113A	0x0E00      	MOVLW       0
0x113C	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x113E	0x0EC8      	MOVLW       200
0x1140	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x1142	0x0E00      	MOVLW       0
0x1144	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x1146	0xDCF1      	RCALL       _Sound_Play
;compy.c,421 :: 		Sound_Play(FA1, 1000);
0x1148	0x0E57      	MOVLW       87
0x114A	0x0102      	MOVLB       2
0x114C	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x114E	0x0E00      	MOVLW       0
0x1150	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x1152	0x0EE8      	MOVLW       232
0x1154	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x1156	0x0E03      	MOVLW       3
0x1158	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x115A	0xDCE7      	RCALL       _Sound_Play
;compy.c,422 :: 		Delay_ms(500);
0x115C	0x0E06      	MOVLW       6
0x115E	0x6E0B      	MOVWF       R11, 0
0x1160	0x0E13      	MOVLW       19
0x1162	0x6E0C      	MOVWF       R12, 0
0x1164	0x0EAD      	MOVLW       173
0x1166	0x6E0D      	MOVWF       R13, 0
L_Start_Screen_1129:
0x1168	0x2E0D      	DECFSZ      R13, 1, 0
0x116A	0xD7FE      	BRA         L_Start_Screen_1129
0x116C	0x2E0C      	DECFSZ      R12, 1, 0
0x116E	0xD7FC      	BRA         L_Start_Screen_1129
0x1170	0x2E0B      	DECFSZ      R11, 1, 0
0x1172	0xD7FA      	BRA         L_Start_Screen_1129
0x1174	0x0000      	NOP
0x1176	0x0000      	NOP
;compy.c,423 :: 		Sound_Play(DO2, 100);
0x1178	0x0E83      	MOVLW       131
0x117A	0x0102      	MOVLB       2
0x117C	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x117E	0x0E00      	MOVLW       0
0x1180	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x1182	0x0E64      	MOVLW       100
0x1184	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x1186	0x0E00      	MOVLW       0
0x1188	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x118A	0xDCCF      	RCALL       _Sound_Play
;compy.c,424 :: 		Sound_Play(SI1, 100);
0x118C	0x0E7B      	MOVLW       123
0x118E	0x0102      	MOVLB       2
0x1190	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x1192	0x0E00      	MOVLW       0
0x1194	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x1196	0x0E64      	MOVLW       100
0x1198	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x119A	0x0E00      	MOVLW       0
0x119C	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x119E	0xDCC5      	RCALL       _Sound_Play
;compy.c,425 :: 		Sound_Play(LA1, 100);
0x11A0	0x0E6E      	MOVLW       110
0x11A2	0x0102      	MOVLB       2
0x11A4	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x11A6	0x0E00      	MOVLW       0
0x11A8	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x11AA	0x0E64      	MOVLW       100
0x11AC	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x11AE	0x0E00      	MOVLW       0
0x11B0	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x11B2	0xDCBB      	RCALL       _Sound_Play
;compy.c,426 :: 		Sound_Play(SOL1, 100);
0x11B4	0x0E62      	MOVLW       98
0x11B6	0x0102      	MOVLB       2
0x11B8	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x11BA	0x0E00      	MOVLW       0
0x11BC	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x11BE	0x0E64      	MOVLW       100
0x11C0	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x11C2	0x0E00      	MOVLW       0
0x11C4	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x11C6	0xDCB1      	RCALL       _Sound_Play
;compy.c,427 :: 		Sound_Play(DO1, 100);
0x11C8	0x0E41      	MOVLW       65
0x11CA	0x0102      	MOVLB       2
0x11CC	0x6F71      	MOVWF       FARG_Sound_Play_freq_in_hz, 1
0x11CE	0x0E00      	MOVLW       0
0x11D0	0x6F72      	MOVWF       FARG_Sound_Play_freq_in_hz+1, 1
0x11D2	0x0E64      	MOVLW       100
0x11D4	0x6F73      	MOVWF       FARG_Sound_Play_duration_ms, 1
0x11D6	0x0E00      	MOVLW       0
0x11D8	0x6F74      	MOVWF       FARG_Sound_Play_duration_ms+1, 1
0x11DA	0xDCA7      	RCALL       _Sound_Play
;compy.c,428 :: 		}
0x11DC	0x0012      	RETURN      0
; end of _Start_Screen_1
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x11DE	0x0E46      	MOVLW       _UART1_Write
0x11E0	0x0100      	MOVLB       0
0x11E2	0x6F81      	MOVWF       _UART_Wr_Ptr, 1
0x11E4	0x0E0A      	MOVLW       hi_addr(_UART1_Write)
0x11E6	0x6F82      	MOVWF       _UART_Wr_Ptr+1, 1
0x11E8	0x0E71      	MOVLW       FARG_UART1_Write_data_
0x11EA	0x6F83      	MOVWF       _UART_Wr_Ptr+2, 1
0x11EC	0x0E02      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x11EE	0x6F84      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x11F0	0x0EFF      	MOVLW       _UART1_Read
0x11F2	0x6E7A      	MOVWF       _UART_Rd_Ptr 
0x11F4	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x11F6	0x6E7B      	MOVWF       _UART_Rd_Ptr+1 
0x11F8	0x0E00      	MOVLW       0
0x11FA	0x6E7C      	MOVWF       _UART_Rd_Ptr+2 
0x11FC	0x0E00      	MOVLW       0
0x11FE	0x6E7D      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x1200	0x0EFF      	MOVLW       _UART1_Data_Ready
0x1202	0x6F85      	MOVWF       _UART_Rdy_Ptr, 1
0x1204	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x1206	0x6F86      	MOVWF       _UART_Rdy_Ptr+1, 1
0x1208	0x0E00      	MOVLW       0
0x120A	0x6F87      	MOVWF       _UART_Rdy_Ptr+2, 1
0x120C	0x0E00      	MOVLW       0
0x120E	0x6F88      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x1210	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x1212	0x6E76      	MOVWF       _UART_Tx_Idle_Ptr 
0x1214	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x1216	0x6E77      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x1218	0x0E00      	MOVLW       0
0x121A	0x6E78      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x121C	0x0E00      	MOVLW       0
0x121E	0x6E79      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x1220	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x1222	0x0E90      	MOVLW       144
0x1224	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x1226	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x1228	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x122A	0xAA9E      	BTFSS       PIR1, 5 
0x122C	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x122E	0xF000CFAE  	MOVFF       RCREG, R0
0x1232	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
0x1234	0x0012      	RETURN      0
; end of _UART1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x1236	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x1238	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x123C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x123E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x1240	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x1242	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x1244	0x0012      	RETURN      0
; end of ___CC2DW
_Sound_Init:
;__Lib_Sound.c,9 :: 		
;__Lib_Sound.c,11 :: 		
0x1246	0xF06EC26D  	MOVFF       FARG_Sound_Init_snd_port, __Lib_Sound_soundPortAddr
0x124A	0xF06FC26E  	MOVFF       FARG_Sound_Init_snd_port+1, __Lib_Sound_soundPortAddr+1
;__Lib_Sound.c,13 :: 		
0x124E	0xF001C26F  	MOVFF       FARG_Sound_Init_snd_pin, R1
0x1252	0x0E01      	MOVLW       1
0x1254	0x6E00      	MOVWF       R0 
0x1256	0x5001      	MOVF        R1, 0 
L__Sound_Init11:
0x1258	0xE004      	BZ          L__Sound_Init12
0x125A	0x3600      	RLCF        R0, 1 
0x125C	0x9000      	BCF         R0, 0 
0x125E	0x0FFF      	ADDLW       255
0x1260	0xD7FB      	BRA         L__Sound_Init11
L__Sound_Init12:
0x1262	0xF070C000  	MOVFF       R0, __Lib_Sound_pinMask1
;__Lib_Sound.c,14 :: 		
0x1266	0x1E00      	COMF        R0, 1 
0x1268	0xF071C000  	MOVFF       R0, __Lib_Sound_pinMask0
;__Lib_Sound.c,18 :: 		
0x126C	0x0E12      	MOVLW       18
0x126E	0x0102      	MOVLB       2
0x1270	0x256D      	ADDWF       FARG_Sound_Init_snd_port, 0, 1
0x1272	0x6EE9      	MOVWF       FSR0L 
0x1274	0x0E00      	MOVLW       0
0x1276	0x216E      	ADDWFC      FARG_Sound_Init_snd_port+1, 0, 1
0x1278	0x6EEA      	MOVWF       FSR0H 
;__Lib_Sound.c,19 :: 		
0x127A	0x5000      	MOVF        R0, 0 
0x127C	0x16EF      	ANDWF       INDF0, 1 
;__Lib_Sound.c,21 :: 		
0x127E	0x0E12      	MOVLW       18
0x1280	0x5EE9      	SUBWF       FSR0L, 1 
;__Lib_Sound.c,22 :: 		
0x1282	0x5000      	MOVF        R0, 0 
0x1284	0x16EF      	ANDWF       INDF0, 1 
;__Lib_Sound.c,23 :: 		
0x1286	0x0012      	RETURN      0
; end of _Sound_Init
_I2C1_Init:
;__Lib_I2C_c34.c,2 :: 		
;__Lib_I2C_c34.c,9 :: 		
0x1288	0x9894      	BCF         TRISC4_bit, 4 
;__Lib_I2C_c34.c,10 :: 		
0x128A	0x9694      	BCF         TRISC3_bit, 3 
;__Lib_I2C_c34.c,13 :: 		
0x128C	0x988B      	BCF         LATC4_bit, 4 
;__Lib_I2C_c34.c,14 :: 		
0x128E	0x968B      	BCF         LATC3_bit, 3 
;__Lib_I2C_c34.c,17 :: 		
0x1290	0x8894      	BSF         TRISC4_bit, 4 
;__Lib_I2C_c34.c,18 :: 		
0x1292	0x8694      	BSF         TRISC3_bit, 3 
;__Lib_I2C_c34.c,20 :: 		
0x1294	0x9EC7      	BCF         SSPSTAT, 7 
;__Lib_I2C_c34.c,21 :: 		
0x1296	0x9CC7      	BCF         SSPSTAT, 6 
;__Lib_I2C_c34.c,22 :: 		
0x1298	0x0E38      	MOVLW       56
0x129A	0x6EC6      	MOVWF       SSPCON1 
;__Lib_I2C_c34.c,25 :: 		
0x129C	0x0012      	RETURN      0
; end of _I2C1_Init
_T6963C_init:
;__Lib_T6963C.c,498 :: 		
;__Lib_T6963C.c,504 :: 		
0x129E	0xF072C26D  	MOVFF       FARG_T6963C_init_width, _T6963C_grWidth
0x12A2	0xF073C26E  	MOVFF       FARG_T6963C_init_width+1, _T6963C_grWidth+1
;__Lib_T6963C.c,505 :: 		
0x12A6	0xF074C26F  	MOVFF       FARG_T6963C_init_height, _T6963C_grHeight
0x12AA	0x0E00      	MOVLW       0
0x12AC	0x6E75      	MOVWF       _T6963C_grHeight+1 
;__Lib_T6963C.c,506 :: 		
0x12AE	0xF066C270  	MOVFF       FARG_T6963C_init_fntW, _T6963C_fontWidth
0x12B2	0x0E00      	MOVLW       0
0x12B4	0x6E67      	MOVWF       _T6963C_fontWidth+1 
;__Lib_T6963C.c,512 :: 		
0x12B6	0xF004C066  	MOVFF       _T6963C_fontWidth, R4
0x12BA	0xF005C067  	MOVFF       _T6963C_fontWidth+1, R5
0x12BE	0xF000C26D  	MOVFF       FARG_T6963C_init_width, R0
0x12C2	0xF001C26E  	MOVFF       FARG_T6963C_init_width+1, R1
0x12C6	0xF000ECB0  	CALL        _Div_16x16_U, 0
0x12CA	0xF062C000  	MOVFF       R0, _T6963C_txtCols
0x12CE	0xF063C001  	MOVFF       R1, _T6963C_txtCols+1
;__Lib_T6963C.c,513 :: 		
0x12D2	0xF004C074  	MOVFF       _T6963C_grHeight, R4
0x12D6	0xF005C075  	MOVFF       _T6963C_grHeight+1, R5
0x12DA	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x12DE	0xF07EC000  	MOVFF       R0, _T6963C_grMemSize
0x12E2	0xF07FC001  	MOVFF       R1, _T6963C_grMemSize+1
;__Lib_T6963C.c,514 :: 		
0x12E6	0xF000C074  	MOVFF       _T6963C_grHeight, R0
0x12EA	0xF001C075  	MOVFF       _T6963C_grHeight+1, R1
0x12EE	0x3201      	RRCF        R1, 1 
0x12F0	0x3200      	RRCF        R0, 1 
0x12F2	0x9E01      	BCF         R1, 7 
0x12F4	0x3201      	RRCF        R1, 1 
0x12F6	0x3200      	RRCF        R0, 1 
0x12F8	0x9E01      	BCF         R1, 7 
0x12FA	0x3201      	RRCF        R1, 1 
0x12FC	0x3200      	RRCF        R0, 1 
0x12FE	0x9E01      	BCF         R1, 7 
0x1300	0xF004C062  	MOVFF       _T6963C_txtCols, R4
0x1304	0xF005C063  	MOVFF       _T6963C_txtCols+1, R5
0x1308	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x130C	0xF089C000  	MOVFF       R0, _T6963C_txtMemSize
0x1310	0xF08AC001  	MOVFF       R1, _T6963C_txtMemSize+1
;__Lib_T6963C.c,520 :: 		
0x1314	0x9494      	BCF         T6963C_ctrlwr_Direction, BitPos(T6963C_ctrlwr_Direction+0) 
;__Lib_T6963C.c,521 :: 		
0x1316	0x9294      	BCF         T6963C_ctrlrd_Direction, BitPos(T6963C_ctrlrd_Direction+0) 
;__Lib_T6963C.c,522 :: 		
0x1318	0x9094      	BCF         T6963C_ctrlcd_Direction, BitPos(T6963C_ctrlcd_Direction+0) 
;__Lib_T6963C.c,523 :: 		
0x131A	0x9A94      	BCF         T6963C_ctrlrst_Direction, BitPos(T6963C_ctrlrst_Direction+0) 
;__Lib_T6963C.c,525 :: 		
0x131C	0x8482      	BSF         T6963C_ctrlwr, BitPos(T6963C_ctrlwr+0) 
;__Lib_T6963C.c,526 :: 		
0x131E	0x8282      	BSF         T6963C_ctrlrd, BitPos(T6963C_ctrlrd+0) 
;__Lib_T6963C.c,527 :: 		
0x1320	0x8082      	BSF         T6963C_ctrlcd, BitPos(T6963C_ctrlcd+0) 
;__Lib_T6963C.c,528 :: 		
0x1322	0x8A82      	BSF         T6963C_ctrlrst, BitPos(T6963C_ctrlrst+0) 
;__Lib_T6963C.c,534 :: 		
0x1324	0x0EFF      	MOVLW       255
0x1326	0x6E95      	MOVWF       T6963C_dataPort+18 
;__Lib_T6963C.c,539 :: 		
0x1328	0x9A82      	BCF         T6963C_ctrlrst, BitPos(T6963C_ctrlrst+0) 
;__Lib_T6963C.c,540 :: 		
0x132A	0xDCCB      	RCALL       _Delay_100ms
;__Lib_T6963C.c,541 :: 		
0x132C	0x8A82      	BSF         T6963C_ctrlrst, BitPos(T6963C_ctrlrst+0) 
;__Lib_T6963C.c,542 :: 		
0x132E	0xDCC9      	RCALL       _Delay_100ms
;__Lib_T6963C.c,547 :: 		
0x1330	0x0E81      	MOVLW       129
0x1332	0x0102      	MOVLB       2
0x1334	0x6F98      	MOVWF       FARG_T6963C_writeCommand_mydata, 1
0x1336	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;__Lib_T6963C.c,552 :: 		
0x133A	0xF004C270  	MOVFF       FARG_T6963C_init_fntW, R4
0x133E	0x0E00      	MOVLW       0
0x1340	0x6E05      	MOVWF       R5 
0x1342	0xF000C072  	MOVFF       _T6963C_grWidth, R0
0x1346	0xF001C073  	MOVFF       _T6963C_grWidth+1, R1
0x134A	0xF000ECB0  	CALL        _Div_16x16_U, 0
0x134E	0xF294C000  	MOVFF       R0, FARG_T6963C_setPtr_p
0x1352	0xF295C001  	MOVFF       R1, FARG_T6963C_setPtr_p+1
0x1356	0x0E43      	MOVLW       67
0x1358	0x0102      	MOVLB       2
0x135A	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x135C	0xF000ECF3  	CALL        _T6963C_setPtr, 0
;__Lib_T6963C.c,557 :: 		
0x1360	0xF294C062  	MOVFF       _T6963C_txtCols, FARG_T6963C_setPtr_p
0x1364	0xF295C063  	MOVFF       _T6963C_txtCols+1, FARG_T6963C_setPtr_p+1
0x1368	0x0E41      	MOVLW       65
0x136A	0x0102      	MOVLB       2
0x136C	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x136E	0xF000ECF3  	CALL        _T6963C_setPtr, 0
;__Lib_T6963C.c,562 :: 		
0x1372	0x0100      	MOVLB       0
0x1374	0x5189      	MOVF        _T6963C_txtMemSize, 0, 1
0x1376	0x247E      	ADDWF       _T6963C_grMemSize, 0 
0x1378	0x0102      	MOVLB       2
0x137A	0x6F74      	MOVWF       FARG_T6963C_fill_len, 1
0x137C	0x0100      	MOVLB       0
0x137E	0x518A      	MOVF        _T6963C_txtMemSize+1, 0, 1
0x1380	0x207F      	ADDWFC      _T6963C_grMemSize+1, 0 
0x1382	0x0102      	MOVLB       2
0x1384	0x6F75      	MOVWF       FARG_T6963C_fill_len+1, 1
0x1386	0x0100      	MOVLB       0
0x1388	0x6B8B      	CLRF        _T6963C_grHomeAddr, 1
0x138A	0x6B8C      	CLRF        _T6963C_grHomeAddr+1, 1
;__Lib_T6963C.c,563 :: 		
0x138C	0xF064C07E  	MOVFF       _T6963C_grMemSize, _T6963C_textHomeAddr
0x1390	0xF065C07F  	MOVFF       _T6963C_grMemSize+1, _T6963C_textHomeAddr+1
;__Lib_T6963C.c,568 :: 		
0x1394	0x0102      	MOVLB       2
0x1396	0x6B71      	CLRF        FARG_T6963C_fill_v, 1
0x1398	0x6B72      	CLRF        FARG_T6963C_fill_start, 1
0x139A	0x6B73      	CLRF        FARG_T6963C_fill_start+1, 1
0x139C	0xF005EC2A  	CALL        _T6963C_fill, 0
;__Lib_T6963C.c,573 :: 		
0x13A0	0x0E90      	MOVLW       144
0x13A2	0x6E6D      	MOVWF       _T6963C_display 
;__Lib_T6963C.c,578 :: 		
0x13A4	0x0102      	MOVLB       2
0x13A6	0x6B94      	CLRF        FARG_T6963C_setPtr_p, 1
0x13A8	0x6B95      	CLRF        FARG_T6963C_setPtr_p+1, 1
0x13AA	0x0E42      	MOVLW       66
0x13AC	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x13AE	0xF000ECF3  	CALL        _T6963C_setPtr, 0
;__Lib_T6963C.c,579 :: 		
0x13B2	0xF294C07E  	MOVFF       _T6963C_grMemSize, FARG_T6963C_setPtr_p
0x13B6	0xF295C07F  	MOVFF       _T6963C_grMemSize+1, FARG_T6963C_setPtr_p+1
0x13BA	0x0E40      	MOVLW       64
0x13BC	0x0102      	MOVLB       2
0x13BE	0x6F96      	MOVWF       FARG_T6963C_setPtr_c, 1
0x13C0	0xF000ECF3  	CALL        _T6963C_setPtr, 0
;__Lib_T6963C.c,580 :: 		
0x13C4	0x0012      	RETURN      0
; end of _T6963C_init
_InitTimer2:
;compy.c,124 :: 		void InitTimer2(){
;compy.c,125 :: 		T2CON         = 0x3C;
0x13C6	0x0E3C      	MOVLW       60
0x13C8	0x6ECA      	MOVWF       T2CON 
;compy.c,126 :: 		TMR2IE_bit         = 1;
0x13CA	0x829D      	BSF         TMR2IE_bit, 1 
;compy.c,127 :: 		PR2                 = 249;
0x13CC	0x0EF9      	MOVLW       249
0x13CE	0x6ECB      	MOVWF       PR2 
;compy.c,128 :: 		INTCON         = 0xD0;
0x13D0	0x0ED0      	MOVLW       208
0x13D2	0x6EF2      	MOVWF       INTCON 
;compy.c,129 :: 		}
0x13D4	0x0012      	RETURN      0
; end of _InitTimer2
_Finish:
;compy.c,402 :: 		void Finish() {
;compy.c,403 :: 		for(i = 0; i < 15; ++i) {
0x13D6	0x6A5E      	CLRF        _i 
0x13D8	0x6A5F      	CLRF        _i+1 
L_Finish121:
0x13DA	0x0E80      	MOVLW       128
0x13DC	0x185F      	XORWF       _i+1, 0 
0x13DE	0x6E00      	MOVWF       R0 
0x13E0	0x0E80      	MOVLW       128
0x13E2	0x5C00      	SUBWF       R0, 0 
0x13E4	0xE102      	BNZ         L__Finish180
0x13E6	0x0E0F      	MOVLW       15
0x13E8	0x5C5E      	SUBWF       _i, 0 
L__Finish180:
0x13EA	0xE237      	BC          L_Finish122
;compy.c,404 :: 		for(j = 0; j < 8; ++j) {
0x13EC	0x6A5C      	CLRF        _j 
0x13EE	0x6A5D      	CLRF        _j+1 
L_Finish124:
0x13F0	0x0E80      	MOVLW       128
0x13F2	0x185D      	XORWF       _j+1, 0 
0x13F4	0x6E00      	MOVWF       R0 
0x13F6	0x0E80      	MOVLW       128
0x13F8	0x5C00      	SUBWF       R0, 0 
0x13FA	0xE102      	BNZ         L__Finish181
0x13FC	0x0E08      	MOVLW       8
0x13FE	0x5C5C      	SUBWF       _j, 0 
L__Finish181:
0x1400	0xE229      	BC          L_Finish125
;compy.c,405 :: 		world[i][j] = ' ';
0x1402	0xF000C05E  	MOVFF       _i, R0
0x1406	0xF001C05F  	MOVFF       _i+1, R1
0x140A	0x0E3C      	MOVLW       60
0x140C	0x6E04      	MOVWF       R4 
0x140E	0x0E00      	MOVLW       0
0x1410	0x6E05      	MOVWF       R5 
0x1412	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1416	0x0E8D      	MOVLW       _world
0x1418	0x2400      	ADDWF       R0, 0 
0x141A	0x6E03      	MOVWF       R3 
0x141C	0x0E00      	MOVLW       hi_addr(_world)
0x141E	0x2001      	ADDWFC      R1, 0 
0x1420	0x6E04      	MOVWF       R4 
0x1422	0xF000C05C  	MOVFF       _j, R0
0x1426	0xF001C05D  	MOVFF       _j+1, R1
0x142A	0x3600      	RLCF        R0, 1 
0x142C	0x9000      	BCF         R0, 0 
0x142E	0x3601      	RLCF        R1, 1 
0x1430	0x3600      	RLCF        R0, 1 
0x1432	0x9000      	BCF         R0, 0 
0x1434	0x3601      	RLCF        R1, 1 
0x1436	0x5000      	MOVF        R0, 0 
0x1438	0x2403      	ADDWF       R3, 0 
0x143A	0x6EE1      	MOVWF       FSR1L 
0x143C	0x5001      	MOVF        R1, 0 
0x143E	0x2004      	ADDWFC      R4, 0 
0x1440	0x6EE2      	MOVWF       FSR1H 
0x1442	0x0E20      	MOVLW       32
0x1444	0x6EE6      	MOVWF       POSTINC1 
0x1446	0x0E00      	MOVLW       0
0x1448	0x6EE6      	MOVWF       POSTINC1 
0x144A	0x6EE6      	MOVWF       POSTINC1 
0x144C	0x6EE6      	MOVWF       POSTINC1 
;compy.c,404 :: 		for(j = 0; j < 8; ++j) {
0x144E	0x4A5C      	INFSNZ      _j, 1 
0x1450	0x2A5D      	INCF        _j+1, 1 
;compy.c,406 :: 		}
0x1452	0xD7CE      	BRA         L_Finish124
L_Finish125:
;compy.c,403 :: 		for(i = 0; i < 15; ++i) {
0x1454	0x4A5E      	INFSNZ      _i, 1 
0x1456	0x2A5F      	INCF        _i+1, 1 
;compy.c,407 :: 		}
0x1458	0xD7C0      	BRA         L_Finish121
L_Finish122:
;compy.c,408 :: 		Print_World();
0x145A	0xF004ECFD  	CALL        _Print_World, 0
;compy.c,409 :: 		if (IS_GAME_OVER) {
0x145E	0x504B      	MOVF        _IS_GAME_OVER, 0 
0x1460	0x104C      	IORWF       _IS_GAME_OVER+1, 0 
0x1462	0xE00C      	BZ          L_Finish127
;compy.c,410 :: 		print_text(2, 1, "Game over");
0x1464	0x0E02      	MOVLW       2
0x1466	0x0102      	MOVLB       2
0x1468	0x6F71      	MOVWF       FARG_print_text_column, 1
0x146A	0x0E01      	MOVLW       1
0x146C	0x6F72      	MOVWF       FARG_print_text_line, 1
0x146E	0x0E4E      	MOVLW       ?lstr3_compy
0x1470	0x6F73      	MOVWF       FARG_print_text_text, 1
0x1472	0x0E00      	MOVLW       hi_addr(?lstr3_compy)
0x1474	0x6F74      	MOVWF       FARG_print_text_text+1, 1
0x1476	0xF004ECA9  	CALL        _print_text, 0
;compy.c,411 :: 		} else {
0x147A	0xD00B      	BRA         L_Finish128
L_Finish127:
;compy.c,412 :: 		print_text(2, 1, "Win");
0x147C	0x0E02      	MOVLW       2
0x147E	0x0102      	MOVLB       2
0x1480	0x6F71      	MOVWF       FARG_print_text_column, 1
0x1482	0x0E01      	MOVLW       1
0x1484	0x6F72      	MOVWF       FARG_print_text_line, 1
0x1486	0x0E58      	MOVLW       ?lstr4_compy
0x1488	0x6F73      	MOVWF       FARG_print_text_text, 1
0x148A	0x0E00      	MOVLW       hi_addr(?lstr4_compy)
0x148C	0x6F74      	MOVWF       FARG_print_text_text+1, 1
0x148E	0xF004ECA9  	CALL        _print_text, 0
;compy.c,413 :: 		}
L_Finish128:
;compy.c,414 :: 		}
0x1492	0x0012      	RETURN      0
; end of _Finish
_Le_Teclado:
;compy.c,201 :: 		char Le_Teclado()
;compy.c,203 :: 		PORTD = 0B00010000; // VOCÊ SELECIONOU LA
0x1494	0x0E10      	MOVLW       16
0x1496	0x6E83      	MOVWF       PORTD 
;compy.c,204 :: 		if (PORTA.RA5 == 1) {
0x1498	0xAA80      	BTFSS       PORTA, 5 
0x149A	0xD006      	BRA         L_Le_Teclado37
;compy.c,205 :: 		while(PORTA.RA5 == 1);
L_Le_Teclado38:
0x149C	0xAA80      	BTFSS       PORTA, 5 
0x149E	0xD001      	BRA         L_Le_Teclado39
0x14A0	0xD7FD      	BRA         L_Le_Teclado38
L_Le_Teclado39:
;compy.c,206 :: 		return '7';
0x14A2	0x0E37      	MOVLW       55
0x14A4	0x6E00      	MOVWF       R0 
0x14A6	0x0012      	RETURN      0
;compy.c,207 :: 		}
L_Le_Teclado37:
;compy.c,208 :: 		if (PORTB.RB1 == 1) {
0x14A8	0xA281      	BTFSS       PORTB, 1 
0x14AA	0xD006      	BRA         L_Le_Teclado40
;compy.c,209 :: 		while(PORTB.RB1 == 1);
L_Le_Teclado41:
0x14AC	0xA281      	BTFSS       PORTB, 1 
0x14AE	0xD001      	BRA         L_Le_Teclado42
0x14B0	0xD7FD      	BRA         L_Le_Teclado41
L_Le_Teclado42:
;compy.c,210 :: 		return '8';
0x14B2	0x0E38      	MOVLW       56
0x14B4	0x6E00      	MOVWF       R0 
0x14B6	0x0012      	RETURN      0
;compy.c,211 :: 		}
L_Le_Teclado40:
;compy.c,212 :: 		if (PORTB.RB2 == 1) {
0x14B8	0xA481      	BTFSS       PORTB, 2 
0x14BA	0xD006      	BRA         L_Le_Teclado43
;compy.c,213 :: 		while(PORTB.RB2 == 1);
L_Le_Teclado44:
0x14BC	0xA481      	BTFSS       PORTB, 2 
0x14BE	0xD001      	BRA         L_Le_Teclado45
0x14C0	0xD7FD      	BRA         L_Le_Teclado44
L_Le_Teclado45:
;compy.c,214 :: 		return '9';
0x14C2	0x0E39      	MOVLW       57
0x14C4	0x6E00      	MOVWF       R0 
0x14C6	0x0012      	RETURN      0
;compy.c,215 :: 		}
L_Le_Teclado43:
;compy.c,216 :: 		if (PORTB.RB3 == 1) {
0x14C8	0xA681      	BTFSS       PORTB, 3 
0x14CA	0xD006      	BRA         L_Le_Teclado46
;compy.c,217 :: 		while(PORTB.RB3 == 1);
L_Le_Teclado47:
0x14CC	0xA681      	BTFSS       PORTB, 3 
0x14CE	0xD001      	BRA         L_Le_Teclado48
0x14D0	0xD7FD      	BRA         L_Le_Teclado47
L_Le_Teclado48:
;compy.c,218 :: 		return '%';
0x14D2	0x0E25      	MOVLW       37
0x14D4	0x6E00      	MOVWF       R0 
0x14D6	0x0012      	RETURN      0
;compy.c,219 :: 		}
L_Le_Teclado46:
;compy.c,221 :: 		PORTD = 0B00100000; // VOCÊ SELECIONOU LB
0x14D8	0x0E20      	MOVLW       32
0x14DA	0x6E83      	MOVWF       PORTD 
;compy.c,222 :: 		if (PORTA.RA5 == 1) {
0x14DC	0xAA80      	BTFSS       PORTA, 5 
0x14DE	0xD006      	BRA         L_Le_Teclado49
;compy.c,223 :: 		while(PORTA.RA5 == 1);
L_Le_Teclado50:
0x14E0	0xAA80      	BTFSS       PORTA, 5 
0x14E2	0xD001      	BRA         L_Le_Teclado51
0x14E4	0xD7FD      	BRA         L_Le_Teclado50
L_Le_Teclado51:
;compy.c,224 :: 		return '4';
0x14E6	0x0E34      	MOVLW       52
0x14E8	0x6E00      	MOVWF       R0 
0x14EA	0x0012      	RETURN      0
;compy.c,225 :: 		}
L_Le_Teclado49:
;compy.c,226 :: 		if (PORTB.RB1 == 1) {
0x14EC	0xA281      	BTFSS       PORTB, 1 
0x14EE	0xD006      	BRA         L_Le_Teclado52
;compy.c,227 :: 		while(PORTB.RB1 == 1);
L_Le_Teclado53:
0x14F0	0xA281      	BTFSS       PORTB, 1 
0x14F2	0xD001      	BRA         L_Le_Teclado54
0x14F4	0xD7FD      	BRA         L_Le_Teclado53
L_Le_Teclado54:
;compy.c,228 :: 		return '5';
0x14F6	0x0E35      	MOVLW       53
0x14F8	0x6E00      	MOVWF       R0 
0x14FA	0x0012      	RETURN      0
;compy.c,229 :: 		}
L_Le_Teclado52:
;compy.c,230 :: 		if (PORTB.RB2 == 1) {
0x14FC	0xA481      	BTFSS       PORTB, 2 
0x14FE	0xD006      	BRA         L_Le_Teclado55
;compy.c,231 :: 		while(PORTB.RB2 == 1);
L_Le_Teclado56:
0x1500	0xA481      	BTFSS       PORTB, 2 
0x1502	0xD001      	BRA         L_Le_Teclado57
0x1504	0xD7FD      	BRA         L_Le_Teclado56
L_Le_Teclado57:
;compy.c,232 :: 		return '6';
0x1506	0x0E36      	MOVLW       54
0x1508	0x6E00      	MOVWF       R0 
0x150A	0x0012      	RETURN      0
;compy.c,233 :: 		}
L_Le_Teclado55:
;compy.c,234 :: 		if (PORTB.RB3 == 1) {
0x150C	0xA681      	BTFSS       PORTB, 3 
0x150E	0xD006      	BRA         L_Le_Teclado58
;compy.c,235 :: 		while(PORTB.RB3 == 1);
L_Le_Teclado59:
0x1510	0xA681      	BTFSS       PORTB, 3 
0x1512	0xD001      	BRA         L_Le_Teclado60
0x1514	0xD7FD      	BRA         L_Le_Teclado59
L_Le_Teclado60:
;compy.c,236 :: 		return '*';
0x1516	0x0E2A      	MOVLW       42
0x1518	0x6E00      	MOVWF       R0 
0x151A	0x0012      	RETURN      0
;compy.c,237 :: 		}
L_Le_Teclado58:
;compy.c,239 :: 		PORTD = 0B01000000; // VOCÊ SELECIONOU LC
0x151C	0x0E40      	MOVLW       64
0x151E	0x6E83      	MOVWF       PORTD 
;compy.c,240 :: 		if (PORTA.RA5 == 1) {
0x1520	0xAA80      	BTFSS       PORTA, 5 
0x1522	0xD006      	BRA         L_Le_Teclado61
;compy.c,241 :: 		while(PORTA.RA5 == 1);
L_Le_Teclado62:
0x1524	0xAA80      	BTFSS       PORTA, 5 
0x1526	0xD001      	BRA         L_Le_Teclado63
0x1528	0xD7FD      	BRA         L_Le_Teclado62
L_Le_Teclado63:
;compy.c,242 :: 		return '1';
0x152A	0x0E31      	MOVLW       49
0x152C	0x6E00      	MOVWF       R0 
0x152E	0x0012      	RETURN      0
;compy.c,243 :: 		}
L_Le_Teclado61:
;compy.c,244 :: 		if (PORTB.RB1 == 1) {
0x1530	0xA281      	BTFSS       PORTB, 1 
0x1532	0xD006      	BRA         L_Le_Teclado64
;compy.c,245 :: 		while(PORTB.RB1 == 1);
L_Le_Teclado65:
0x1534	0xA281      	BTFSS       PORTB, 1 
0x1536	0xD001      	BRA         L_Le_Teclado66
0x1538	0xD7FD      	BRA         L_Le_Teclado65
L_Le_Teclado66:
;compy.c,246 :: 		return '2';
0x153A	0x0E32      	MOVLW       50
0x153C	0x6E00      	MOVWF       R0 
0x153E	0x0012      	RETURN      0
;compy.c,247 :: 		}
L_Le_Teclado64:
;compy.c,248 :: 		if (PORTB.RB2 == 1) {
0x1540	0xA481      	BTFSS       PORTB, 2 
0x1542	0xD006      	BRA         L_Le_Teclado67
;compy.c,249 :: 		while(PORTB.RB2 == 1);
L_Le_Teclado68:
0x1544	0xA481      	BTFSS       PORTB, 2 
0x1546	0xD001      	BRA         L_Le_Teclado69
0x1548	0xD7FD      	BRA         L_Le_Teclado68
L_Le_Teclado69:
;compy.c,250 :: 		return '3';
0x154A	0x0E33      	MOVLW       51
0x154C	0x6E00      	MOVWF       R0 
0x154E	0x0012      	RETURN      0
;compy.c,251 :: 		}
L_Le_Teclado67:
;compy.c,252 :: 		if (PORTB.RB3 == 1) {
0x1550	0xA681      	BTFSS       PORTB, 3 
0x1552	0xD006      	BRA         L_Le_Teclado70
;compy.c,253 :: 		while(PORTB.RB3 == 1);
L_Le_Teclado71:
0x1554	0xA681      	BTFSS       PORTB, 3 
0x1556	0xD001      	BRA         L_Le_Teclado72
0x1558	0xD7FD      	BRA         L_Le_Teclado71
L_Le_Teclado72:
;compy.c,254 :: 		return '-';
0x155A	0x0E2D      	MOVLW       45
0x155C	0x6E00      	MOVWF       R0 
0x155E	0x0012      	RETURN      0
;compy.c,255 :: 		}
L_Le_Teclado70:
;compy.c,257 :: 		PORTD = 0B10000000; // VOCÊ SELECIONOU LD
0x1560	0x0E80      	MOVLW       128
0x1562	0x6E83      	MOVWF       PORTD 
;compy.c,258 :: 		if (PORTA.RA5 == 1) {
0x1564	0xAA80      	BTFSS       PORTA, 5 
0x1566	0xD006      	BRA         L_Le_Teclado73
;compy.c,259 :: 		while(PORTA.RA5 == 1);
L_Le_Teclado74:
0x1568	0xAA80      	BTFSS       PORTA, 5 
0x156A	0xD001      	BRA         L_Le_Teclado75
0x156C	0xD7FD      	BRA         L_Le_Teclado74
L_Le_Teclado75:
;compy.c,260 :: 		return 'C';
0x156E	0x0E43      	MOVLW       67
0x1570	0x6E00      	MOVWF       R0 
0x1572	0x0012      	RETURN      0
;compy.c,261 :: 		}
L_Le_Teclado73:
;compy.c,262 :: 		if (PORTB.RB1 == 1) {
0x1574	0xA281      	BTFSS       PORTB, 1 
0x1576	0xD006      	BRA         L_Le_Teclado76
;compy.c,263 :: 		while(PORTB.RB1 == 1);
L_Le_Teclado77:
0x1578	0xA281      	BTFSS       PORTB, 1 
0x157A	0xD001      	BRA         L_Le_Teclado78
0x157C	0xD7FD      	BRA         L_Le_Teclado77
L_Le_Teclado78:
;compy.c,264 :: 		return '0';
0x157E	0x0E30      	MOVLW       48
0x1580	0x6E00      	MOVWF       R0 
0x1582	0x0012      	RETURN      0
;compy.c,265 :: 		}
L_Le_Teclado76:
;compy.c,266 :: 		if (PORTB.RB2 == 1) {
0x1584	0xA481      	BTFSS       PORTB, 2 
0x1586	0xD006      	BRA         L_Le_Teclado79
;compy.c,267 :: 		while(PORTB.RB2 == 1);
L_Le_Teclado80:
0x1588	0xA481      	BTFSS       PORTB, 2 
0x158A	0xD001      	BRA         L_Le_Teclado81
0x158C	0xD7FD      	BRA         L_Le_Teclado80
L_Le_Teclado81:
;compy.c,268 :: 		return '=';
0x158E	0x0E3D      	MOVLW       61
0x1590	0x6E00      	MOVWF       R0 
0x1592	0x0012      	RETURN      0
;compy.c,269 :: 		}
L_Le_Teclado79:
;compy.c,270 :: 		if (PORTB.RB3 == 1) {
0x1594	0xA681      	BTFSS       PORTB, 3 
0x1596	0xD006      	BRA         L_Le_Teclado82
;compy.c,271 :: 		while(PORTB.RB3 == 1);
L_Le_Teclado83:
0x1598	0xA681      	BTFSS       PORTB, 3 
0x159A	0xD001      	BRA         L_Le_Teclado84
0x159C	0xD7FD      	BRA         L_Le_Teclado83
L_Le_Teclado84:
;compy.c,272 :: 		return '+';
0x159E	0x0E2B      	MOVLW       43
0x15A0	0x6E00      	MOVWF       R0 
0x15A2	0x0012      	RETURN      0
;compy.c,273 :: 		}
L_Le_Teclado82:
;compy.c,275 :: 		return (char) 255;
0x15A4	0x0EFF      	MOVLW       255
0x15A6	0x6E00      	MOVWF       R0 
;compy.c,276 :: 		}
0x15A8	0x0012      	RETURN      0
; end of _Le_Teclado
_Create_World:
;compy.c,287 :: 		void Create_World() {
;compy.c,288 :: 		for(i = 0; i < 15; ++i) {
0x15AA	0x6A5E      	CLRF        _i 
0x15AC	0x6A5F      	CLRF        _i+1 
L_Create_World91:
0x15AE	0x0E80      	MOVLW       128
0x15B0	0x185F      	XORWF       _i+1, 0 
0x15B2	0x6E00      	MOVWF       R0 
0x15B4	0x0E80      	MOVLW       128
0x15B6	0x5C00      	SUBWF       R0, 0 
0x15B8	0xE102      	BNZ         L__Create_World166
0x15BA	0x0E0F      	MOVLW       15
0x15BC	0x5C5E      	SUBWF       _i, 0 
L__Create_World166:
0x15BE	0xE237      	BC          L_Create_World92
;compy.c,289 :: 		for(j = 0; j < 8 ; ++j)
0x15C0	0x6A5C      	CLRF        _j 
0x15C2	0x6A5D      	CLRF        _j+1 
L_Create_World94:
0x15C4	0x0E80      	MOVLW       128
0x15C6	0x185D      	XORWF       _j+1, 0 
0x15C8	0x6E00      	MOVWF       R0 
0x15CA	0x0E80      	MOVLW       128
0x15CC	0x5C00      	SUBWF       R0, 0 
0x15CE	0xE102      	BNZ         L__Create_World167
0x15D0	0x0E08      	MOVLW       8
0x15D2	0x5C5C      	SUBWF       _j, 0 
L__Create_World167:
0x15D4	0xE229      	BC          L_Create_World95
;compy.c,291 :: 		world[i][j] = ' ';
0x15D6	0xF000C05E  	MOVFF       _i, R0
0x15DA	0xF001C05F  	MOVFF       _i+1, R1
0x15DE	0x0E3C      	MOVLW       60
0x15E0	0x6E04      	MOVWF       R4 
0x15E2	0x0E00      	MOVLW       0
0x15E4	0x6E05      	MOVWF       R5 
0x15E6	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x15EA	0x0E8D      	MOVLW       _world
0x15EC	0x2400      	ADDWF       R0, 0 
0x15EE	0x6E03      	MOVWF       R3 
0x15F0	0x0E00      	MOVLW       hi_addr(_world)
0x15F2	0x2001      	ADDWFC      R1, 0 
0x15F4	0x6E04      	MOVWF       R4 
0x15F6	0xF000C05C  	MOVFF       _j, R0
0x15FA	0xF001C05D  	MOVFF       _j+1, R1
0x15FE	0x3600      	RLCF        R0, 1 
0x1600	0x9000      	BCF         R0, 0 
0x1602	0x3601      	RLCF        R1, 1 
0x1604	0x3600      	RLCF        R0, 1 
0x1606	0x9000      	BCF         R0, 0 
0x1608	0x3601      	RLCF        R1, 1 
0x160A	0x5000      	MOVF        R0, 0 
0x160C	0x2403      	ADDWF       R3, 0 
0x160E	0x6EE1      	MOVWF       FSR1L 
0x1610	0x5001      	MOVF        R1, 0 
0x1612	0x2004      	ADDWFC      R4, 0 
0x1614	0x6EE2      	MOVWF       FSR1H 
0x1616	0x0E20      	MOVLW       32
0x1618	0x6EE6      	MOVWF       POSTINC1 
0x161A	0x0E00      	MOVLW       0
0x161C	0x6EE6      	MOVWF       POSTINC1 
0x161E	0x6EE6      	MOVWF       POSTINC1 
0x1620	0x6EE6      	MOVWF       POSTINC1 
;compy.c,289 :: 		for(j = 0; j < 8 ; ++j)
0x1622	0x4A5C      	INFSNZ      _j, 1 
0x1624	0x2A5D      	INCF        _j+1, 1 
;compy.c,292 :: 		}
0x1626	0xD7CE      	BRA         L_Create_World94
L_Create_World95:
;compy.c,288 :: 		for(i = 0; i < 15; ++i) {
0x1628	0x4A5E      	INFSNZ      _i, 1 
0x162A	0x2A5F      	INCF        _i+1, 1 
;compy.c,293 :: 		}
0x162C	0xD7C0      	BRA         L_Create_World91
L_Create_World92:
;compy.c,294 :: 		world[5][0] = barrier_orientation;
0x162E	0xF1B9C04D  	MOVFF       _barrier_orientation, _world+300
0x1632	0x0E00      	MOVLW       0
0x1634	0x0101      	MOVLB       1
0x1636	0x6FBA      	MOVWF       _world+301, 1
0x1638	0x6FBB      	MOVWF       _world+302, 1
0x163A	0x6FBC      	MOVWF       _world+303, 1
;compy.c,295 :: 		world[5][1] = barrier_orientation;
0x163C	0xF1BDC04D  	MOVFF       _barrier_orientation, _world+304
0x1640	0x0E00      	MOVLW       0
0x1642	0x6FBE      	MOVWF       _world+305, 1
0x1644	0x6FBF      	MOVWF       _world+306, 1
0x1646	0x6FC0      	MOVWF       _world+307, 1
;compy.c,296 :: 		world[2][5] = barrier_orientation;
0x1648	0xF119C04D  	MOVFF       _barrier_orientation, _world+140
0x164C	0x0E00      	MOVLW       0
0x164E	0x6F1A      	MOVWF       _world+141, 1
0x1650	0x6F1B      	MOVWF       _world+142, 1
0x1652	0x6F1C      	MOVWF       _world+143, 1
;compy.c,297 :: 		world[11][5] = barrier_orientation;
0x1654	0xF335C04D  	MOVFF       _barrier_orientation, _world+680
0x1658	0x0E00      	MOVLW       0
0x165A	0x0103      	MOVLB       3
0x165C	0x6F36      	MOVWF       _world+681, 1
0x165E	0x6F37      	MOVWF       _world+682, 1
0x1660	0x6F38      	MOVWF       _world+683, 1
;compy.c,298 :: 		world[10][6] = barrier_orientation;
0x1662	0xF2FDC04D  	MOVFF       _barrier_orientation, _world+624
0x1666	0x0E00      	MOVLW       0
0x1668	0x0102      	MOVLB       2
0x166A	0x6FFE      	MOVWF       _world+625, 1
0x166C	0x6FFF      	MOVWF       _world+626, 1
0x166E	0x0103      	MOVLB       3
0x1670	0x6F00      	MOVWF       _world+627, 1
;compy.c,299 :: 		world[3][5] = barrier_orientation;
0x1672	0xF155C04D  	MOVFF       _barrier_orientation, _world+200
0x1676	0x0E00      	MOVLW       0
0x1678	0x0101      	MOVLB       1
0x167A	0x6F56      	MOVWF       _world+201, 1
0x167C	0x6F57      	MOVWF       _world+202, 1
0x167E	0x6F58      	MOVWF       _world+203, 1
;compy.c,300 :: 		world[4][5] = barrier_orientation;
0x1680	0xF191C04D  	MOVFF       _barrier_orientation, _world+260
0x1684	0x0E00      	MOVLW       0
0x1686	0x6F92      	MOVWF       _world+261, 1
0x1688	0x6F93      	MOVWF       _world+262, 1
0x168A	0x6F94      	MOVWF       _world+263, 1
;compy.c,301 :: 		world[11][5] = barrier_orientation;
0x168C	0xF335C04D  	MOVFF       _barrier_orientation, _world+680
0x1690	0x0E00      	MOVLW       0
0x1692	0x0103      	MOVLB       3
0x1694	0x6F36      	MOVWF       _world+681, 1
0x1696	0x6F37      	MOVWF       _world+682, 1
0x1698	0x6F38      	MOVWF       _world+683, 1
;compy.c,302 :: 		world[14][5] = barrier_orientation;
0x169A	0xF3E9C04D  	MOVFF       _barrier_orientation, _world+860
0x169E	0x0E00      	MOVLW       0
0x16A0	0x6FEA      	MOVWF       _world+861, 1
0x16A2	0x6FEB      	MOVWF       _world+862, 1
0x16A4	0x6FEC      	MOVWF       _world+863, 1
;compy.c,303 :: 		world[12][6] = barrier_orientation;
0x16A6	0xF375C04D  	MOVFF       _barrier_orientation, _world+744
0x16AA	0x0E00      	MOVLW       0
0x16AC	0x6F76      	MOVWF       _world+745, 1
0x16AE	0x6F77      	MOVWF       _world+746, 1
0x16B0	0x6F78      	MOVWF       _world+747, 1
;compy.c,304 :: 		world[13][7] = barrier_orientation;
0x16B2	0xF3B5C04D  	MOVFF       _barrier_orientation, _world+808
0x16B6	0x0E00      	MOVLW       0
0x16B8	0x6FB6      	MOVWF       _world+809, 1
0x16BA	0x6FB7      	MOVWF       _world+810, 1
0x16BC	0x6FB8      	MOVWF       _world+811, 1
;compy.c,305 :: 		world[3][2] = barrier_orientation;
0x16BE	0xF149C04D  	MOVFF       _barrier_orientation, _world+188
0x16C2	0x0E00      	MOVLW       0
0x16C4	0x0101      	MOVLB       1
0x16C6	0x6F4A      	MOVWF       _world+189, 1
0x16C8	0x6F4B      	MOVWF       _world+190, 1
0x16CA	0x6F4C      	MOVWF       _world+191, 1
;compy.c,306 :: 		world[8][3] = barrier_orientation;
0x16CC	0xF279C04D  	MOVFF       _barrier_orientation, _world+492
0x16D0	0x0E00      	MOVLW       0
0x16D2	0x0102      	MOVLB       2
0x16D4	0x6F7A      	MOVWF       _world+493, 1
0x16D6	0x6F7B      	MOVWF       _world+494, 1
0x16D8	0x6F7C      	MOVWF       _world+495, 1
;compy.c,307 :: 		world[4][1] = barrier_orientation;
0x16DA	0xF181C04D  	MOVFF       _barrier_orientation, _world+244
0x16DE	0x0E00      	MOVLW       0
0x16E0	0x0101      	MOVLB       1
0x16E2	0x6F82      	MOVWF       _world+245, 1
0x16E4	0x6F83      	MOVWF       _world+246, 1
0x16E6	0x6F84      	MOVWF       _world+247, 1
;compy.c,309 :: 		world[11][5] = food_orientation;
0x16E8	0xF335C061  	MOVFF       _food_orientation, _world+680
0x16EC	0x0E00      	MOVLW       0
0x16EE	0x0103      	MOVLB       3
0x16F0	0x6F36      	MOVWF       _world+681, 1
0x16F2	0x6F37      	MOVWF       _world+682, 1
0x16F4	0x6F38      	MOVWF       _world+683, 1
;compy.c,310 :: 		world[5][3] = food_orientation;
0x16F6	0xF1C5C061  	MOVFF       _food_orientation, _world+312
0x16FA	0x0E00      	MOVLW       0
0x16FC	0x0101      	MOVLB       1
0x16FE	0x6FC6      	MOVWF       _world+313, 1
0x1700	0x6FC7      	MOVWF       _world+314, 1
0x1702	0x6FC8      	MOVWF       _world+315, 1
;compy.c,311 :: 		world[8][2] = food_orientation;
0x1704	0xF275C061  	MOVFF       _food_orientation, _world+488
0x1708	0x0E00      	MOVLW       0
0x170A	0x0102      	MOVLB       2
0x170C	0x6F76      	MOVWF       _world+489, 1
0x170E	0x6F77      	MOVWF       _world+490, 1
0x1710	0x6F78      	MOVWF       _world+491, 1
;compy.c,312 :: 		world[7][7] = food_orientation;
0x1712	0xF24DC061  	MOVFF       _food_orientation, _world+448
0x1716	0x0E00      	MOVLW       0
0x1718	0x6F4E      	MOVWF       _world+449, 1
0x171A	0x6F4F      	MOVWF       _world+450, 1
0x171C	0x6F50      	MOVWF       _world+451, 1
;compy.c,314 :: 		world[ghost_x][ghost_y] = ghost_orientation;
0x171E	0xF000C02F  	MOVFF       _ghost_x, R0
0x1722	0xF001C030  	MOVFF       _ghost_x+1, R1
0x1726	0x0E3C      	MOVLW       60
0x1728	0x6E04      	MOVWF       R4 
0x172A	0x0E00      	MOVLW       0
0x172C	0x6E05      	MOVWF       R5 
0x172E	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1732	0x0E8D      	MOVLW       _world
0x1734	0x2400      	ADDWF       R0, 0 
0x1736	0x6E03      	MOVWF       R3 
0x1738	0x0E00      	MOVLW       hi_addr(_world)
0x173A	0x2001      	ADDWFC      R1, 0 
0x173C	0x6E04      	MOVWF       R4 
0x173E	0xF000C035  	MOVFF       _ghost_y, R0
0x1742	0xF001C036  	MOVFF       _ghost_y+1, R1
0x1746	0x3600      	RLCF        R0, 1 
0x1748	0x9000      	BCF         R0, 0 
0x174A	0x3601      	RLCF        R1, 1 
0x174C	0x3600      	RLCF        R0, 1 
0x174E	0x9000      	BCF         R0, 0 
0x1750	0x3601      	RLCF        R1, 1 
0x1752	0x5000      	MOVF        R0, 0 
0x1754	0x2403      	ADDWF       R3, 0 
0x1756	0x6EE1      	MOVWF       FSR1L 
0x1758	0x5001      	MOVF        R1, 0 
0x175A	0x2004      	ADDWFC      R4, 0 
0x175C	0x6EE2      	MOVWF       FSR1H 
0x175E	0xFFE6C060  	MOVFF       _ghost_orientation, POSTINC1
0x1762	0x0E00      	MOVLW       0
0x1764	0x6EE6      	MOVWF       POSTINC1 
0x1766	0x6EE6      	MOVWF       POSTINC1 
0x1768	0x6EE6      	MOVWF       POSTINC1 
;compy.c,315 :: 		world[pacman_x][pacman_y] = pacman_orientation;
0x176A	0xF000C033  	MOVFF       _pacman_x, R0
0x176E	0xF001C034  	MOVFF       _pacman_x+1, R1
0x1772	0x0E3C      	MOVLW       60
0x1774	0x6E04      	MOVWF       R4 
0x1776	0x0E00      	MOVLW       0
0x1778	0x6E05      	MOVWF       R5 
0x177A	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x177E	0x0E8D      	MOVLW       _world
0x1780	0x2400      	ADDWF       R0, 0 
0x1782	0x6E03      	MOVWF       R3 
0x1784	0x0E00      	MOVLW       hi_addr(_world)
0x1786	0x2001      	ADDWFC      R1, 0 
0x1788	0x6E04      	MOVWF       R4 
0x178A	0xF000C031  	MOVFF       _pacman_y, R0
0x178E	0xF001C032  	MOVFF       _pacman_y+1, R1
0x1792	0x3600      	RLCF        R0, 1 
0x1794	0x9000      	BCF         R0, 0 
0x1796	0x3601      	RLCF        R1, 1 
0x1798	0x3600      	RLCF        R0, 1 
0x179A	0x9000      	BCF         R0, 0 
0x179C	0x3601      	RLCF        R1, 1 
0x179E	0x5000      	MOVF        R0, 0 
0x17A0	0x2403      	ADDWF       R3, 0 
0x17A2	0x6EE1      	MOVWF       FSR1L 
0x17A4	0x5001      	MOVF        R1, 0 
0x17A6	0x2004      	ADDWFC      R4, 0 
0x17A8	0x6EE2      	MOVWF       FSR1H 
0x17AA	0xFFE6C02E  	MOVFF       _pacman_orientation, POSTINC1
0x17AE	0x0E00      	MOVLW       0
0x17B0	0x6EE6      	MOVWF       POSTINC1 
0x17B2	0x6EE6      	MOVWF       POSTINC1 
0x17B4	0x6EE6      	MOVWF       POSTINC1 
;compy.c,317 :: 		Print_World();
0x17B6	0xF004ECFD  	CALL        _Print_World, 0
;compy.c,318 :: 		}
0x17BA	0x0012      	RETURN      0
; end of _Create_World
_update_pacman:
;compy.c,348 :: 		void update_pacman(short direction) {
;compy.c,349 :: 		if (direction == 0) {
0x17BC	0x0100      	MOVLB       0
0x17BE	0x5180      	MOVF        FARG_update_pacman_direction, 0, 1
0x17C0	0x0A00      	XORLW       0
0x17C2	0xE10B      	BNZ         L_update_pacman105
;compy.c,350 :: 		newPacman_x = pacman_x;
0x17C4	0xF024C033  	MOVFF       _pacman_x, _newPacman_x
0x17C8	0xF025C034  	MOVFF       _pacman_x+1, _newPacman_x+1
;compy.c,351 :: 		newPacman_y = pacman_y - 1;
0x17CC	0x0E01      	MOVLW       1
0x17CE	0x5C31      	SUBWF       _pacman_y, 0 
0x17D0	0x6E22      	MOVWF       _newPacman_y 
0x17D2	0x0E00      	MOVLW       0
0x17D4	0x5832      	SUBWFB      _pacman_y+1, 0 
0x17D6	0x6E23      	MOVWF       _newPacman_y+1 
;compy.c,352 :: 		} else if (direction == 1) {
0x17D8	0xD029      	BRA         L_update_pacman106
L_update_pacman105:
0x17DA	0x5180      	MOVF        FARG_update_pacman_direction, 0, 1
0x17DC	0x0A01      	XORLW       1
0x17DE	0xE10B      	BNZ         L_update_pacman107
;compy.c,353 :: 		newPacman_x = pacman_x + 1;
0x17E0	0x0E01      	MOVLW       1
0x17E2	0x2433      	ADDWF       _pacman_x, 0 
0x17E4	0x6E24      	MOVWF       _newPacman_x 
0x17E6	0x0E00      	MOVLW       0
0x17E8	0x2034      	ADDWFC      _pacman_x+1, 0 
0x17EA	0x6E25      	MOVWF       _newPacman_x+1 
;compy.c,354 :: 		newPacman_y = pacman_y;
0x17EC	0xF022C031  	MOVFF       _pacman_y, _newPacman_y
0x17F0	0xF023C032  	MOVFF       _pacman_y+1, _newPacman_y+1
;compy.c,355 :: 		} else if (direction == 2) {
0x17F4	0xD01B      	BRA         L_update_pacman108
L_update_pacman107:
0x17F6	0x5180      	MOVF        FARG_update_pacman_direction, 0, 1
0x17F8	0x0A02      	XORLW       2
0x17FA	0xE10B      	BNZ         L_update_pacman109
;compy.c,356 :: 		newPacman_x = pacman_x;
0x17FC	0xF024C033  	MOVFF       _pacman_x, _newPacman_x
0x1800	0xF025C034  	MOVFF       _pacman_x+1, _newPacman_x+1
;compy.c,357 :: 		newPacman_y = pacman_y + 1;
0x1804	0x0E01      	MOVLW       1
0x1806	0x2431      	ADDWF       _pacman_y, 0 
0x1808	0x6E22      	MOVWF       _newPacman_y 
0x180A	0x0E00      	MOVLW       0
0x180C	0x2032      	ADDWFC      _pacman_y+1, 0 
0x180E	0x6E23      	MOVWF       _newPacman_y+1 
;compy.c,358 :: 		} else if (direction == 3) {
0x1810	0xD00D      	BRA         L_update_pacman110
L_update_pacman109:
0x1812	0x5180      	MOVF        FARG_update_pacman_direction, 0, 1
0x1814	0x0A03      	XORLW       3
0x1816	0xE10A      	BNZ         L_update_pacman111
;compy.c,359 :: 		newPacman_x = pacman_x - 1;
0x1818	0x0E01      	MOVLW       1
0x181A	0x5C33      	SUBWF       _pacman_x, 0 
0x181C	0x6E24      	MOVWF       _newPacman_x 
0x181E	0x0E00      	MOVLW       0
0x1820	0x5834      	SUBWFB      _pacman_x+1, 0 
0x1822	0x6E25      	MOVWF       _newPacman_x+1 
;compy.c,360 :: 		newPacman_y = pacman_y;
0x1824	0xF022C031  	MOVFF       _pacman_y, _newPacman_y
0x1828	0xF023C032  	MOVFF       _pacman_y+1, _newPacman_y+1
;compy.c,361 :: 		}
L_update_pacman111:
L_update_pacman110:
L_update_pacman108:
L_update_pacman106:
;compy.c,363 :: 		newPacmanOrientation = update_pacman_orientation(newPacman_x, newPacman_y);
0x182C	0xF271C024  	MOVFF       _newPacman_x, FARG_update_pacman_orientation_newX
0x1830	0xF272C025  	MOVFF       _newPacman_x+1, FARG_update_pacman_orientation_newX+1
0x1834	0xF273C022  	MOVFF       _newPacman_y, FARG_update_pacman_orientation_newY
0x1838	0xF274C023  	MOVFF       _newPacman_y+1, FARG_update_pacman_orientation_newY+1
0x183C	0xF005EC5E  	CALL        _update_pacman_orientation, 0
0x1840	0xF020C000  	MOVFF       R0, _newPacmanOrientation
0x1844	0x0E00      	MOVLW       0
0x1846	0x6E21      	MOVWF       _newPacmanOrientation+1 
;compy.c,365 :: 		if (newPacman_x < 0) newPacman_x = 14;
0x1848	0x0E80      	MOVLW       128
0x184A	0x1825      	XORWF       _newPacman_x+1, 0 
0x184C	0x6E00      	MOVWF       R0 
0x184E	0x0E80      	MOVLW       128
0x1850	0x5C00      	SUBWF       R0, 0 
0x1852	0xE102      	BNZ         L__update_pacman173
0x1854	0x0E00      	MOVLW       0
0x1856	0x5C24      	SUBWF       _newPacman_x, 0 
L__update_pacman173:
0x1858	0xE204      	BC          L_update_pacman112
0x185A	0x0E0E      	MOVLW       14
0x185C	0x6E24      	MOVWF       _newPacman_x 
0x185E	0x0E00      	MOVLW       0
0x1860	0x6E25      	MOVWF       _newPacman_x+1 
L_update_pacman112:
;compy.c,366 :: 		if (newPacman_x > 14) newPacman_x = 0;
0x1862	0x0E80      	MOVLW       128
0x1864	0x6E00      	MOVWF       R0 
0x1866	0x0E80      	MOVLW       128
0x1868	0x1825      	XORWF       _newPacman_x+1, 0 
0x186A	0x5C00      	SUBWF       R0, 0 
0x186C	0xE102      	BNZ         L__update_pacman174
0x186E	0x5024      	MOVF        _newPacman_x, 0 
0x1870	0x080E      	SUBLW       14
L__update_pacman174:
0x1872	0xE202      	BC          L_update_pacman113
0x1874	0x6A24      	CLRF        _newPacman_x 
0x1876	0x6A25      	CLRF        _newPacman_x+1 
L_update_pacman113:
;compy.c,368 :: 		if (newPacman_y < 0) newPacman_y = 7;
0x1878	0x0E80      	MOVLW       128
0x187A	0x1823      	XORWF       _newPacman_y+1, 0 
0x187C	0x6E00      	MOVWF       R0 
0x187E	0x0E80      	MOVLW       128
0x1880	0x5C00      	SUBWF       R0, 0 
0x1882	0xE102      	BNZ         L__update_pacman175
0x1884	0x0E00      	MOVLW       0
0x1886	0x5C22      	SUBWF       _newPacman_y, 0 
L__update_pacman175:
0x1888	0xE204      	BC          L_update_pacman114
0x188A	0x0E07      	MOVLW       7
0x188C	0x6E22      	MOVWF       _newPacman_y 
0x188E	0x0E00      	MOVLW       0
0x1890	0x6E23      	MOVWF       _newPacman_y+1 
L_update_pacman114:
;compy.c,369 :: 		if (newPacman_y > 7) newPacman_y = 0;
0x1892	0x0E80      	MOVLW       128
0x1894	0x6E00      	MOVWF       R0 
0x1896	0x0E80      	MOVLW       128
0x1898	0x1823      	XORWF       _newPacman_y+1, 0 
0x189A	0x5C00      	SUBWF       R0, 0 
0x189C	0xE102      	BNZ         L__update_pacman176
0x189E	0x5022      	MOVF        _newPacman_y, 0 
0x18A0	0x0807      	SUBLW       7
L__update_pacman176:
0x18A2	0xE202      	BC          L_update_pacman115
0x18A4	0x6A22      	CLRF        _newPacman_y 
0x18A6	0x6A23      	CLRF        _newPacman_y+1 
L_update_pacman115:
;compy.c,371 :: 		if (world[newPacman_x][newPacman_y] != barrier_orientation) {
0x18A8	0xF000C024  	MOVFF       _newPacman_x, R0
0x18AC	0xF001C025  	MOVFF       _newPacman_x+1, R1
0x18B0	0x0E3C      	MOVLW       60
0x18B2	0x6E04      	MOVWF       R4 
0x18B4	0x0E00      	MOVLW       0
0x18B6	0x6E05      	MOVWF       R5 
0x18B8	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x18BC	0x0E8D      	MOVLW       _world
0x18BE	0x2400      	ADDWF       R0, 0 
0x18C0	0x6E03      	MOVWF       R3 
0x18C2	0x0E00      	MOVLW       hi_addr(_world)
0x18C4	0x2001      	ADDWFC      R1, 0 
0x18C6	0x6E04      	MOVWF       R4 
0x18C8	0xF000C022  	MOVFF       _newPacman_y, R0
0x18CC	0xF001C023  	MOVFF       _newPacman_y+1, R1
0x18D0	0x3600      	RLCF        R0, 1 
0x18D2	0x9000      	BCF         R0, 0 
0x18D4	0x3601      	RLCF        R1, 1 
0x18D6	0x3600      	RLCF        R0, 1 
0x18D8	0x9000      	BCF         R0, 0 
0x18DA	0x3601      	RLCF        R1, 1 
0x18DC	0x5000      	MOVF        R0, 0 
0x18DE	0x2403      	ADDWF       R3, 0 
0x18E0	0x6EE9      	MOVWF       FSR0L 
0x18E2	0x5001      	MOVF        R1, 0 
0x18E4	0x2004      	ADDWFC      R4, 0 
0x18E6	0x6EEA      	MOVWF       FSR0H 
0x18E8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x18EC	0xF002CFEE  	MOVFF       POSTINC0, R2
0x18F0	0xF003CFEE  	MOVFF       POSTINC0, R3
0x18F4	0xF004CFEE  	MOVFF       POSTINC0, R4
0x18F8	0x0E00      	MOVLW       0
0x18FA	0x6E00      	MOVWF       R0 
0x18FC	0x1804      	XORWF       R4, 0 
0x18FE	0xE108      	BNZ         L__update_pacman177
0x1900	0x5000      	MOVF        R0, 0 
0x1902	0x1803      	XORWF       R3, 0 
0x1904	0xE105      	BNZ         L__update_pacman177
0x1906	0x5000      	MOVF        R0, 0 
0x1908	0x1802      	XORWF       R2, 0 
0x190A	0xE102      	BNZ         L__update_pacman177
0x190C	0x5001      	MOVF        R1, 0 
0x190E	0x184D      	XORWF       _barrier_orientation, 0 
L__update_pacman177:
0x1910	0xB4D8      	BTFSC       STATUS, 2 
0x1912	0xD0AF      	BRA         L_update_pacman116
;compy.c,372 :: 		if (world[newPacman_x][newPacman_y] == food_orientation) {
0x1914	0xF000C024  	MOVFF       _newPacman_x, R0
0x1918	0xF001C025  	MOVFF       _newPacman_x+1, R1
0x191C	0x0E3C      	MOVLW       60
0x191E	0x6E04      	MOVWF       R4 
0x1920	0x0E00      	MOVLW       0
0x1922	0x6E05      	MOVWF       R5 
0x1924	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1928	0x0E8D      	MOVLW       _world
0x192A	0x2400      	ADDWF       R0, 0 
0x192C	0x6E03      	MOVWF       R3 
0x192E	0x0E00      	MOVLW       hi_addr(_world)
0x1930	0x2001      	ADDWFC      R1, 0 
0x1932	0x6E04      	MOVWF       R4 
0x1934	0xF000C022  	MOVFF       _newPacman_y, R0
0x1938	0xF001C023  	MOVFF       _newPacman_y+1, R1
0x193C	0x3600      	RLCF        R0, 1 
0x193E	0x9000      	BCF         R0, 0 
0x1940	0x3601      	RLCF        R1, 1 
0x1942	0x3600      	RLCF        R0, 1 
0x1944	0x9000      	BCF         R0, 0 
0x1946	0x3601      	RLCF        R1, 1 
0x1948	0x5000      	MOVF        R0, 0 
0x194A	0x2403      	ADDWF       R3, 0 
0x194C	0x6EE9      	MOVWF       FSR0L 
0x194E	0x5001      	MOVF        R1, 0 
0x1950	0x2004      	ADDWFC      R4, 0 
0x1952	0x6EEA      	MOVWF       FSR0H 
0x1954	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1958	0xF002CFEE  	MOVFF       POSTINC0, R2
0x195C	0xF003CFEE  	MOVFF       POSTINC0, R3
0x1960	0xF004CFEE  	MOVFF       POSTINC0, R4
0x1964	0x0E00      	MOVLW       0
0x1966	0x6E00      	MOVWF       R0 
0x1968	0x1804      	XORWF       R4, 0 
0x196A	0xE108      	BNZ         L__update_pacman178
0x196C	0x5000      	MOVF        R0, 0 
0x196E	0x1803      	XORWF       R3, 0 
0x1970	0xE105      	BNZ         L__update_pacman178
0x1972	0x5000      	MOVF        R0, 0 
0x1974	0x1802      	XORWF       R2, 0 
0x1976	0xE102      	BNZ         L__update_pacman178
0x1978	0x5001      	MOVF        R1, 0 
0x197A	0x1861      	XORWF       _food_orientation, 0 
L__update_pacman178:
0x197C	0xE104      	BNZ         L_update_pacman117
;compy.c,373 :: 		QTD_FOOD--;
0x197E	0x0E01      	MOVLW       1
0x1980	0x5E26      	SUBWF       _QTD_FOOD, 1 
0x1982	0x0E00      	MOVLW       0
0x1984	0x5A27      	SUBWFB      _QTD_FOOD+1, 1 
;compy.c,374 :: 		}
L_update_pacman117:
;compy.c,375 :: 		if (QTD_FOOD == 0) {
0x1986	0x0E00      	MOVLW       0
0x1988	0x1827      	XORWF       _QTD_FOOD+1, 0 
0x198A	0xE102      	BNZ         L__update_pacman179
0x198C	0x0E00      	MOVLW       0
0x198E	0x1826      	XORWF       _QTD_FOOD, 0 
L__update_pacman179:
0x1990	0xE106      	BNZ         L_update_pacman118
;compy.c,376 :: 		IS_FINISH = 1;
0x1992	0x0E01      	MOVLW       1
0x1994	0x6E2C      	MOVWF       _IS_FINISH 
0x1996	0x0E00      	MOVLW       0
0x1998	0x6E2D      	MOVWF       _IS_FINISH+1 
;compy.c,377 :: 		IS_GAME_OVER = 0;
0x199A	0x6A4B      	CLRF        _IS_GAME_OVER 
0x199C	0x6A4C      	CLRF        _IS_GAME_OVER+1 
;compy.c,378 :: 		}
L_update_pacman118:
;compy.c,380 :: 		pacman_orientation = newPacmanOrientation;
0x199E	0xF02EC020  	MOVFF       _newPacmanOrientation, _pacman_orientation
;compy.c,382 :: 		world[pacman_x][pacman_y] = ' ';
0x19A2	0xF000C033  	MOVFF       _pacman_x, R0
0x19A6	0xF001C034  	MOVFF       _pacman_x+1, R1
0x19AA	0x0E3C      	MOVLW       60
0x19AC	0x6E04      	MOVWF       R4 
0x19AE	0x0E00      	MOVLW       0
0x19B0	0x6E05      	MOVWF       R5 
0x19B2	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x19B6	0x0E8D      	MOVLW       _world
0x19B8	0x2400      	ADDWF       R0, 0 
0x19BA	0x6E03      	MOVWF       R3 
0x19BC	0x0E00      	MOVLW       hi_addr(_world)
0x19BE	0x2001      	ADDWFC      R1, 0 
0x19C0	0x6E04      	MOVWF       R4 
0x19C2	0xF000C031  	MOVFF       _pacman_y, R0
0x19C6	0xF001C032  	MOVFF       _pacman_y+1, R1
0x19CA	0x3600      	RLCF        R0, 1 
0x19CC	0x9000      	BCF         R0, 0 
0x19CE	0x3601      	RLCF        R1, 1 
0x19D0	0x3600      	RLCF        R0, 1 
0x19D2	0x9000      	BCF         R0, 0 
0x19D4	0x3601      	RLCF        R1, 1 
0x19D6	0x5000      	MOVF        R0, 0 
0x19D8	0x2403      	ADDWF       R3, 0 
0x19DA	0x6EE1      	MOVWF       FSR1L 
0x19DC	0x5001      	MOVF        R1, 0 
0x19DE	0x2004      	ADDWFC      R4, 0 
0x19E0	0x6EE2      	MOVWF       FSR1H 
0x19E2	0x0E20      	MOVLW       32
0x19E4	0x6EE6      	MOVWF       POSTINC1 
0x19E6	0x0E00      	MOVLW       0
0x19E8	0x6EE6      	MOVWF       POSTINC1 
0x19EA	0x6EE6      	MOVWF       POSTINC1 
0x19EC	0x6EE6      	MOVWF       POSTINC1 
;compy.c,383 :: 		printCoordinate(pacman_x, pacman_y);
0x19EE	0xF27DC033  	MOVFF       _pacman_x, FARG_printCoordinate_x
0x19F2	0xF27EC034  	MOVFF       _pacman_x+1, FARG_printCoordinate_x+1
0x19F6	0xF27FC031  	MOVFF       _pacman_y, FARG_printCoordinate_y
0x19FA	0xF280C032  	MOVFF       _pacman_y+1, FARG_printCoordinate_y+1
0x19FE	0xF002EC03  	CALL        _printCoordinate, 0
;compy.c,385 :: 		world[newPacman_x][newPacman_y] = pacman_orientation;
0x1A02	0xF000C024  	MOVFF       _newPacman_x, R0
0x1A06	0xF001C025  	MOVFF       _newPacman_x+1, R1
0x1A0A	0x0E3C      	MOVLW       60
0x1A0C	0x6E04      	MOVWF       R4 
0x1A0E	0x0E00      	MOVLW       0
0x1A10	0x6E05      	MOVWF       R5 
0x1A12	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1A16	0x0E8D      	MOVLW       _world
0x1A18	0x2400      	ADDWF       R0, 0 
0x1A1A	0x6E03      	MOVWF       R3 
0x1A1C	0x0E00      	MOVLW       hi_addr(_world)
0x1A1E	0x2001      	ADDWFC      R1, 0 
0x1A20	0x6E04      	MOVWF       R4 
0x1A22	0xF000C022  	MOVFF       _newPacman_y, R0
0x1A26	0xF001C023  	MOVFF       _newPacman_y+1, R1
0x1A2A	0x3600      	RLCF        R0, 1 
0x1A2C	0x9000      	BCF         R0, 0 
0x1A2E	0x3601      	RLCF        R1, 1 
0x1A30	0x3600      	RLCF        R0, 1 
0x1A32	0x9000      	BCF         R0, 0 
0x1A34	0x3601      	RLCF        R1, 1 
0x1A36	0x5000      	MOVF        R0, 0 
0x1A38	0x2403      	ADDWF       R3, 0 
0x1A3A	0x6EE1      	MOVWF       FSR1L 
0x1A3C	0x5001      	MOVF        R1, 0 
0x1A3E	0x2004      	ADDWFC      R4, 0 
0x1A40	0x6EE2      	MOVWF       FSR1H 
0x1A42	0xFFE6C02E  	MOVFF       _pacman_orientation, POSTINC1
0x1A46	0x0E00      	MOVLW       0
0x1A48	0x6EE6      	MOVWF       POSTINC1 
0x1A4A	0x6EE6      	MOVWF       POSTINC1 
0x1A4C	0x6EE6      	MOVWF       POSTINC1 
;compy.c,386 :: 		printCoordinate(newPacman_x, newPacman_y);
0x1A4E	0xF27DC024  	MOVFF       _newPacman_x, FARG_printCoordinate_x
0x1A52	0xF27EC025  	MOVFF       _newPacman_x+1, FARG_printCoordinate_x+1
0x1A56	0xF27FC022  	MOVFF       _newPacman_y, FARG_printCoordinate_y
0x1A5A	0xF280C023  	MOVFF       _newPacman_y+1, FARG_printCoordinate_y+1
0x1A5E	0xF002EC03  	CALL        _printCoordinate, 0
;compy.c,388 :: 		pacman_x = newPacman_x;
0x1A62	0xF033C024  	MOVFF       _newPacman_x, _pacman_x
0x1A66	0xF034C025  	MOVFF       _newPacman_x+1, _pacman_x+1
;compy.c,389 :: 		pacman_y = newPacman_y;
0x1A6A	0xF031C022  	MOVFF       _newPacman_y, _pacman_y
0x1A6E	0xF032C023  	MOVFF       _newPacman_y+1, _pacman_y+1
;compy.c,390 :: 		}
L_update_pacman116:
;compy.c,391 :: 		}
0x1A72	0x0012      	RETURN      0
; end of _update_pacman
_generate_food:
;compy.c,322 :: 		void generate_food() {
;compy.c,323 :: 		food_x = rand() % 15;
0x1A74	0xF004ECC0  	CALL        _rand, 0
0x1A78	0x0E0F      	MOVLW       15
0x1A7A	0x6E04      	MOVWF       R4 
0x1A7C	0x0E00      	MOVLW       0
0x1A7E	0x6E05      	MOVWF       R5 
0x1A80	0xF004EC46  	CALL        _Div_16x16_S, 0
0x1A84	0xF000C008  	MOVFF       R8, R0
0x1A88	0xF001C009  	MOVFF       R9, R1
0x1A8C	0xF042C000  	MOVFF       R0, _food_x
0x1A90	0xF043C001  	MOVFF       R1, _food_x+1
;compy.c,324 :: 		food_y = rand() % 8;
0x1A94	0xF004ECC0  	CALL        _rand, 0
0x1A98	0x0E08      	MOVLW       8
0x1A9A	0x6E04      	MOVWF       R4 
0x1A9C	0x0E00      	MOVLW       0
0x1A9E	0x6E05      	MOVWF       R5 
0x1AA0	0xF004EC46  	CALL        _Div_16x16_S, 0
0x1AA4	0xF000C008  	MOVFF       R8, R0
0x1AA8	0xF001C009  	MOVFF       R9, R1
0x1AAC	0xF045C000  	MOVFF       R0, _food_y
0x1AB0	0xF046C001  	MOVFF       R1, _food_y+1
;compy.c,325 :: 		if (world[food_x][food_y] == ' ') {
0x1AB4	0xF000C042  	MOVFF       _food_x, R0
0x1AB8	0xF001C043  	MOVFF       _food_x+1, R1
0x1ABC	0x0E3C      	MOVLW       60
0x1ABE	0x6E04      	MOVWF       R4 
0x1AC0	0x0E00      	MOVLW       0
0x1AC2	0x6E05      	MOVWF       R5 
0x1AC4	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1AC8	0x0E8D      	MOVLW       _world
0x1ACA	0x2400      	ADDWF       R0, 0 
0x1ACC	0x6E03      	MOVWF       R3 
0x1ACE	0x0E00      	MOVLW       hi_addr(_world)
0x1AD0	0x2001      	ADDWFC      R1, 0 
0x1AD2	0x6E04      	MOVWF       R4 
0x1AD4	0xF000C045  	MOVFF       _food_y, R0
0x1AD8	0xF001C046  	MOVFF       _food_y+1, R1
0x1ADC	0x3600      	RLCF        R0, 1 
0x1ADE	0x9000      	BCF         R0, 0 
0x1AE0	0x3601      	RLCF        R1, 1 
0x1AE2	0x3600      	RLCF        R0, 1 
0x1AE4	0x9000      	BCF         R0, 0 
0x1AE6	0x3601      	RLCF        R1, 1 
0x1AE8	0x5000      	MOVF        R0, 0 
0x1AEA	0x2403      	ADDWF       R3, 0 
0x1AEC	0x6EE9      	MOVWF       FSR0L 
0x1AEE	0x5001      	MOVF        R1, 0 
0x1AF0	0x2004      	ADDWFC      R4, 0 
0x1AF2	0x6EEA      	MOVWF       FSR0H 
0x1AF4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1AF8	0xF002CFEE  	MOVFF       POSTINC0, R2
0x1AFC	0xF003CFEE  	MOVFF       POSTINC0, R3
0x1B00	0xF004CFEE  	MOVFF       POSTINC0, R4
0x1B04	0x0E00      	MOVLW       0
0x1B06	0x6E00      	MOVWF       R0 
0x1B08	0x1804      	XORWF       R4, 0 
0x1B0A	0xE108      	BNZ         L__generate_food168
0x1B0C	0x5000      	MOVF        R0, 0 
0x1B0E	0x1803      	XORWF       R3, 0 
0x1B10	0xE105      	BNZ         L__generate_food168
0x1B12	0x5000      	MOVF        R0, 0 
0x1B14	0x1802      	XORWF       R2, 0 
0x1B16	0xE102      	BNZ         L__generate_food168
0x1B18	0x5001      	MOVF        R1, 0 
0x1B1A	0x0A20      	XORLW       32
L__generate_food168:
0x1B1C	0xE132      	BNZ         L_generate_food97
;compy.c,326 :: 		world[food_x][food_y] = food_orientation;
0x1B1E	0xF000C042  	MOVFF       _food_x, R0
0x1B22	0xF001C043  	MOVFF       _food_x+1, R1
0x1B26	0x0E3C      	MOVLW       60
0x1B28	0x6E04      	MOVWF       R4 
0x1B2A	0x0E00      	MOVLW       0
0x1B2C	0x6E05      	MOVWF       R5 
0x1B2E	0xF000ECCB  	CALL        _Mul_16x16_U, 0
0x1B32	0x0E8D      	MOVLW       _world
0x1B34	0x2400      	ADDWF       R0, 0 
0x1B36	0x6E03      	MOVWF       R3 
0x1B38	0x0E00      	MOVLW       hi_addr(_world)
0x1B3A	0x2001      	ADDWFC      R1, 0 
0x1B3C	0x6E04      	MOVWF       R4 
0x1B3E	0xF000C045  	MOVFF       _food_y, R0
0x1B42	0xF001C046  	MOVFF       _food_y+1, R1
0x1B46	0x3600      	RLCF        R0, 1 
0x1B48	0x9000      	BCF         R0, 0 
0x1B4A	0x3601      	RLCF        R1, 1 
0x1B4C	0x3600      	RLCF        R0, 1 
0x1B4E	0x9000      	BCF         R0, 0 
0x1B50	0x3601      	RLCF        R1, 1 
0x1B52	0x5000      	MOVF        R0, 0 
0x1B54	0x2403      	ADDWF       R3, 0 
0x1B56	0x6EE1      	MOVWF       FSR1L 
0x1B58	0x5001      	MOVF        R1, 0 
0x1B5A	0x2004      	ADDWFC      R4, 0 
0x1B5C	0x6EE2      	MOVWF       FSR1H 
0x1B5E	0xFFE6C061  	MOVFF       _food_orientation, POSTINC1
0x1B62	0x0E00      	MOVLW       0
0x1B64	0x6EE6      	MOVWF       POSTINC1 
0x1B66	0x6EE6      	MOVWF       POSTINC1 
0x1B68	0x6EE6      	MOVWF       POSTINC1 
;compy.c,327 :: 		printCoordinate(food_x, food_y);
0x1B6A	0xF27DC042  	MOVFF       _food_x, FARG_printCoordinate_x
0x1B6E	0xF27EC043  	MOVFF       _food_x+1, FARG_printCoordinate_x+1
0x1B72	0xF27FC045  	MOVFF       _food_y, FARG_printCoordinate_y
0x1B76	0xF280C046  	MOVFF       _food_y+1, FARG_printCoordinate_y+1
0x1B7A	0xF002EC03  	CALL        _printCoordinate, 0
;compy.c,328 :: 		QTD_FOOD++;
0x1B7E	0x4A26      	INFSNZ      _QTD_FOOD, 1 
0x1B80	0x2A27      	INCF        _QTD_FOOD+1, 1 
;compy.c,329 :: 		}
L_generate_food97:
;compy.c,330 :: 		}
0x1B82	0x0012      	RETURN      0
; end of _generate_food
_main:
0x1B84	0xF00FEC01  	CALL        7682, 0
;compy.c,430 :: 		void main() {           // General purpose register
;compy.c,431 :: 		UART1_Init(19200);
0x1B88	0x0E19      	MOVLW       25
0x1B8A	0x6EAF      	MOVWF       SPBRG 
0x1B8C	0x84AC      	BSF         TXSTA, 2, 0
0x1B8E	0xF008ECEF  	CALL        _UART1_Init, 0
;compy.c,432 :: 		I2C1_Init(100000);
0x1B92	0x0E14      	MOVLW       20
0x1B94	0x6EC8      	MOVWF       SSPADD 
0x1B96	0xF009EC44  	CALL        _I2C1_Init, 0
;compy.c,433 :: 		ADCON1 = 0B00001110;
0x1B9A	0x0E0E      	MOVLW       14
0x1B9C	0x6EC1      	MOVWF       ADCON1 
;compy.c,434 :: 		TRISB = 0B00001111;
0x1B9E	0x0E0F      	MOVLW       15
0x1BA0	0x6E93      	MOVWF       TRISB 
;compy.c,435 :: 		TRISA = 0B00100001;
0x1BA2	0x0E21      	MOVLW       33
0x1BA4	0x6E92      	MOVWF       TRISA 
;compy.c,437 :: 		TRISA3_bit = 1;               // Set RA3 as input
0x1BA6	0x8692      	BSF         TRISA3_bit, 3 
;compy.c,438 :: 		TRISA4_bit = 1;               // Set RA4 as input
0x1BA8	0x8892      	BSF         TRISA4_bit, 4 
;compy.c,440 :: 		Sound_Init(&PORTC, 5);
0x1BAA	0x0E82      	MOVLW       PORTC
0x1BAC	0x0102      	MOVLB       2
0x1BAE	0x6F6D      	MOVWF       FARG_Sound_Init_snd_port, 1
0x1BB0	0x0E0F      	MOVLW       hi_addr(PORTC)
0x1BB2	0x6F6E      	MOVWF       FARG_Sound_Init_snd_port+1, 1
0x1BB4	0x0E05      	MOVLW       5
0x1BB6	0x6F6F      	MOVWF       FARG_Sound_Init_snd_pin, 1
0x1BB8	0xF009EC23  	CALL        _Sound_Init, 0
;compy.c,441 :: 		Start_Screen_1();
0x1BBC	0xF008EC7C  	CALL        _Start_Screen_1, 0
;compy.c,444 :: 		T6963C_init(240, 128, 8);
0x1BC0	0x0EF0      	MOVLW       240
0x1BC2	0x0102      	MOVLB       2
0x1BC4	0x6F6D      	MOVWF       FARG_T6963C_init_width, 1
0x1BC6	0x0E00      	MOVLW       0
0x1BC8	0x6F6E      	MOVWF       FARG_T6963C_init_width+1, 1
0x1BCA	0x0E80      	MOVLW       128
0x1BCC	0x6F6F      	MOVWF       FARG_T6963C_init_height, 1
0x1BCE	0x0E08      	MOVLW       8
0x1BD0	0x6F70      	MOVWF       FARG_T6963C_init_fntW, 1
0x1BD2	0xF009EC4F  	CALL        _T6963C_init, 0
;compy.c,449 :: 		T6963C_graphics(1);
0x1BD6	0x866D      	BSF         _T6963C_display, 3 
0x1BD8	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x1BDC	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;compy.c,450 :: 		T6963C_text(1);
0x1BE0	0x846D      	BSF         _T6963C_display, 2 
0x1BE2	0xF298C06D  	MOVFF       _T6963C_display, FARG_T6963C_writeCommand_mydata
0x1BE6	0xF000ECA6  	CALL        _T6963C_writeCommand, 0
;compy.c,452 :: 		InitTimer2();
0x1BEA	0xF009ECE3  	CALL        _InitTimer2, 0
;compy.c,455 :: 		Create_World();
0x1BEE	0xDCDD      	RCALL       _Create_World
;compy.c,456 :: 		isStarted = 1;
0x1BF0	0x0E01      	MOVLW       1
0x1BF2	0x6E40      	MOVWF       _isStarted 
0x1BF4	0x0E00      	MOVLW       0
0x1BF6	0x6E41      	MOVWF       _isStarted+1 
;compy.c,458 :: 		while (1) {
L_main130:
;compy.c,459 :: 		if (IS_FINISH) {
0x1BF8	0x502C      	MOVF        _IS_FINISH, 0 
0x1BFA	0x102D      	IORWF       _IS_FINISH+1, 0 
0x1BFC	0xE001      	BZ          L_main132
;compy.c,460 :: 		break;
0x1BFE	0xD05D      	BRA         L_main131
;compy.c,461 :: 		}
L_main132:
;compy.c,463 :: 		if (pacman_x == ghost_x && pacman_y == ghost_y) {
0x1C00	0x5034      	MOVF        _pacman_x+1, 0 
0x1C02	0x1830      	XORWF       _ghost_x+1, 0 
0x1C04	0xE102      	BNZ         L__main182
0x1C06	0x502F      	MOVF        _ghost_x, 0 
0x1C08	0x1833      	XORWF       _pacman_x, 0 
L__main182:
0x1C0A	0xE10E      	BNZ         L_main135
0x1C0C	0x5032      	MOVF        _pacman_y+1, 0 
0x1C0E	0x1836      	XORWF       _ghost_y+1, 0 
0x1C10	0xE102      	BNZ         L__main183
0x1C12	0x5035      	MOVF        _ghost_y, 0 
0x1C14	0x1831      	XORWF       _pacman_y, 0 
L__main183:
0x1C16	0xE108      	BNZ         L_main135
L__main148:
;compy.c,464 :: 		IS_FINISH = 1;
0x1C18	0x0E01      	MOVLW       1
0x1C1A	0x6E2C      	MOVWF       _IS_FINISH 
0x1C1C	0x0E00      	MOVLW       0
0x1C1E	0x6E2D      	MOVWF       _IS_FINISH+1 
;compy.c,465 :: 		IS_GAME_OVER = 1;
0x1C20	0x0E01      	MOVLW       1
0x1C22	0x6E4B      	MOVWF       _IS_GAME_OVER 
0x1C24	0x0E00      	MOVLW       0
0x1C26	0x6E4C      	MOVWF       _IS_GAME_OVER+1 
;compy.c,466 :: 		}
L_main135:
;compy.c,468 :: 		command = Le_Teclado();
0x1C28	0xDC35      	RCALL       _Le_Teclado
0x1C2A	0xF03BC000  	MOVFF       R0, _command
;compy.c,469 :: 		if (command == '8') {
0x1C2E	0x5000      	MOVF        R0, 0 
0x1C30	0x0A38      	XORLW       56
0x1C32	0xE104      	BNZ         L_main136
;compy.c,470 :: 		update_pacman(0);
0x1C34	0x0100      	MOVLB       0
0x1C36	0x6B80      	CLRF        FARG_update_pacman_direction, 1
0x1C38	0xDDC1      	RCALL       _update_pacman
;compy.c,471 :: 		} else if (command == '6') {
0x1C3A	0xD017      	BRA         L_main137
L_main136:
0x1C3C	0x503B      	MOVF        _command, 0 
0x1C3E	0x0A36      	XORLW       54
0x1C40	0xE105      	BNZ         L_main138
;compy.c,472 :: 		update_pacman(1);
0x1C42	0x0E01      	MOVLW       1
0x1C44	0x0100      	MOVLB       0
0x1C46	0x6F80      	MOVWF       FARG_update_pacman_direction, 1
0x1C48	0xDDB9      	RCALL       _update_pacman
;compy.c,473 :: 		} else if (command == '2') {
0x1C4A	0xD00F      	BRA         L_main139
L_main138:
0x1C4C	0x503B      	MOVF        _command, 0 
0x1C4E	0x0A32      	XORLW       50
0x1C50	0xE105      	BNZ         L_main140
;compy.c,474 :: 		update_pacman(2);
0x1C52	0x0E02      	MOVLW       2
0x1C54	0x0100      	MOVLB       0
0x1C56	0x6F80      	MOVWF       FARG_update_pacman_direction, 1
0x1C58	0xDDB1      	RCALL       _update_pacman
;compy.c,475 :: 		} else if (command == '4') {
0x1C5A	0xD007      	BRA         L_main141
L_main140:
0x1C5C	0x503B      	MOVF        _command, 0 
0x1C5E	0x0A34      	XORLW       52
0x1C60	0xE104      	BNZ         L_main142
;compy.c,476 :: 		update_pacman(3);
0x1C62	0x0E03      	MOVLW       3
0x1C64	0x0100      	MOVLB       0
0x1C66	0x6F80      	MOVWF       FARG_update_pacman_direction, 1
0x1C68	0xDDA9      	RCALL       _update_pacman
;compy.c,477 :: 		}
L_main142:
L_main141:
L_main139:
L_main137:
;compy.c,479 :: 		if (move_ghost_bool) {
0x1C6A	0x5039      	MOVF        _move_ghost_bool, 0 
0x1C6C	0x103A      	IORWF       _move_ghost_bool+1, 0 
0x1C6E	0xE00B      	BZ          L_main143
;compy.c,480 :: 		move_ghost_bool = 0;
0x1C70	0x6A39      	CLRF        _move_ghost_bool 
0x1C72	0x6A3A      	CLRF        _move_ghost_bool+1 
;compy.c,481 :: 		UART1_Write_Text("X");
0x1C74	0x0E37      	MOVLW       ?lstr5_compy
0x1C76	0x0102      	MOVLB       2
0x1C78	0x6F6D      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x1C7A	0x0E00      	MOVLW       hi_addr(?lstr5_compy)
0x1C7C	0x6F6E      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x1C7E	0xF008EC61  	CALL        _UART1_Write_Text, 0
;compy.c,482 :: 		move_ghost();
0x1C82	0xF006EC6F  	CALL        _move_ghost, 0
;compy.c,483 :: 		}
L_main143:
;compy.c,484 :: 		if (generate_food_bool) {
0x1C86	0x503C      	MOVF        _generate_food_bool, 0 
0x1C88	0x103D      	IORWF       _generate_food_bool+1, 0 
0x1C8A	0xE00A      	BZ          L_main144
;compy.c,485 :: 		generate_food_bool = 0;
0x1C8C	0x0102      	MOVLB       2
0x1C8E	0x6A3C      	CLRF        _generate_food_bool 
0x1C90	0x6A3D      	CLRF        _generate_food_bool+1 
;compy.c,486 :: 		UART1_Write_Text("Y");
0x1C92	0x0E3E      	MOVLW       ?lstr6_compy
0x1C94	0x6F6D      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x1C96	0x0E00      	MOVLW       hi_addr(?lstr6_compy)
0x1C98	0x6F6E      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x1C9A	0xF008EC61  	CALL        _UART1_Write_Text, 0
;compy.c,487 :: 		generate_food();
0x1C9E	0xDEEA      	RCALL       _generate_food
;compy.c,488 :: 		}
L_main144:
;compy.c,489 :: 		if (QTD_FOOD < 1) {
0x1CA0	0x0E00      	MOVLW       0
0x1CA2	0x5C27      	SUBWF       _QTD_FOOD+1, 0 
0x1CA4	0xE102      	BNZ         L__main184
0x1CA6	0x0E01      	MOVLW       1
0x1CA8	0x5C26      	SUBWF       _QTD_FOOD, 0 
L__main184:
0x1CAA	0xE206      	BC          L_main145
;compy.c,490 :: 		IS_FINISH = 1;
0x1CAC	0x0E01      	MOVLW       1
0x1CAE	0x6E2C      	MOVWF       _IS_FINISH 
0x1CB0	0x0E00      	MOVLW       0
0x1CB2	0x6E2D      	MOVWF       _IS_FINISH+1 
;compy.c,491 :: 		IS_GAME_OVER = 0;
0x1CB4	0x6A4B      	CLRF        _IS_GAME_OVER 
0x1CB6	0x6A4C      	CLRF        _IS_GAME_OVER+1 
;compy.c,492 :: 		}
L_main145:
;compy.c,493 :: 		}
0x1CB8	0xD79F      	BRA         L_main130
L_main131:
;compy.c,494 :: 		Finish();
0x1CBA	0xF009ECEB  	CALL        _Finish, 0
;compy.c,496 :: 		}
0x1CBE	0xD7FF      	BRA         $+0
; end of _main
0x1E02	0xF020EE10  	LFSR        1, 32
0x1E06	0x0E42      	MOVLW       66
0x1E08	0x6E00      	MOVWF       R0 
0x1E0A	0x0E01      	MOVLW       1
0x1E0C	0x6E01      	MOVWF       R1 
0x1E0E	0x0EC0      	MOVLW       192
0x1E10	0x6EF6      	MOVWF       4086 
0x1E12	0x0E1C      	MOVLW       28
0x1E14	0x6EF7      	MOVWF       TBLPTRH 
0x1E16	0x0E00      	MOVLW       0
0x1E18	0x6EF8      	MOVWF       TBLPTRU 
0x1E1A	0xF009EC1B  	CALL        4662, 0
0x1E1E	0x0012      	RETURN      0
;compy.c,0 :: ?ICS_newPacmanOrientation
0x1CC0	0x0000 ;?ICS_newPacmanOrientation+0
; end of ?ICS_newPacmanOrientation
;compy.c,0 :: ?ICS_newPacman_y
0x1CC2	0x0000 ;?ICS_newPacman_y+0
; end of ?ICS_newPacman_y
;compy.c,0 :: ?ICS_newPacman_x
0x1CC4	0x0000 ;?ICS_newPacman_x+0
; end of ?ICS_newPacman_x
;compy.c,0 :: ?ICS_QTD_FOOD
0x1CC6	0x0003 ;?ICS_QTD_FOOD+0
; end of ?ICS_QTD_FOOD
;compy.c,0 :: ?ICS_new_ghost_y
0x1CC8	0x0000 ;?ICS_new_ghost_y+0
; end of ?ICS_new_ghost_y
;compy.c,0 :: ?ICS_new_ghost_x
0x1CCA	0x0000 ;?ICS_new_ghost_x+0
; end of ?ICS_new_ghost_x
;compy.c,0 :: ?ICS_IS_FINISH
0x1CCC	0x0000 ;?ICS_IS_FINISH+0
; end of ?ICS_IS_FINISH
;compy.c,0 :: ?ICS_pacman_orientation
0x1CCE	0x01 ;?ICS_pacman_orientation+0
; end of ?ICS_pacman_orientation
;compy.c,0 :: ?ICS_ghost_x
0x1CCF	0x000E ;?ICS_ghost_x+0
; end of ?ICS_ghost_x
;compy.c,0 :: ?ICS_pacman_y
0x1CD1	0x0000 ;?ICS_pacman_y+0
; end of ?ICS_pacman_y
;compy.c,0 :: ?ICS_pacman_x
0x1CD3	0x0000 ;?ICS_pacman_x+0
; end of ?ICS_pacman_x
;compy.c,0 :: ?ICS_ghost_y
0x1CD5	0x0000 ;?ICS_ghost_y+0
; end of ?ICS_ghost_y
;compy.c,0 :: ?ICS?lstr5_compy
0x1CD7	0x0058 ;?ICS?lstr5_compy+0
; end of ?ICS?lstr5_compy
;compy.c,0 :: ?ICS_move_ghost_bool
0x1CD9	0x0000 ;?ICS_move_ghost_bool+0
; end of ?ICS_move_ghost_bool
;compy.c,0 :: ?ICS_command
0x1CDB	0x00 ;?ICS_command+0
; end of ?ICS_command
;compy.c,0 :: ?ICS_generate_food_bool
0x1CDC	0x0000 ;?ICS_generate_food_bool+0
; end of ?ICS_generate_food_bool
;compy.c,0 :: ?ICS?lstr6_compy
0x1CDE	0x0059 ;?ICS?lstr6_compy+0
; end of ?ICS?lstr6_compy
;compy.c,0 :: ?ICS_isStarted
0x1CE0	0x0000 ;?ICS_isStarted+0
; end of ?ICS_isStarted
;compy.c,0 :: ?ICS_food_x
0x1CE2	0x0000 ;?ICS_food_x+0
; end of ?ICS_food_x
;compy.c,0 :: ?ICS_old_ghost_obj
0x1CE4	0x20 ;?ICS_old_ghost_obj+0
; end of ?ICS_old_ghost_obj
;compy.c,0 :: ?ICS_food_y
0x1CE5	0x0000 ;?ICS_food_y+0
; end of ?ICS_food_y
;compy.c,0 :: ?ICS_cnt
0x1CE7	0x0000 ;?ICS_cnt+0
; end of ?ICS_cnt
;compy.c,0 :: ?ICS_cnt2
0x1CE9	0x0000 ;?ICS_cnt2+0
; end of ?ICS_cnt2
;compy.c,0 :: ?ICS_IS_GAME_OVER
0x1CEB	0x0000 ;?ICS_IS_GAME_OVER+0
; end of ?ICS_IS_GAME_OVER
;compy.c,0 :: ?ICS_barrier_orientation
0x1CED	0x04 ;?ICS_barrier_orientation+0
; end of ?ICS_barrier_orientation
;compy.c,0 :: ?ICS?lstr3_compy
0x1CEE	0x6147 ;?ICS?lstr3_compy+0
0x1CF0	0x656D ;?ICS?lstr3_compy+2
0x1CF2	0x6F20 ;?ICS?lstr3_compy+4
0x1CF4	0x6576 ;?ICS?lstr3_compy+6
0x1CF6	0x0072 ;?ICS?lstr3_compy+8
; end of ?ICS?lstr3_compy
;compy.c,0 :: ?ICS?lstr4_compy
0x1CF8	0x6957 ;?ICS?lstr4_compy+0
0x1CFA	0x006E ;?ICS?lstr4_compy+2
; end of ?ICS?lstr4_compy
;compy.c,0 :: ?ICS_j
0x1CFC	0x0000 ;?ICS_j+0
; end of ?ICS_j
;compy.c,0 :: ?ICS_i
0x1CFE	0x0000 ;?ICS_i+0
; end of ?ICS_i
;compy.c,0 :: ?ICS_ghost_orientation
0x1D00	0x06 ;?ICS_ghost_orientation+0
; end of ?ICS_ghost_orientation
;compy.c,0 :: ?ICS_food_orientation
0x1D01	0x05 ;?ICS_food_orientation+0
; end of ?ICS_food_orientation
;compy.c,36 :: _ghost
0x1D02	0x0000 ;_ghost+0
0x1D04	0xF00F ;_ghost+2
0x1D06	0xF81F ;_ghost+4
0x1D08	0xFC3F ;_ghost+6
0x1D0A	0xFE7F ;_ghost+8
0x1D0C	0xCE73 ;_ghost+10
0x1D0E	0xCE73 ;_ghost+12
0x1D10	0xFE7F ;_ghost+14
0x1D12	0xFE7F ;_ghost+16
0x1D14	0xFE7F ;_ghost+18
0x1D16	0x9E79 ;_ghost+20
0x1D18	0x6E76 ;_ghost+22
0x1D1A	0xFE7F ;_ghost+24
0x1D1C	0xEE6E ;_ghost+26
0x1D1E	0x4644 ;_ghost+28
0x1D20	0x0000 ;_ghost+30
; end of _ghost
;compy.c,41 :: _obstacle
0x1D22	0x0000 ;_obstacle+0
0x1D24	0xFC3F ;_obstacle+2
0x1D26	0xFA5F ;_obstacle+4
0x1D28	0xF66F ;_obstacle+6
0x1D2A	0xEE77 ;_obstacle+8
0x1D2C	0xDE7B ;_obstacle+10
0x1D2E	0xBE7D ;_obstacle+12
0x1D30	0x7E7E ;_obstacle+14
0x1D32	0x7E7E ;_obstacle+16
0x1D34	0xBE7D ;_obstacle+18
0x1D36	0xDE7B ;_obstacle+20
0x1D38	0xEE77 ;_obstacle+22
0x1D3A	0xF66F ;_obstacle+24
0x1D3C	0xFA5F ;_obstacle+26
0x1D3E	0xFC3F ;_obstacle+28
0x1D40	0x0000 ;_obstacle+30
; end of _obstacle
;compy.c,26 :: _blank
0x1D42	0x0000 ;_blank+0
0x1D44	0x0000 ;_blank+2
0x1D46	0x0000 ;_blank+4
0x1D48	0x0000 ;_blank+6
0x1D4A	0x0000 ;_blank+8
0x1D4C	0x0000 ;_blank+10
0x1D4E	0x0000 ;_blank+12
0x1D50	0x0000 ;_blank+14
0x1D52	0x0000 ;_blank+16
0x1D54	0x0000 ;_blank+18
0x1D56	0x0000 ;_blank+20
0x1D58	0x0000 ;_blank+22
0x1D5A	0x0000 ;_blank+24
0x1D5C	0x0000 ;_blank+26
0x1D5E	0x0000 ;_blank+28
0x1D60	0x0000 ;_blank+30
; end of _blank
;compy.c,31 :: _food
0x1D62	0x0000 ;_food+0
0x1D64	0x0000 ;_food+2
0x1D66	0x0000 ;_food+4
0x1D68	0x0000 ;_food+6
0x1D6A	0x0000 ;_food+8
0x1D6C	0x0000 ;_food+10
0x1D6E	0x8001 ;_food+12
0x1D70	0xC003 ;_food+14
0x1D72	0xC003 ;_food+16
0x1D74	0x8001 ;_food+18
0x1D76	0x0000 ;_food+20
0x1D78	0x0000 ;_food+22
0x1D7A	0x0000 ;_food+24
0x1D7C	0x0000 ;_food+26
0x1D7E	0x0000 ;_food+28
0x1D80	0x0000 ;_food+30
; end of _food
;compy.c,61 :: _pacman_right
0x1D82	0x0000 ;_pacman_right+0
0x1D84	0xF007 ;_pacman_right+2
0x1D86	0xF81F ;_pacman_right+4
0x1D88	0xFC3F ;_pacman_right+6
0x1D8A	0x3E3F ;_pacman_right+8
0x1D8C	0x3E7F ;_pacman_right+10
0x1D8E	0xFC7F ;_pacman_right+12
0x1D90	0xF87F ;_pacman_right+14
0x1D92	0xE07F ;_pacman_right+16
0x1D94	0xC07F ;_pacman_right+18
0x1D96	0xFE7F ;_pacman_right+20
0x1D98	0xFE3F ;_pacman_right+22
0x1D9A	0xFC3F ;_pacman_right+24
0x1D9C	0xF81F ;_pacman_right+26
0x1D9E	0xF007 ;_pacman_right+28
0x1DA0	0x0000 ;_pacman_right+30
; end of _pacman_right
;compy.c,46 :: _pacman_up
0x1DA2	0x0000 ;_pacman_up+0
0x1DA4	0x0008 ;_pacman_up+2
0x1DA6	0x1818 ;_pacman_up+4
0x1DA8	0x3C38 ;_pacman_up+6
0x1DAA	0x7E78 ;_pacman_up+8
0x1DAC	0xFE78 ;_pacman_up+10
0x1DAE	0xCE79 ;_pacman_up+12
0x1DB0	0xCE7B ;_pacman_up+14
0x1DB2	0xFE7F ;_pacman_up+16
0x1DB4	0xFE7F ;_pacman_up+18
0x1DB6	0xFE7F ;_pacman_up+20
0x1DB8	0xFE7F ;_pacman_up+22
0x1DBA	0xFC3F ;_pacman_up+24
0x1DBC	0xF81F ;_pacman_up+26
0x1DBE	0xF00F ;_pacman_up+28
0x1DC0	0x0000 ;_pacman_up+30
; end of _pacman_up
;compy.c,56 :: _pacman_left
0x1DC2	0x0000 ;_pacman_left+0
0x1DC4	0xF00F ;_pacman_left+2
0x1DC6	0xF81F ;_pacman_left+4
0x1DC8	0xFC3F ;_pacman_left+6
0x1DCA	0xFE7C ;_pacman_left+8
0x1DCC	0xFE7C ;_pacman_left+10
0x1DCE	0xFE3F ;_pacman_left+12
0x1DD0	0xFE0F ;_pacman_left+14
0x1DD2	0xFE03 ;_pacman_left+16
0x1DD4	0xFE01 ;_pacman_left+18
0x1DD6	0xFE7F ;_pacman_left+20
0x1DD8	0xFE7F ;_pacman_left+22
0x1DDA	0xFC3F ;_pacman_left+24
0x1DDC	0xF81F ;_pacman_left+26
0x1DDE	0xF00F ;_pacman_left+28
0x1DE0	0x0000 ;_pacman_left+30
; end of _pacman_left
;compy.c,51 :: _pacman_down
0x1DE2	0x0000 ;_pacman_down+0
0x1DE4	0xF00F ;_pacman_down+2
0x1DE6	0xF81F ;_pacman_down+4
0x1DE8	0xFC3F ;_pacman_down+6
0x1DEA	0xFE7F ;_pacman_down+8
0x1DEC	0xFE7F ;_pacman_down+10
0x1DEE	0xFE7F ;_pacman_down+12
0x1DF0	0xFE7F ;_pacman_down+14
0x1DF2	0xCE7B ;_pacman_down+16
0x1DF4	0xCE79 ;_pacman_down+18
0x1DF6	0xFE78 ;_pacman_down+20
0x1DF8	0x7E78 ;_pacman_down+22
0x1DFA	0x3C38 ;_pacman_down+24
0x1DFC	0x1818 ;_pacman_down+26
0x1DFE	0x0008 ;_pacman_down+28
0x1E00	0x0000 ;_pacman_down+30
; end of _pacman_down
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [272]    _interrupt
0x0118       [6]    _Delay_1us
0x011E      [26]    _T6963C_waitReady
0x0138      [20]    _T6963C_writeData
0x014C      [20]    _T6963C_writeCommand
0x0160      [54]    _Div_16x16_U
0x0196      [80]    _Mul_16x16_U
0x01E6      [30]    _T6963C_setPtr
0x0204     [256]    _T6963C_sprite
0x0304     [156]    _getSprite
0x03A0      [82]    _print
0x03F2      [20]    _srand
0x0406      [92]    _printCoordinate
0x0462      [36]    _Delay_Cyc
0x0486      [16]    _Get_Fosc_kHz
0x0496      [96]    _T6963C_write_text
0x04F6     [748]    _Div_32x32_U
0x07E2      [82]    _Mul_32x32_U
0x0834      [88]    _Div_16x16_S_L
0x088C     [198]    _Div_16x16_S
0x0952      [46]    _print_text
0x0980     [122]    _rand
0x09FA      [76]    _Print_World
0x0A46      [14]    _UART1_Write
0x0A54     [104]    _T6963C_fill
0x0ABC     [110]    _update_pacman_orientation
0x0B2A     [408]    _Sound_Play
0x0CC2      [28]    _Delay_100ms
0x0CDE     [996]    _move_ghost
0x10C2      [54]    _UART1_Write_Text
0x10F8     [230]    _Start_Screen_1
0x11DE      [88]    _UART1_Init
0x1236      [16]    ___CC2DW
0x1246      [66]    _Sound_Init
0x1288      [22]    _I2C1_Init
0x129E     [296]    _T6963C_init
0x13C6      [16]    _InitTimer2
0x13D6     [190]    _Finish
0x1494     [278]    _Le_Teclado
0x15AA     [530]    _Create_World
0x17BC     [696]    _update_pacman
0x1A74     [272]    _generate_food
0x1B84     [316]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0020       [2]    _newPacmanOrientation
0x0022       [2]    _newPacman_y
0x0024       [2]    _newPacman_x
0x0026       [2]    _QTD_FOOD
0x0028       [2]    _new_ghost_y
0x002A       [2]    _new_ghost_x
0x002C       [2]    _IS_FINISH
0x002E       [1]    _pacman_orientation
0x002F       [2]    _ghost_x
0x0031       [2]    _pacman_y
0x0033       [2]    _pacman_x
0x0035       [2]    _ghost_y
0x0037       [2]    ?lstr5_compy
0x0039       [2]    _move_ghost_bool
0x003B       [1]    _command
0x003C       [2]    _generate_food_bool
0x003E       [2]    ?lstr6_compy
0x0040       [2]    _isStarted
0x0042       [2]    _food_x
0x0044       [1]    _old_ghost_obj
0x0045       [2]    _food_y
0x0047       [2]    _cnt
0x0049       [2]    _cnt2
0x004B       [2]    _IS_GAME_OVER
0x004D       [1]    _barrier_orientation
0x004E      [10]    ?lstr3_compy
0x0058       [4]    ?lstr4_compy
0x005C       [2]    _j
0x005E       [2]    _i
0x0060       [1]    _ghost_orientation
0x0061       [1]    _food_orientation
0x0062       [2]    _T6963C_txtCols
0x0064       [2]    _T6963C_textHomeAddr
0x0066       [2]    _T6963C_fontWidth
0x0068       [1]    __Lib_CStdlib_randf
0x0069       [4]    __Lib_CStdlib_randx
0x006D       [1]    _T6963C_display
0x006E       [2]    __Lib_Sound_soundPortAddr
0x0070       [1]    __Lib_Sound_pinMask1
0x0071       [1]    __Lib_Sound_pinMask0
0x0072       [2]    _T6963C_grWidth
0x0074       [2]    _T6963C_grHeight
0x0076       [4]    _UART_Tx_Idle_Ptr
0x007A       [4]    _UART_Rd_Ptr
0x007E       [2]    _T6963C_grMemSize
0x0080       [1]    FARG_update_pacman_direction
0x0080       [1]    UART1_Write_Text_data__L0
0x0081       [4]    _UART_Wr_Ptr
0x0085       [4]    _UART_Rdy_Ptr
0x0089       [2]    _T6963C_txtMemSize
0x008B       [2]    _T6963C_grHomeAddr
0x008D     [480]    _world
0x026D       [2]    FARG_UART1_Write_Text_uart_text
0x026D       [2]    FARG_Sound_Init_snd_port
0x026D       [2]    FARG_T6963C_init_width
0x026D       [4]    FARG_I2C1_Init_clock
0x026F       [1]    UART1_Write_Text_counter_L0
0x026F       [1]    FARG_Sound_Init_snd_pin
0x026F       [1]    FARG_T6963C_init_height
0x0270       [1]    FARG_T6963C_init_fntW
0x0271       [2]    FARG_update_pacman_orientation_newX
0x0271       [1]    FARG_print_text_column
0x0271       [1]    FARG_UART1_Write_data_
0x0271       [1]    FARG_T6963C_fill_v
0x0271       [2]    FARG_Sound_Play_freq_in_hz
0x0272       [2]    FARG_T6963C_fill_start
0x0272       [1]    FARG_print_text_line
0x0273       [2]    FARG_Sound_Play_duration_ms
0x0273       [2]    FARG_update_pacman_orientation_newY
0x0273       [2]    FARG_print_text_text
0x0274       [2]    FARG_T6963C_fill_len
0x0275       [2]    Sound_Play_nc_L0
0x0276       [2]    T6963C_fill_addr_L0
0x0277       [2]    Sound_Play_i_L0
0x0279       [4]    Sound_Play_per_nc_L0
0x027D       [2]    FARG_srand_x
0x027D       [2]    FARG_T6963C_write_text_str
0x027D       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x027D       [2]    FARG_printCoordinate_x
0x027F       [2]    FARG_printCoordinate_y
0x027F       [1]    FARG_T6963C_write_text_x
0x0280       [1]    FARG_T6963C_write_text_y
0x0281       [1]    FARG_T6963C_write_text_mode
0x0282       [1]    FARG_getSprite_charactereValue
0x0282       [1]    FARG_print_column
0x0283       [1]    FARG_print_line
0x0284       [3]    FARG_print_sprite
0x0287       [1]    FARG_T6963C_sprite_px
0x0288       [1]    FARG_T6963C_sprite_py
0x0289       [3]    FARG_T6963C_sprite_pic
0x028C       [1]    FARG_T6963C_sprite_sx
0x028D       [1]    FARG_T6963C_sprite_sy
0x028E       [2]    T6963C_sprite_cx_L0
0x0290       [2]    T6963C_sprite_i_L0
0x0292       [2]    T6963C_sprite_addr_L0
0x0294       [2]    FARG_T6963C_setPtr_p
0x0296       [1]    FARG_T6963C_setPtr_c
0x0297       [1]    T6963C_setPtr_addrH_L0
0x0298       [1]    FARG_T6963C_writeCommand_mydata
0x0298       [1]    FARG_T6963C_writeData_mydata
0x0F80       [0]    NOT_SS_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    HLVDIN_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    RA7_bit
0x0F80       [1]    PORTA
0x0F81       [0]    AN10_bit
0x0F81       [0]    AN8_bit
0x0F81       [1]    PORTB
0x0F81       [0]    AN12_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    AN9_bit
0x0F81       [0]    AN11_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    KBI0_bit
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    KBI2_bit
0x0F81       [0]    KBI3_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    KBI1_bit
0x0F81       [0]    PGD_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB5_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    SDI_bit
0x0F82       [1]    PORTC
0x0F82       [0]    T6963C_ctrlrd
0x0F82       [0]    T6963C_ctrlrst
0x0F82       [0]    T6963C_ctrlcd
0x0F82       [0]    T13CKI_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    T6963C_ctrlwr
0x0F83       [1]    PORTD
0x0F83       [1]    T6963C_dataPort
0x0F83       [0]    P1D_bit
0x0F83       [0]    PSP0_bit
0x0F83       [0]    PSP3_bit
0x0F83       [0]    PSP2_bit
0x0F83       [0]    PSP1_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    PSP4_bit
0x0F83       [0]    P1B_bit
0x0F83       [0]    P1C_bit
0x0F83       [0]    PSP7_bit
0x0F83       [0]    PSP5_bit
0x0F83       [0]    PSP6_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    AN6_bit
0x0F84       [0]    CS_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    NOT_RD_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    MCLR_bit
0x0F84       [1]    PORTE
0x0F84       [0]    NOT_MCLR_bit
0x0F84       [0]    RD_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    NOT_WR_bit
0x0F84       [0]    WR_bit
0x0F84       [0]    RE0_bit
0x0F84       [0]    RE3_bit
0x0F84       [0]    VPP_bit
0x0F84       [0]    NOT_CS_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA6_bit
0x0F89       [1]    LATA
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB7_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC4_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [1]    LATD
0x0F8D       [0]    LATE0_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    LATE2_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA7_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    T6963C_ctrlrst_Direction
0x0F94       [0]    T6963C_ctrlrd_Direction
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    T6963C_ctrlwr_Direction
0x0F94       [0]    T6963C_ctrlcd_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD3_bit
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    IBOV_bit
0x0F96       [0]    OBF_bit
0x0F96       [1]    TRISE
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    IBF_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    TUN3_bit
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    TUN0_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [0]    TUN4_bit
0x0F9B       [0]    PLLEN_bit
0x0F9B       [0]    INTSRC_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [1]    PIE1
0x0F9E       [0]    TXIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    RCIP_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CMIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    HLVDIE_bit
0x0FA0       [0]    OSCFIE_bit
0x0FA1       [0]    CMIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    HLVDIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    CMIP_bit
0x0FA2       [0]    HLVDIP_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [0]    WR_EECON1_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    ADEN_bit
0x0FAB       [0]    FERR_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    SENDB_bit
0x0FAC       [0]    BRGH_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [1]    T3CON
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [0]    C1INV_bit
0x0FB4       [0]    CM2_bit
0x0FB4       [1]    CMCON
0x0FB4       [0]    CIS_bit
0x0FB4       [0]    C2OUT_bit
0x0FB4       [0]    CM0_bit
0x0FB4       [0]    C1OUT_bit
0x0FB4       [0]    C2INV_bit
0x0FB4       [0]    CM1_bit
0x0FB5       [0]    CVRR_bit
0x0FB5       [0]    CVROE_bit
0x0FB5       [0]    CVREN_bit
0x0FB5       [0]    CVRSS_bit
0x0FB5       [0]    CVR1_bit
0x0FB5       [0]    CVR2_bit
0x0FB5       [0]    CVR3_bit
0x0FB5       [0]    CVR0_bit
0x0FB5       [1]    CVRCON
0x0FB6       [0]    PSSAC1_bit
0x0FB6       [0]    PSSAC0_bit
0x0FB6       [0]    PSSBD1_bit
0x0FB6       [0]    ECCPAS0_bit
0x0FB6       [0]    ECCPASE_bit
0x0FB6       [0]    ECCPAS2_bit
0x0FB6       [0]    ECCPAS1_bit
0x0FB6       [1]    ECCP1AS
0x0FB6       [0]    PSSBD0_bit
0x0FB7       [0]    PDC3_bit
0x0FB7       [0]    PDC1_bit
0x0FB7       [0]    PDC2_bit
0x0FB7       [0]    PDC6_bit
0x0FB7       [0]    PDC5_bit
0x0FB7       [0]    PRSEN_bit
0x0FB7       [0]    PDC4_bit
0x0FB7       [0]    PDC0_bit
0x0FB7       [1]    PWM1CON
0x0FB8       [0]    RXDTP_bit
0x0FB8       [0]    RCIDL_bit
0x0FB8       [0]    TXCKP_bit
0x0FB8       [0]    ABDOVF_bit
0x0FB8       [0]    SCKP_bit
0x0FB8       [0]    BRG16_bit
0x0FB8       [0]    WUE_bit
0x0FB8       [0]    ABDEN_bit
0x0FB8       [0]    RCMT_bit
0x0FB8       [1]    BAUDCTL
0x0FB8       [1]    BAUDCON
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [1]    CCP2CON
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    P1M0_bit
0x0FBD       [0]    P1M1_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    DC1B0_bit
0x0FBE       [2]    CCPR1
0x0FBE       [1]    CCPR1L
0x0FBF       [1]    CCPR1H
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ACQT1_bit
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ADFM_bit
0x0FC0       [0]    ADCS1_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [0]    ACQT0_bit
0x0FC0       [0]    ADCS2_bit
0x0FC1       [0]    VCFG0_bit
0x0FC1       [0]    VCFG1_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG2_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    CHS3_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    CHS1_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [0]    GCEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    ACKEN_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM2_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    SMP_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    T2OUTPS2_bit
0x0FCA       [0]    T2OUTPS1_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    T2OUTPS3_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    T2OUTPS0_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    SBOREN_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    BOR_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [1]    WDTCON
0x0FD2       [1]    HLVDCON
0x0FD2       [1]    LVDCON
0x0FD2       [0]    HLVDL0_bit
0x0FD2       [0]    HLVDL1_bit
0x0FD2       [0]    LVV3_bit
0x0FD2       [0]    BGST_bit
0x0FD2       [0]    HLVDL2_bit
0x0FD2       [0]    VDIRMAG_bit
0x0FD2       [0]    IVRST_bit
0x0FD2       [0]    HLVDL3_bit
0x0FD2       [0]    HLVDEN_bit
0x0FD2       [0]    LVV2_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVV0_bit
0x0FD2       [0]    LVV1_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD3       [0]    IRCF1_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [0]    IRCF2_bit
0x0FD3       [0]    OSTS_bit
0x0FD3       [0]    SCS0_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    SCS1_bit
0x0FD4       [1]    DEBUG
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T016BIT_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    PSA_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD8       [0]    DC_bit
0x0FD8       [0]    C_bit
0x0FD8       [0]    Z_bit
0x0FD8       [0]    N_bit
0x0FD8       [0]    OV_bit
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2IP_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2IF_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [1]    INTCON2
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    RBIF_bit
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU0_bit
0x0FF9       [1]    PCL
0x0FF9       [1]    PC
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU3_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    SP4_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    STKUNF_bit
0x0FFD       [1]    TOSL
0x0FFD       [1]    TOS
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1CC0       [2]    ?ICS_newPacmanOrientation
0x1CC2       [2]    ?ICS_newPacman_y
0x1CC4       [2]    ?ICS_newPacman_x
0x1CC6       [2]    ?ICS_QTD_FOOD
0x1CC8       [2]    ?ICS_new_ghost_y
0x1CCA       [2]    ?ICS_new_ghost_x
0x1CCC       [2]    ?ICS_IS_FINISH
0x1CCE       [1]    ?ICS_pacman_orientation
0x1CCF       [2]    ?ICS_ghost_x
0x1CD1       [2]    ?ICS_pacman_y
0x1CD3       [2]    ?ICS_pacman_x
0x1CD5       [2]    ?ICS_ghost_y
0x1CD7       [2]    ?ICS?lstr5_compy
0x1CD9       [2]    ?ICS_move_ghost_bool
0x1CDB       [1]    ?ICS_command
0x1CDC       [2]    ?ICS_generate_food_bool
0x1CDE       [2]    ?ICS?lstr6_compy
0x1CE0       [2]    ?ICS_isStarted
0x1CE2       [2]    ?ICS_food_x
0x1CE4       [1]    ?ICS_old_ghost_obj
0x1CE5       [2]    ?ICS_food_y
0x1CE7       [2]    ?ICS_cnt
0x1CE9       [2]    ?ICS_cnt2
0x1CEB       [2]    ?ICS_IS_GAME_OVER
0x1CED       [1]    ?ICS_barrier_orientation
0x1CEE      [10]    ?ICS?lstr3_compy
0x1CF8       [4]    ?ICS?lstr4_compy
0x1CFC       [2]    ?ICS_j
0x1CFE       [2]    ?ICS_i
0x1D00       [1]    ?ICS_ghost_orientation
0x1D01       [1]    ?ICS_food_orientation
0x1D02      [32]    _ghost
0x1D22      [32]    _obstacle
0x1D42      [32]    _blank
0x1D62      [32]    _food
0x1D82      [32]    _pacman_right
0x1DA2      [32]    _pacman_up
0x1DC2      [32]    _pacman_left
0x1DE2      [32]    _pacman_down
//** Label List: ** 
//----------------------------------------------
  L_getSprite0
  L_getSprite1
  L_getSprite2
  L_getSprite3
  L_getSprite4
  L_getSprite5
  L_getSprite6
  L_getSprite7
  L_getSprite8
  L_getSprite9
  L_getSprite10
  L_getSprite11
  L_getSprite12
  L_move_ghost13
  L_move_ghost14
  L_move_ghost15
  L_move_ghost16
  L_move_ghost17
  L_move_ghost18
  L_move_ghost19
  L_move_ghost20
  L_move_ghost21
  L_move_ghost22
  L_move_ghost23
  L_move_ghost24
  L_move_ghost25
  L_move_ghost26
  L_move_ghost27
  L_move_ghost28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_interrupt34
  L_interrupt35
  L_interrupt36
  L_Le_Teclado37
  L_Le_Teclado38
  L_Le_Teclado39
  L_Le_Teclado40
  L_Le_Teclado41
  L_Le_Teclado42
  L_Le_Teclado43
  L_Le_Teclado44
  L_Le_Teclado45
  L_Le_Teclado46
  L_Le_Teclado47
  L_Le_Teclado48
  L_Le_Teclado49
  L_Le_Teclado50
  L_Le_Teclado51
  L_Le_Teclado52
  L_Le_Teclado53
  L_Le_Teclado54
  L_Le_Teclado55
  L_Le_Teclado56
  L_Le_Teclado57
  L_Le_Teclado58
  L_Le_Teclado59
  L_Le_Teclado60
  L_Le_Teclado61
  L_Le_Teclado62
  L_Le_Teclado63
  L_Le_Teclado64
  L_Le_Teclado65
  L_Le_Teclado66
  L_Le_Teclado67
  L_Le_Teclado68
  L_Le_Teclado69
  L_Le_Teclado70
  L_Le_Teclado71
  L_Le_Teclado72
  L_Le_Teclado73
  L_Le_Teclado74
  L_Le_Teclado75
  L_Le_Teclado76
  L_Le_Teclado77
  L_Le_Teclado78
  L_Le_Teclado79
  L_Le_Teclado80
  L_Le_Teclado81
  L_Le_Teclado82
  L_Le_Teclado83
  L_Le_Teclado84
  L_Print_World85
  L_Print_World86
  L_Print_World87
  L_Print_World88
  L_Print_World89
  L_Print_World90
  L_Create_World91
  L_Create_World92
  L_Create_World93
  L_Create_World94
  L_Create_World95
  L_Create_World96
  L_generate_food97
  L_update_pacman_orientation98
  L_update_pacman_orientation99
  L_update_pacman_orientation100
  L_update_pacman_orientation101
  L_update_pacman_orientation102
  L_update_pacman_orientation103
  L_update_pacman_orientation104
  L_update_pacman105
  L_update_pacman106
  L_update_pacman107
  L_update_pacman108
  L_update_pacman109
  L_update_pacman110
  L_update_pacman111
  L_update_pacman112
  L_update_pacman113
  L_update_pacman114
  L_update_pacman115
  L_update_pacman116
  L_update_pacman117
  L_update_pacman118
  L_Start_Screen119
  L_Start_Screen120
  L_Finish121
  L_Finish122
  L_Finish123
  L_Finish124
  L_Finish125
  L_Finish126
  L_Finish127
  L_Finish128
  L_Start_Screen_1129
  L_main130
  L_main131
  L_main132
  L_main133
  L_main134
  L_main135
  L_main136
  L_main137
  L_main138
  L_main139
  L_main140
  L_main141
  L_main142
  L_main143
  L_main144
  L_main145
  L__move_ghost146
  L__move_ghost147
  L__main148
  _print
  _print_text
  _getSprite
  _printCoordinate
  _InitTimer2
  _move_ghost
  L__move_ghost149
  L__move_ghost150
  L__move_ghost151
  L__move_ghost152
  L__move_ghost153
  L__move_ghost154
  L__move_ghost155
  L__move_ghost156
  L__move_ghost157
  L__move_ghost158
  _interrupt
  L__interrupt159
  L__interrupt160
  L__interrupt161
  L__interrupt162
  L__interrupt163
  _Le_Teclado
  _Print_World
  L__Print_World164
  L__Print_World165
  _Create_World
  L__Create_World166
  L__Create_World167
  _generate_food
  L__generate_food168
  _update_pacman_orientation
  L__update_pacman_orientation169
  L__update_pacman_orientation170
  L__update_pacman_orientation171
  L__update_pacman_orientation172
  _update_pacman
  L__update_pacman173
  L__update_pacman174
  L__update_pacman175
  L__update_pacman176
  L__update_pacman177
  L__update_pacman178
  L__update_pacman179
  _Start_Screen
  _Finish
  L__Finish180
  L__Finish181
  _Start_Screen_1
  _main
  L__main182
  L__main183
  L__main184
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  _abs
  L__abs92
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod93
  L___Lib_CStdlib_strtod94
  L___Lib_CStdlib_strtod95
  _atof
  _atoi
  L__atoi96
  L__atoi97
  L__atoi98
  L__atoi99
  _atol
  L__atol100
  L__atol101
  _div
  _ldiv
  _uldiv
  _labs
  L__labs102
  _max
  L__max103
  _min
  L__min104
  _srand
  _rand
  _xtoi
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_100ms7
  L_Delay_10ms8
  L_Delay_1sec9
  L____Boot_Delay4k10
  L____Boot_Delay8k11
  L____Boot_Delay12k12
  L____Boot_Delay16k13
  L____Boot_Delay24k14
  L____Boot_Delay32k15
  L____Boot_Delay48k16
  L____Boot_Delay64k17
  L____Boot_Delay128k18
  L_Delay_Cyc19
  L_Delay_Cyc20
  L_VDelay_ms21
  L_VDelay_ms22
  L_VDelay_ms23
  L_VDelay_Advanced_ms24
  L_VDelay_Advanced_ms25
  L_VDelay_Advanced_ms26
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms27
  L__VDelay_ms28
  L__VDelay_ms29
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms30
  L__VDelay_Advanced_ms31
  L__VDelay_Advanced_ms32
  L_I2C1_Is_Idle0
  L_I2C1_Is_Idle1
  L_I2C1_Start2
  L_I2C1_Start3
  L_I2C1_Start4
  L_I2C1_Start5
  L_I2C1_Start6
  L_I2C1_Start7
  L_I2C1_Start8
  L_I2C1_Start9
  L_I2C1_Repeated_Start10
  L_I2C1_Repeated_Start11
  L_I2C1_Rd12
  L_I2C1_Rd13
  L_I2C1_Rd14
  L_I2C1_Rd15
  L_I2C1_Rd16
  L_I2C1_Rd17
  L_I2C1_Wr18
  L_I2C1_Wr19
  L_I2C1_Wr20
  L_I2C1_Wr21
  L_I2C1_Wr22
  L_I2C1_Wr23
  _I2C1_Init
  _I2C1_Is_Idle
  _I2C1_Start
  L__I2C1_Start24
  L__I2C1_Start25
  _I2C1_Repeated_Start
  _I2C1_Rd
  _I2C1_Wr
  _I2C1_Stop
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  L_Sound_Play0
  L_Sound_Play1
  L_Sound_Play2
  L_Sound_Play3
  L_Sound_Play4
  L_Sound_Play5
  L_Sound_Play6
  L_Sound_Play7
  L_Sound_Play8
  L_Sound_Play9
  L_Sound_Play10
  _Sound_Init
  L__Sound_Init11
  L__Sound_Init12
  _Sound_Play
  L__Sound_Play13
  L__Sound_Play14
  L__Sound_Play15
  L__Sound_Play16
  L__Sound_Play17
  L__Sound_Play18
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_T6963C_waitReady0
  L_T6963C_waitReady1
  L_T6963C_fill2
  L_T6963C_fill3
  L_T6963C_image4
  L_T6963C_image5
  L_T6963C_sprite6
  L_T6963C_sprite7
  L_T6963C_sprite8
  L_T6963C_sprite9
  L_T6963C_sprite10
  L_T6963C_sprite11
  L_T6963C_write_text12
  L_T6963C_write_text13
  L_T6963C_circle14
  L_T6963C_circle15
  L_T6963C_circle16
  L_T6963C_circle17
  L_T6963C_box18
  L_T6963C_box19
  L_T6963C_line20
  L_T6963C_line21
  L_T6963C_line22
  L_T6963C_line23
  L_T6963C_line24
  L_T6963C_line25
  L_T6963C_line26
  L_T6963C_line27
  L_T6963C_line28
  L_T6963C_line29
  L_T6963C_line30
  L_T6963C_line31
  L_T6963C_dot32
  L_T6963C_dot33
  L_T6963C_dot34
  L_T6963C_dot35
  _T6963C_waitReady
  _T6963C_writeData
  _T6963C_writeCommand
  _T6963C_fill
  L__T6963C_fill36
  _T6963C_image
  L__T6963C_image37
  _T6963C_sprite
  L__T6963C_sprite38
  _T6963C_set_cursor
  _T6963C_write_char
  _T6963C_write_text
  _T6963C_circle
  L__T6963C_circle39
  L__T6963C_circle40
  _T6963C_box
  L__T6963C_box41
  _T6963C_rectangle
  _T6963C_line
  L__T6963C_line42
  L__T6963C_line43
  L__T6963C_line44
  L__T6963C_line45
  L__T6963C_line46
  L__T6963C_line47
  L__T6963C_line48
  _T6963C_setPtr
  _T6963C_dot
  L__T6963C_dot49
  L__T6963C_dot50
  L__T6963C_dot51
  L__T6963C_dot52
  _T6963C_init
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
  L_getSprite0
  L_getSprite1
  L_getSprite2
  L_getSprite3
  L_getSprite4
  L_getSprite5
  L_getSprite6
  L_getSprite7
  L_getSprite8
  L_getSprite9
  L_getSprite10
  L_getSprite11
  L_getSprite12
  L_move_ghost13
  L_move_ghost14
  L_move_ghost15
  L_move_ghost16
  L_move_ghost17
  L_move_ghost18
  L_move_ghost19
  L_move_ghost20
  L_move_ghost21
  L_move_ghost22
  L_move_ghost23
  L_move_ghost24
  L_move_ghost25
  L_move_ghost26
  L_move_ghost27
  L_move_ghost28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_interrupt34
  L_interrupt35
  L_interrupt36
  L_Le_Teclado37
  L_Le_Teclado38
  L_Le_Teclado39
  L_Le_Teclado40
  L_Le_Teclado41
  L_Le_Teclado42
  L_Le_Teclado43
  L_Le_Teclado44
  L_Le_Teclado45
  L_Le_Teclado46
  L_Le_Teclado47
  L_Le_Teclado48
  L_Le_Teclado49
  L_Le_Teclado50
  L_Le_Teclado51
  L_Le_Teclado52
  L_Le_Teclado53
  L_Le_Teclado54
  L_Le_Teclado55
  L_Le_Teclado56
  L_Le_Teclado57
  L_Le_Teclado58
  L_Le_Teclado59
  L_Le_Teclado60
  L_Le_Teclado61
  L_Le_Teclado62
  L_Le_Teclado63
  L_Le_Teclado64
  L_Le_Teclado65
  L_Le_Teclado66
  L_Le_Teclado67
  L_Le_Teclado68
  L_Le_Teclado69
  L_Le_Teclado70
  L_Le_Teclado71
  L_Le_Teclado72
  L_Le_Teclado73
  L_Le_Teclado74
  L_Le_Teclado75
  L_Le_Teclado76
  L_Le_Teclado77
  L_Le_Teclado78
  L_Le_Teclado79
  L_Le_Teclado80
  L_Le_Teclado81
  L_Le_Teclado82
  L_Le_Teclado83
  L_Le_Teclado84
  L_Print_World85
  L_Print_World86
  L_Print_World87
  L_Print_World88
  L_Print_World89
  L_Print_World90
  L_Create_World91
  L_Create_World92
  L_Create_World93
  L_Create_World94
  L_Create_World95
  L_Create_World96
  L_generate_food97
  L_update_pacman_orientation98
  L_update_pacman_orientation99
  L_update_pacman_orientation100
  L_update_pacman_orientation101
  L_update_pacman_orientation102
  L_update_pacman_orientation103
  L_update_pacman_orientation104
  L_update_pacman105
  L_update_pacman106
  L_update_pacman107
  L_update_pacman108
  L_update_pacman109
  L_update_pacman110
  L_update_pacman111
  L_update_pacman112
  L_update_pacman113
  L_update_pacman114
  L_update_pacman115
  L_update_pacman116
  L_update_pacman117
  L_update_pacman118
  L_Start_Screen119
  L_Start_Screen120
  L_Finish121
  L_Finish122
  L_Finish123
  L_Finish124
  L_Finish125
  L_Finish126
  L_Finish127
  L_Finish128
  L_Start_Screen_1129
  L_main130
  L_main131
  L_main132
  L_main133
  L_main134
  L_main135
  L_main136
  L_main137
  L_main138
  L_main139
  L_main140
  L_main141
  L_main142
  L_main143
  L_main144
  L_main145
  L__move_ghost146
  L__move_ghost147
  L__main148
  _print
  _print_text
  _getSprite
  _printCoordinate
  _InitTimer2
  _move_ghost
  L__move_ghost149
  L__move_ghost150
  L__move_ghost151
  L__move_ghost152
  L__move_ghost153
  L__move_ghost154
  L__move_ghost155
  L__move_ghost156
  L__move_ghost157
  L__move_ghost158
  _interrupt
  L__interrupt159
  L__interrupt160
  L__interrupt161
  L__interrupt162
  L__interrupt163
  _Le_Teclado
  _Print_World
  L__Print_World164
  L__Print_World165
  _Create_World
  L__Create_World166
  L__Create_World167
  _generate_food
  L__generate_food168
  _update_pacman_orientation
  L__update_pacman_orientation169
  L__update_pacman_orientation170
  L__update_pacman_orientation171
  L__update_pacman_orientation172
  _update_pacman
  L__update_pacman173
  L__update_pacman174
  L__update_pacman175
  L__update_pacman176
  L__update_pacman177
  L__update_pacman178
  L__update_pacman179
  _Start_Screen
  _Finish
  L__Finish180
  L__Finish181
  _Start_Screen_1
  _main
  L__main182
  L__main183
  L__main184
